
Diode Temp Sensor.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000005c  00800100  00000f2c  00000fa0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000f2c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005c  00000000  00000000  00000ffc  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001058  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000110  00000000  00000000  00001094  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000014a8  00000000  00000000  000011a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000b90  00000000  00000000  0000264c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000093f  00000000  00000000  000031dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000264  00000000  00000000  00003b1c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000064b  00000000  00000000  00003d80  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000a5e  00000000  00000000  000043cb  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000d8  00000000  00000000  00004e29  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   8:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  10:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  54:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ec e2       	ldi	r30, 0x2C	; 44
  7c:	ff e0       	ldi	r31, 0x0F	; 15
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	ac 35       	cpi	r26, 0x5C	; 92
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>
  8a:	0e 94 33 02 	call	0x466	; 0x466 <main>
  8e:	0c 94 94 07 	jmp	0xf28	; 0xf28 <_exit>

00000092 <__bad_interrupt>:
  92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <ADCRead>:
#include <util/delay.h>

//Adds a basic low pass filter to the ADC input
#define number_samples 16384

uint16_t ADCRead(uint8_t pin){
  96:	8f 92       	push	r8
  98:	9f 92       	push	r9
  9a:	af 92       	push	r10
  9c:	bf 92       	push	r11
  9e:	ef 92       	push	r14
  a0:	ff 92       	push	r15
  a2:	0f 93       	push	r16
  a4:	1f 93       	push	r17
  a6:	cf 93       	push	r28
  a8:	df 93       	push	r29

	uint16_t input; //We're going to sample and average from 16 readings. 
	double sum = 0; //The sum of all samples.
	double average = 0; // the average of all the sample
	
	ADCSRB &= 0x00; //Auto Trigger = Free Running mode
  aa:	eb e7       	ldi	r30, 0x7B	; 123
  ac:	f0 e0       	ldi	r31, 0x00	; 0
  ae:	90 81       	ld	r25, Z
  b0:	10 82       	st	Z, r1
	ADCSRA |= (1 << ADEN);                // ADC Enable; Interupt Disable; Freq/1 
  b2:	ea e7       	ldi	r30, 0x7A	; 122
  b4:	f0 e0       	ldi	r31, 0x00	; 0
  b6:	90 81       	ld	r25, Z
  b8:	90 68       	ori	r25, 0x80	; 128
  ba:	90 83       	st	Z, r25
	ADMUX |= (1 << REFS0); //Set reference, AVcc
  bc:	ec e7       	ldi	r30, 0x7C	; 124
  be:	f0 e0       	ldi	r31, 0x00	; 0
  c0:	90 81       	ld	r25, Z
  c2:	90 64       	ori	r25, 0x40	; 64
  c4:	90 83       	st	Z, r25
	//ADMUX |= ((1 << REFS0) | (1 << REFS1)) ; //Set Internal 1.1v reference		  
	
	ADMUX &= 0b11110000;
  c6:	90 81       	ld	r25, Z
  c8:	90 7f       	andi	r25, 0xF0	; 240
  ca:	90 83       	st	Z, r25
	    
	ADMUX |= pin;  //Set input pin
  cc:	90 81       	ld	r25, Z
  ce:	89 2b       	or	r24, r25
  d0:	80 83       	st	Z, r24
  d2:	e1 2c       	mov	r14, r1
  d4:	68 94       	set
  d6:	ff 24       	eor	r15, r15
  d8:	f6 f8       	bld	r15, 6
#define number_samples 16384

uint16_t ADCRead(uint8_t pin){

	uint16_t input; //We're going to sample and average from 16 readings. 
	double sum = 0; //The sum of all samples.
  da:	81 2c       	mov	r8, r1
  dc:	91 2c       	mov	r9, r1
  de:	54 01       	movw	r10, r8
	ADMUX |= pin;  //Set input pin
	
	uint16_t i;
	for(i = 0; i < number_samples; i++) {
	
		ADCSRA |= (1 << ADSC); //Start Conversation
  e0:	ca e7       	ldi	r28, 0x7A	; 122
  e2:	d0 e0       	ldi	r29, 0x00	; 0

		while( (ADCSRA & (1 << ADSC)) ); //Wait till conversation complete ( ADSC == 0 )

		ADCSRA |= (1 << ADIF);   // Clear ADC Interrupt Flag
		
		input = ADC; 
  e4:	08 e7       	ldi	r16, 0x78	; 120
  e6:	10 e0       	ldi	r17, 0x00	; 0
	ADMUX |= pin;  //Set input pin
	
	uint16_t i;
	for(i = 0; i < number_samples; i++) {
	
		ADCSRA |= (1 << ADSC); //Start Conversation
  e8:	88 81       	ld	r24, Y
  ea:	80 64       	ori	r24, 0x40	; 64
  ec:	88 83       	st	Y, r24

		while( (ADCSRA & (1 << ADSC)) ); //Wait till conversation complete ( ADSC == 0 )
  ee:	88 81       	ld	r24, Y
  f0:	86 fd       	sbrc	r24, 6
  f2:	fd cf       	rjmp	.-6      	; 0xee <ADCRead+0x58>

		ADCSRA |= (1 << ADIF);   // Clear ADC Interrupt Flag
  f4:	88 81       	ld	r24, Y
  f6:	80 61       	ori	r24, 0x10	; 16
  f8:	88 83       	st	Y, r24
		
		input = ADC; 
  fa:	f8 01       	movw	r30, r16
  fc:	80 81       	ld	r24, Z
  fe:	91 81       	ldd	r25, Z+1	; 0x01
		sum = sum + input;
 100:	bc 01       	movw	r22, r24
 102:	80 e0       	ldi	r24, 0x00	; 0
 104:	90 e0       	ldi	r25, 0x00	; 0
 106:	0e 94 52 03 	call	0x6a4	; 0x6a4 <__floatunsisf>
 10a:	9b 01       	movw	r18, r22
 10c:	ac 01       	movw	r20, r24
 10e:	c5 01       	movw	r24, r10
 110:	b4 01       	movw	r22, r8
 112:	0e 94 b7 02 	call	0x56e	; 0x56e <__addsf3>
 116:	4b 01       	movw	r8, r22
 118:	5c 01       	movw	r10, r24
 11a:	f1 e0       	ldi	r31, 0x01	; 1
 11c:	ef 1a       	sub	r14, r31
 11e:	f1 08       	sbc	r15, r1
	ADMUX &= 0b11110000;
	    
	ADMUX |= pin;  //Set input pin
	
	uint16_t i;
	for(i = 0; i < number_samples; i++) {
 120:	19 f7       	brne	.-58     	; 0xe8 <ADCRead+0x52>
		input = ADC; 
		sum = sum + input;
		
	}
	
	average = sum / number_samples;
 122:	20 e0       	ldi	r18, 0x00	; 0
 124:	30 e0       	ldi	r19, 0x00	; 0
 126:	40 e8       	ldi	r20, 0x80	; 128
 128:	58 e3       	ldi	r21, 0x38	; 56
 12a:	0e 94 e0 03 	call	0x7c0	; 0x7c0 <__mulsf3>
		
	return (uint16_t) average;
 12e:	0e 94 23 03 	call	0x646	; 0x646 <__fixunssfsi>
}
 132:	cb 01       	movw	r24, r22
 134:	df 91       	pop	r29
 136:	cf 91       	pop	r28
 138:	1f 91       	pop	r17
 13a:	0f 91       	pop	r16
 13c:	ff 90       	pop	r15
 13e:	ef 90       	pop	r14
 140:	bf 90       	pop	r11
 142:	af 90       	pop	r10
 144:	9f 90       	pop	r9
 146:	8f 90       	pop	r8
 148:	08 95       	ret

0000014a <toggle_e>:

    while ( (c = pgm_read_byte(progmem_s++)) ) {
        lcd_putc(c);
    }

}/* lcd_puts_p */
 14a:	5e 9a       	sbi	0x0b, 6	; 11
 14c:	00 00       	nop
 14e:	5e 98       	cbi	0x0b, 6	; 11
 150:	08 95       	ret

00000152 <lcd_write>:
 152:	cf 93       	push	r28
 154:	df 93       	push	r29
 156:	d8 2f       	mov	r29, r24
 158:	66 23       	and	r22, r22
 15a:	11 f0       	breq	.+4      	; 0x160 <lcd_write+0xe>
 15c:	5c 9a       	sbi	0x0b, 4	; 11
 15e:	01 c0       	rjmp	.+2      	; 0x162 <lcd_write+0x10>
 160:	5c 98       	cbi	0x0b, 4	; 11
 162:	5d 98       	cbi	0x0b, 5	; 11
 164:	8a b1       	in	r24, 0x0a	; 10
 166:	8f 60       	ori	r24, 0x0F	; 15
 168:	8a b9       	out	0x0a, r24	; 10
 16a:	cb b1       	in	r28, 0x0b	; 11
 16c:	c0 7f       	andi	r28, 0xF0	; 240
 16e:	8d 2f       	mov	r24, r29
 170:	82 95       	swap	r24
 172:	8f 70       	andi	r24, 0x0F	; 15
 174:	8c 2b       	or	r24, r28
 176:	8b b9       	out	0x0b, r24	; 11
 178:	0e 94 a5 00 	call	0x14a	; 0x14a <toggle_e>
 17c:	df 70       	andi	r29, 0x0F	; 15
 17e:	dc 2b       	or	r29, r28
 180:	db b9       	out	0x0b, r29	; 11
 182:	0e 94 a5 00 	call	0x14a	; 0x14a <toggle_e>
 186:	cf 60       	ori	r28, 0x0F	; 15
 188:	cb b9       	out	0x0b, r28	; 11
 18a:	df 91       	pop	r29
 18c:	cf 91       	pop	r28
 18e:	08 95       	ret

00000190 <lcd_read>:
 190:	88 23       	and	r24, r24
 192:	11 f0       	breq	.+4      	; 0x198 <lcd_read+0x8>
 194:	5c 9a       	sbi	0x0b, 4	; 11
 196:	01 c0       	rjmp	.+2      	; 0x19a <lcd_read+0xa>
 198:	5c 98       	cbi	0x0b, 4	; 11
 19a:	5d 9a       	sbi	0x0b, 5	; 11
 19c:	8a b1       	in	r24, 0x0a	; 10
 19e:	80 7f       	andi	r24, 0xF0	; 240
 1a0:	8a b9       	out	0x0a, r24	; 10
 1a2:	5e 9a       	sbi	0x0b, 6	; 11
 1a4:	00 00       	nop
 1a6:	29 b1       	in	r18, 0x09	; 9
 1a8:	5e 98       	cbi	0x0b, 6	; 11
 1aa:	00 00       	nop
 1ac:	5e 9a       	sbi	0x0b, 6	; 11
 1ae:	00 00       	nop
 1b0:	99 b1       	in	r25, 0x09	; 9
 1b2:	22 95       	swap	r18
 1b4:	20 7f       	andi	r18, 0xF0	; 240
 1b6:	89 2f       	mov	r24, r25
 1b8:	8f 70       	andi	r24, 0x0F	; 15
 1ba:	5e 98       	cbi	0x0b, 6	; 11
 1bc:	82 2b       	or	r24, r18
 1be:	08 95       	ret

000001c0 <lcd_waitbusy>:
 1c0:	80 e0       	ldi	r24, 0x00	; 0
 1c2:	0e 94 c8 00 	call	0x190	; 0x190 <lcd_read>
 1c6:	88 23       	and	r24, r24
 1c8:	dc f3       	brlt	.-10     	; 0x1c0 <lcd_waitbusy>
 1ca:	00 c0       	rjmp	.+0      	; 0x1cc <lcd_waitbusy+0xc>
 1cc:	00 c0       	rjmp	.+0      	; 0x1ce <lcd_waitbusy+0xe>
 1ce:	80 e0       	ldi	r24, 0x00	; 0
 1d0:	0e 94 c8 00 	call	0x190	; 0x190 <lcd_read>
 1d4:	08 95       	ret

000001d6 <lcd_command>:
 1d6:	cf 93       	push	r28
 1d8:	c8 2f       	mov	r28, r24
 1da:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_waitbusy>
 1de:	60 e0       	ldi	r22, 0x00	; 0
 1e0:	8c 2f       	mov	r24, r28
 1e2:	0e 94 a9 00 	call	0x152	; 0x152 <lcd_write>
 1e6:	cf 91       	pop	r28
 1e8:	08 95       	ret

000001ea <lcd_gotoxy>:
 1ea:	61 11       	cpse	r22, r1
 1ec:	04 c0       	rjmp	.+8      	; 0x1f6 <lcd_gotoxy+0xc>
 1ee:	80 58       	subi	r24, 0x80	; 128
 1f0:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <lcd_command>
 1f4:	08 95       	ret
 1f6:	80 54       	subi	r24, 0x40	; 64
 1f8:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <lcd_command>
 1fc:	08 95       	ret

000001fe <lcd_clrscr>:
 1fe:	81 e0       	ldi	r24, 0x01	; 1
 200:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <lcd_command>
 204:	08 95       	ret

00000206 <lcd_putc>:
 206:	cf 93       	push	r28
 208:	c8 2f       	mov	r28, r24
 20a:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_waitbusy>
 20e:	ca 30       	cpi	r28, 0x0A	; 10
 210:	49 f4       	brne	.+18     	; 0x224 <lcd_putc+0x1e>
 212:	80 34       	cpi	r24, 0x40	; 64
 214:	10 f0       	brcs	.+4      	; 0x21a <lcd_putc+0x14>
 216:	80 e0       	ldi	r24, 0x00	; 0
 218:	01 c0       	rjmp	.+2      	; 0x21c <lcd_putc+0x16>
 21a:	80 e4       	ldi	r24, 0x40	; 64
 21c:	80 58       	subi	r24, 0x80	; 128
 21e:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <lcd_command>
 222:	04 c0       	rjmp	.+8      	; 0x22c <lcd_putc+0x26>
 224:	61 e0       	ldi	r22, 0x01	; 1
 226:	8c 2f       	mov	r24, r28
 228:	0e 94 a9 00 	call	0x152	; 0x152 <lcd_write>
 22c:	cf 91       	pop	r28
 22e:	08 95       	ret

00000230 <lcd_puts>:
 230:	cf 93       	push	r28
 232:	df 93       	push	r29
 234:	ec 01       	movw	r28, r24
 236:	21 96       	adiw	r28, 0x01	; 1
 238:	fc 01       	movw	r30, r24
 23a:	80 81       	ld	r24, Z
 23c:	88 23       	and	r24, r24
 23e:	29 f0       	breq	.+10     	; 0x24a <lcd_puts+0x1a>
 240:	0e 94 03 01 	call	0x206	; 0x206 <lcd_putc>
 244:	89 91       	ld	r24, Y+
 246:	81 11       	cpse	r24, r1
 248:	fb cf       	rjmp	.-10     	; 0x240 <lcd_puts+0x10>
 24a:	df 91       	pop	r29
 24c:	cf 91       	pop	r28
 24e:	08 95       	ret

00000250 <lcd_init>:
                   LCD_DISP_ON_CURSOR      display on, cursor on
                   LCD_DISP_CURSOR_BLINK   display on, cursor on flashing
Returns:  none
*************************************************************************/
void lcd_init(uint8_t dispAttr)
{
 250:	cf 93       	push	r28
 252:	c8 2f       	mov	r28, r24
      && ( &LCD_RS_PORT == &LCD_DATA0_PORT) && ( &LCD_RW_PORT == &LCD_DATA0_PORT) && (&LCD_E_PORT == &LCD_DATA0_PORT)
      && (LCD_DATA0_PIN == 0 ) && (LCD_DATA1_PIN == 1) && (LCD_DATA2_PIN == 2) && (LCD_DATA3_PIN == 3) 
      && (LCD_RS_PIN == 4 ) && (LCD_RW_PIN == 5) && (LCD_E_PIN == 6 ) )
    {
        /* configure all port bits as output (all LCD lines on same port) */
        DDR(LCD_DATA0_PORT) |= 0x7F;
 254:	9a b1       	in	r25, 0x0a	; 10
 256:	9f 67       	ori	r25, 0x7F	; 127
 258:	9a b9       	out	0x0a, r25	; 10
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 25a:	8f e9       	ldi	r24, 0x9F	; 159
 25c:	9f e0       	ldi	r25, 0x0F	; 15
 25e:	01 97       	sbiw	r24, 0x01	; 1
 260:	f1 f7       	brne	.-4      	; 0x25e <lcd_init+0xe>
 262:	00 c0       	rjmp	.+0      	; 0x264 <lcd_init+0x14>
 264:	00 00       	nop
        DDR(LCD_DATA3_PORT) |= _BV(LCD_DATA3_PIN);
    }
    delay(LCD_DELAY_BOOTUP);             /* wait 16ms or more after power-on       */
    
    /* initial write to lcd is 8bit */
    LCD_DATA1_PORT |= _BV(LCD_DATA1_PIN);    // LCD_FUNCTION>>4;
 266:	59 9a       	sbi	0x0b, 1	; 11
    LCD_DATA0_PORT |= _BV(LCD_DATA0_PIN);    // LCD_FUNCTION_8BIT>>4;
 268:	58 9a       	sbi	0x0b, 0	; 11
    lcd_e_toggle();
 26a:	0e 94 a5 00 	call	0x14a	; 0x14a <toggle_e>
 26e:	81 ee       	ldi	r24, 0xE1	; 225
 270:	94 e0       	ldi	r25, 0x04	; 4
 272:	01 97       	sbiw	r24, 0x01	; 1
 274:	f1 f7       	brne	.-4      	; 0x272 <lcd_init+0x22>
 276:	00 c0       	rjmp	.+0      	; 0x278 <lcd_init+0x28>
 278:	00 00       	nop
    delay(LCD_DELAY_INIT);               /* delay, busy flag can't be checked here */
   
    /* repeat last command */ 
    lcd_e_toggle();      
 27a:	0e 94 a5 00 	call	0x14a	; 0x14a <toggle_e>
 27e:	95 e1       	ldi	r25, 0x15	; 21
 280:	9a 95       	dec	r25
 282:	f1 f7       	brne	.-4      	; 0x280 <lcd_init+0x30>
 284:	00 00       	nop
    delay(LCD_DELAY_INIT_REP);           /* delay, busy flag can't be checked here */
    
    /* repeat last command a third time */
    lcd_e_toggle();      
 286:	0e 94 a5 00 	call	0x14a	; 0x14a <toggle_e>
 28a:	85 e1       	ldi	r24, 0x15	; 21
 28c:	8a 95       	dec	r24
 28e:	f1 f7       	brne	.-4      	; 0x28c <lcd_init+0x3c>
 290:	00 00       	nop
    delay(LCD_DELAY_INIT_REP);           /* delay, busy flag can't be checked here */

    /* now configure for 4bit mode */
    LCD_DATA0_PORT &= ~_BV(LCD_DATA0_PIN);   // LCD_FUNCTION_4BIT_1LINE>>4
 292:	58 98       	cbi	0x0b, 0	; 11
    lcd_e_toggle();
 294:	0e 94 a5 00 	call	0x14a	; 0x14a <toggle_e>
 298:	95 e1       	ldi	r25, 0x15	; 21
 29a:	9a 95       	dec	r25
 29c:	f1 f7       	brne	.-4      	; 0x29a <lcd_init+0x4a>
 29e:	00 00       	nop
    /* Display with KS0073 controller requires special commands for enabling 4 line mode */
	lcd_command(KS0073_EXTENDED_FUNCTION_REGISTER_ON);
	lcd_command(KS0073_4LINES_MODE);
	lcd_command(KS0073_EXTENDED_FUNCTION_REGISTER_OFF);
#else
    lcd_command(LCD_FUNCTION_DEFAULT);      /* function set: display lines  */
 2a0:	88 e2       	ldi	r24, 0x28	; 40
 2a2:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <lcd_command>
#endif
    lcd_command(LCD_DISP_OFF);              /* display off                  */
 2a6:	88 e0       	ldi	r24, 0x08	; 8
 2a8:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <lcd_command>
    lcd_clrscr();                           /* display clear                */ 
 2ac:	0e 94 ff 00 	call	0x1fe	; 0x1fe <lcd_clrscr>
    lcd_command(LCD_MODE_DEFAULT);          /* set entry mode               */
 2b0:	86 e0       	ldi	r24, 0x06	; 6
 2b2:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <lcd_command>
    lcd_command(dispAttr);                  /* display/cursor control       */
 2b6:	8c 2f       	mov	r24, r28
 2b8:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <lcd_command>

}/* lcd_init */
 2bc:	cf 91       	pop	r28
 2be:	08 95       	ret

000002c0 <lcd_Write>:
  lcd_write takes in 4 values.  
  
 ***************************************
 */

 void lcd_Write( uint16_t adc_reading_lm35, uint16_t adc_reading_diode, uint16_t temperture_lm35, uint16_t temperture_diode ){  //Not Tested
 2c0:	af 92       	push	r10
 2c2:	bf 92       	push	r11
 2c4:	cf 92       	push	r12
 2c6:	df 92       	push	r13
 2c8:	ef 92       	push	r14
 2ca:	ff 92       	push	r15
 2cc:	0f 93       	push	r16
 2ce:	1f 93       	push	r17
 2d0:	cf 93       	push	r28
 2d2:	df 93       	push	r29
 2d4:	cd b7       	in	r28, 0x3d	; 61
 2d6:	de b7       	in	r29, 0x3e	; 62
 2d8:	a2 97       	sbiw	r28, 0x22	; 34
 2da:	0f b6       	in	r0, 0x3f	; 63
 2dc:	f8 94       	cli
 2de:	de bf       	out	0x3e, r29	; 62
 2e0:	0f be       	out	0x3f, r0	; 63
 2e2:	cd bf       	out	0x3d, r28	; 61
 2e4:	d8 2e       	mov	r13, r24
 2e6:	c9 2e       	mov	r12, r25
 2e8:	b6 2e       	mov	r11, r22
 2ea:	a7 2e       	mov	r10, r23
 2ec:	8a 01       	movw	r16, r20
 2ee:	79 01       	movw	r14, r18

	lcd_init( LCD_DISP_ON );   //Turn the LCD on, without cursor.
 2f0:	8c e0       	ldi	r24, 0x0C	; 12
 2f2:	0e 94 28 01 	call	0x250	; 0x250 <lcd_init>

	char display_line1[17];   //Allocate memory for each line. char = 1B and theres a max of 16 char.
	char display_line2[17];   // 1B for the NULL character produced by sprintf.
	
	if ( (temperture_lm35 < 99) && (temperture_diode < 99) ){
 2f6:	03 36       	cpi	r16, 0x63	; 99
 2f8:	11 05       	cpc	r17, r1
 2fa:	08 f0       	brcs	.+2      	; 0x2fe <lcd_Write+0x3e>
 2fc:	9e c0       	rjmp	.+316    	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
 2fe:	83 e6       	ldi	r24, 0x63	; 99
 300:	e8 16       	cp	r14, r24
 302:	f1 04       	cpc	r15, r1
 304:	08 f0       	brcs	.+2      	; 0x308 <lcd_Write+0x48>
 306:	47 c0       	rjmp	.+142    	; 0x396 <lcd_Write+0xd6>
	
		sprintf(display_line1, "LM35 :%4.0d - %2dC", adc_reading_lm35, temperture_lm35);     //First line on the LCD
 308:	1f 93       	push	r17
 30a:	0f 93       	push	r16
 30c:	cf 92       	push	r12
 30e:	df 92       	push	r13
 310:	80 e0       	ldi	r24, 0x00	; 0
 312:	91 e0       	ldi	r25, 0x01	; 1
 314:	9f 93       	push	r25
 316:	8f 93       	push	r24
 318:	ce 01       	movw	r24, r28
 31a:	01 96       	adiw	r24, 0x01	; 1
 31c:	9f 93       	push	r25
 31e:	8f 93       	push	r24
 320:	0e 94 bc 04 	call	0x978	; 0x978 <sprintf>
		sprintf(display_line2, "DIODE:%4.0d - %2dC", adc_reading_diode, temperture_diode);   //Second line on the LCD
 324:	ff 92       	push	r15
 326:	ef 92       	push	r14
 328:	af 92       	push	r10
 32a:	bf 92       	push	r11
 32c:	83 e1       	ldi	r24, 0x13	; 19
 32e:	91 e0       	ldi	r25, 0x01	; 1
 330:	9f 93       	push	r25
 332:	8f 93       	push	r24
 334:	ce 01       	movw	r24, r28
 336:	42 96       	adiw	r24, 0x12	; 18
 338:	9f 93       	push	r25
 33a:	8f 93       	push	r24
 33c:	0e 94 bc 04 	call	0x978	; 0x978 <sprintf>
 340:	0f b6       	in	r0, 0x3f	; 63
 342:	f8 94       	cli
 344:	de bf       	out	0x3e, r29	; 62
 346:	0f be       	out	0x3f, r0	; 63
 348:	cd bf       	out	0x3d, r28	; 61
 34a:	66 c0       	rjmp	.+204    	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
		
	} else if ( (temperture_lm35 > 99) && (temperture_diode < 99) ) {
 34c:	93 e6       	ldi	r25, 0x63	; 99
 34e:	e9 16       	cp	r14, r25
 350:	f1 04       	cpc	r15, r1
 352:	08 f0       	brcs	.+2      	; 0x356 <lcd_Write+0x96>
 354:	44 c0       	rjmp	.+136    	; 0x3de <lcd_Write+0x11e>
		
		sprintf(display_line1, "LM35 :%4.0d -  :(", adc_reading_lm35);     //First line on the LCD
 356:	cf 92       	push	r12
 358:	df 92       	push	r13
 35a:	86 e2       	ldi	r24, 0x26	; 38
 35c:	91 e0       	ldi	r25, 0x01	; 1
 35e:	9f 93       	push	r25
 360:	8f 93       	push	r24
 362:	ce 01       	movw	r24, r28
 364:	01 96       	adiw	r24, 0x01	; 1
 366:	9f 93       	push	r25
 368:	8f 93       	push	r24
 36a:	0e 94 bc 04 	call	0x978	; 0x978 <sprintf>
		sprintf(display_line2, "DIODE:%4.0d - %2dC", adc_reading_diode, temperture_diode);   //Second line on the LCD		
 36e:	ff 92       	push	r15
 370:	ef 92       	push	r14
 372:	af 92       	push	r10
 374:	bf 92       	push	r11
 376:	83 e1       	ldi	r24, 0x13	; 19
 378:	91 e0       	ldi	r25, 0x01	; 1
 37a:	9f 93       	push	r25
 37c:	8f 93       	push	r24
 37e:	ce 01       	movw	r24, r28
 380:	42 96       	adiw	r24, 0x12	; 18
 382:	9f 93       	push	r25
 384:	8f 93       	push	r24
 386:	0e 94 bc 04 	call	0x978	; 0x978 <sprintf>
 38a:	0f b6       	in	r0, 0x3f	; 63
 38c:	f8 94       	cli
 38e:	de bf       	out	0x3e, r29	; 62
 390:	0f be       	out	0x3f, r0	; 63
 392:	cd bf       	out	0x3d, r28	; 61
 394:	41 c0       	rjmp	.+130    	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
		
	} else if ( (temperture_lm35 < 99) && (temperture_diode > 99) ) {
 396:	94 e6       	ldi	r25, 0x64	; 100
 398:	e9 16       	cp	r14, r25
 39a:	f1 04       	cpc	r15, r1
 39c:	00 f1       	brcs	.+64     	; 0x3de <lcd_Write+0x11e>
		
		sprintf(display_line1, "LM35 :%4.0d - %dC", adc_reading_lm35, temperture_lm35);     //First line on the LCD
 39e:	1f 93       	push	r17
 3a0:	0f 93       	push	r16
 3a2:	cf 92       	push	r12
 3a4:	df 92       	push	r13
 3a6:	88 e3       	ldi	r24, 0x38	; 56
 3a8:	91 e0       	ldi	r25, 0x01	; 1
 3aa:	9f 93       	push	r25
 3ac:	8f 93       	push	r24
 3ae:	ce 01       	movw	r24, r28
 3b0:	01 96       	adiw	r24, 0x01	; 1
 3b2:	9f 93       	push	r25
 3b4:	8f 93       	push	r24
 3b6:	0e 94 bc 04 	call	0x978	; 0x978 <sprintf>
		sprintf(display_line2, "DIODE:%4.0d -  :(", adc_reading_diode);   //Second line on the LCD
 3ba:	af 92       	push	r10
 3bc:	bf 92       	push	r11
 3be:	8a e4       	ldi	r24, 0x4A	; 74
 3c0:	91 e0       	ldi	r25, 0x01	; 1
 3c2:	9f 93       	push	r25
 3c4:	8f 93       	push	r24
 3c6:	ce 01       	movw	r24, r28
 3c8:	42 96       	adiw	r24, 0x12	; 18
 3ca:	9f 93       	push	r25
 3cc:	8f 93       	push	r24
 3ce:	0e 94 bc 04 	call	0x978	; 0x978 <sprintf>
 3d2:	0f b6       	in	r0, 0x3f	; 63
 3d4:	f8 94       	cli
 3d6:	de bf       	out	0x3e, r29	; 62
 3d8:	0f be       	out	0x3f, r0	; 63
 3da:	cd bf       	out	0x3d, r28	; 61
 3dc:	1d c0       	rjmp	.+58     	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
		
	} else {
		
		sprintf(display_line1, "LM35 :%4.0d -  :(", adc_reading_lm35);     //First line on the LCD
 3de:	cf 92       	push	r12
 3e0:	df 92       	push	r13
 3e2:	86 e2       	ldi	r24, 0x26	; 38
 3e4:	91 e0       	ldi	r25, 0x01	; 1
 3e6:	9f 93       	push	r25
 3e8:	8f 93       	push	r24
 3ea:	ce 01       	movw	r24, r28
 3ec:	01 96       	adiw	r24, 0x01	; 1
 3ee:	9f 93       	push	r25
 3f0:	8f 93       	push	r24
 3f2:	0e 94 bc 04 	call	0x978	; 0x978 <sprintf>
		sprintf(display_line2, "DIODE:%4.0d -  :(", adc_reading_diode);   //Second line on the LCD		
 3f6:	af 92       	push	r10
 3f8:	bf 92       	push	r11
 3fa:	8a e4       	ldi	r24, 0x4A	; 74
 3fc:	91 e0       	ldi	r25, 0x01	; 1
 3fe:	9f 93       	push	r25
 400:	8f 93       	push	r24
 402:	ce 01       	movw	r24, r28
 404:	42 96       	adiw	r24, 0x12	; 18
 406:	9f 93       	push	r25
 408:	8f 93       	push	r24
 40a:	0e 94 bc 04 	call	0x978	; 0x978 <sprintf>
 40e:	0f b6       	in	r0, 0x3f	; 63
 410:	f8 94       	cli
 412:	de bf       	out	0x3e, r29	; 62
 414:	0f be       	out	0x3f, r0	; 63
 416:	cd bf       	out	0x3d, r28	; 61
		
	}

	lcd_gotoxy((uint8_t) 0x0, (uint8_t) 0x0);    //Move cursor to the first line
 418:	60 e0       	ldi	r22, 0x00	; 0
 41a:	80 e0       	ldi	r24, 0x00	; 0
 41c:	0e 94 f5 00 	call	0x1ea	; 0x1ea <lcd_gotoxy>
	lcd_puts( display_line1 );               //display line 1
 420:	ce 01       	movw	r24, r28
 422:	01 96       	adiw	r24, 0x01	; 1
 424:	0e 94 18 01 	call	0x230	; 0x230 <lcd_puts>
	lcd_gotoxy((uint8_t) 0x0, (uint8_t) 0x1);    //Move cursor to the second line
 428:	61 e0       	ldi	r22, 0x01	; 1
 42a:	80 e0       	ldi	r24, 0x00	; 0
 42c:	0e 94 f5 00 	call	0x1ea	; 0x1ea <lcd_gotoxy>
	lcd_puts( display_line2 );                //display line 2
 430:	ce 01       	movw	r24, r28
 432:	42 96       	adiw	r24, 0x12	; 18
 434:	0e 94 18 01 	call	0x230	; 0x230 <lcd_puts>
 438:	05 c0       	rjmp	.+10     	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
	if ( (temperture_lm35 < 99) && (temperture_diode < 99) ){
	
		sprintf(display_line1, "LM35 :%4.0d - %2dC", adc_reading_lm35, temperture_lm35);     //First line on the LCD
		sprintf(display_line2, "DIODE:%4.0d - %2dC", adc_reading_diode, temperture_diode);   //Second line on the LCD
		
	} else if ( (temperture_lm35 > 99) && (temperture_diode < 99) ) {
 43a:	04 36       	cpi	r16, 0x64	; 100
 43c:	11 05       	cpc	r17, r1
 43e:	08 f0       	brcs	.+2      	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
 440:	85 cf       	rjmp	.-246    	; 0x34c <lcd_Write+0x8c>
 442:	cd cf       	rjmp	.-102    	; 0x3de <lcd_Write+0x11e>
	lcd_gotoxy((uint8_t) 0x0, (uint8_t) 0x0);    //Move cursor to the first line
	lcd_puts( display_line1 );               //display line 1
	lcd_gotoxy((uint8_t) 0x0, (uint8_t) 0x1);    //Move cursor to the second line
	lcd_puts( display_line2 );                //display line 2
	
 }
 444:	a2 96       	adiw	r28, 0x22	; 34
 446:	0f b6       	in	r0, 0x3f	; 63
 448:	f8 94       	cli
 44a:	de bf       	out	0x3e, r29	; 62
 44c:	0f be       	out	0x3f, r0	; 63
 44e:	cd bf       	out	0x3d, r28	; 61
 450:	df 91       	pop	r29
 452:	cf 91       	pop	r28
 454:	1f 91       	pop	r17
 456:	0f 91       	pop	r16
 458:	ff 90       	pop	r15
 45a:	ef 90       	pop	r14
 45c:	df 90       	pop	r13
 45e:	cf 90       	pop	r12
 460:	bf 90       	pop	r11
 462:	af 90       	pop	r10
 464:	08 95       	ret

00000466 <main>:
from 1 to 129. Thus, one does not need to use \c clock_div_t type as argument.
*/
void clock_prescale_set(clock_div_t __x)
{
    uint8_t __tmp = _BV(CLKPCE);
     __asm__ __volatile__ (
 466:	90 e0       	ldi	r25, 0x00	; 0
 468:	80 e8       	ldi	r24, 0x80	; 128
 46a:	0f b6       	in	r0, 0x3f	; 63
 46c:	f8 94       	cli
 46e:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
 472:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
 476:	0f be       	out	0x3f, r0	; 63
 478:	c0 e8       	ldi	r28, 0x80	; 128
 47a:	f1 2c       	mov	r15, r1
 47c:	2f 2d       	mov	r18, r15
 47e:	0f b6       	in	r0, 0x3f	; 63
 480:	f8 94       	cli
 482:	c0 93 61 00 	sts	0x0061, r28	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
 486:	20 93 61 00 	sts	0x0061, r18	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
 48a:	0f be       	out	0x3f, r0	; 63

	while(1){

		clock_prescale_set(clock_div_1); //Set freq to 8MHZ

		adc_reading_lm35 = ADCRead(LM35_pin);  //Reads ADC, the input is the pin number of the ADC
 48c:	8f 2d       	mov	r24, r15
 48e:	0e 94 4b 00 	call	0x96	; 0x96 <ADCRead>
 492:	5c 01       	movw	r10, r24
		adc_reading_diode = ADCRead(Diode_pin);
 494:	81 e0       	ldi	r24, 0x01	; 1
 496:	0e 94 4b 00 	call	0x96	; 0x96 <ADCRead>
 49a:	8c 01       	movw	r16, r24
		
		temperture_lm35 = temperture_model_lm35(adc_reading_lm35);
 49c:	c5 01       	movw	r24, r10
 49e:	0e 94 99 02 	call	0x532	; 0x532 <temperture_model_lm35>
 4a2:	6c 01       	movw	r12, r24
		temperture_diode = temperture_model_diode(adc_reading_diode);
 4a4:	c8 01       	movw	r24, r16
 4a6:	0e 94 64 02 	call	0x4c8	; 0x4c8 <temperture_model_diode>
 4aa:	23 e0       	ldi	r18, 0x03	; 3
 4ac:	0f b6       	in	r0, 0x3f	; 63
 4ae:	f8 94       	cli
 4b0:	c0 93 61 00 	sts	0x0061, r28	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
 4b4:	20 93 61 00 	sts	0x0061, r18	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
 4b8:	0f be       	out	0x3f, r0	; 63
		
		clock_prescale_set(clock_div_8);  //For some reason the display doesnt like 8MHz, but works fine with 1MHZ
		lcd_Write(adc_reading_lm35, adc_reading_diode, temperture_lm35, temperture_diode);
 4ba:	9c 01       	movw	r18, r24
 4bc:	a6 01       	movw	r20, r12
 4be:	b8 01       	movw	r22, r16
 4c0:	c5 01       	movw	r24, r10
 4c2:	0e 94 60 01 	call	0x2c0	; 0x2c0 <lcd_Write>
	}
 4c6:	da cf       	rjmp	.-76     	; 0x47c <main+0x16>

000004c8 <temperture_model_diode>:
#include "TempModel.h"


uint16_t temperture_model_diode( uint16_t adc_value ){     //Assuming the ADC output is less than 1024
 4c8:	cf 92       	push	r12
 4ca:	df 92       	push	r13
 4cc:	ef 92       	push	r14
 4ce:	ff 92       	push	r15
 4d0:	0f 93       	push	r16
 4d2:	1f 93       	push	r17

	uint32_t buffer = 0;
	uint16_t temperture = 0;
	uint32_t buf_adc;
	
	buf_adc = adc_value * (60.481);
 4d4:	bc 01       	movw	r22, r24
 4d6:	80 e0       	ldi	r24, 0x00	; 0
 4d8:	90 e0       	ldi	r25, 0x00	; 0
 4da:	0e 94 52 03 	call	0x6a4	; 0x6a4 <__floatunsisf>
 4de:	2b e8       	ldi	r18, 0x8B	; 139
 4e0:	3c ee       	ldi	r19, 0xEC	; 236
 4e2:	41 e7       	ldi	r20, 0x71	; 113
 4e4:	52 e4       	ldi	r21, 0x42	; 66
 4e6:	0e 94 e0 03 	call	0x7c0	; 0x7c0 <__mulsf3>
 4ea:	0e 94 23 03 	call	0x646	; 0x646 <__fixunssfsi>
	buffer = 28755;
	buffer = buffer - buf_adc;
 4ee:	03 e5       	ldi	r16, 0x53	; 83
 4f0:	10 e7       	ldi	r17, 0x70	; 112
 4f2:	20 e0       	ldi	r18, 0x00	; 0
 4f4:	30 e0       	ldi	r19, 0x00	; 0
 4f6:	68 01       	movw	r12, r16
 4f8:	79 01       	movw	r14, r18
 4fa:	c6 1a       	sub	r12, r22
 4fc:	d7 0a       	sbc	r13, r23
 4fe:	e8 0a       	sbc	r14, r24
 500:	f9 0a       	sbc	r15, r25
 502:	c7 01       	movw	r24, r14
 504:	b6 01       	movw	r22, r12

	temperture = (uint16_t) round(buffer / 100);
 506:	24 e6       	ldi	r18, 0x64	; 100
 508:	30 e0       	ldi	r19, 0x00	; 0
 50a:	40 e0       	ldi	r20, 0x00	; 0
 50c:	50 e0       	ldi	r21, 0x00	; 0
 50e:	0e 94 9a 04 	call	0x934	; 0x934 <__udivmodsi4>
 512:	ca 01       	movw	r24, r20
 514:	b9 01       	movw	r22, r18
 516:	0e 94 52 03 	call	0x6a4	; 0x6a4 <__floatunsisf>
 51a:	0e 94 4d 04 	call	0x89a	; 0x89a <round>
 51e:	0e 94 23 03 	call	0x646	; 0x646 <__fixunssfsi>
	
	return temperture;
	
}
 522:	cb 01       	movw	r24, r22
 524:	1f 91       	pop	r17
 526:	0f 91       	pop	r16
 528:	ff 90       	pop	r15
 52a:	ef 90       	pop	r14
 52c:	df 90       	pop	r13
 52e:	cf 90       	pop	r12
 530:	08 95       	ret

00000532 <temperture_model_lm35>:
uint16_t temperture_model_lm35( uint16_t adc_value ){
	
	uint32_t buffer = 0;
	uint16_t temperture = 0;
	
	buffer = adc_value * (10.753);
 532:	bc 01       	movw	r22, r24
 534:	80 e0       	ldi	r24, 0x00	; 0
 536:	90 e0       	ldi	r25, 0x00	; 0
 538:	0e 94 52 03 	call	0x6a4	; 0x6a4 <__floatunsisf>
 53c:	2a e4       	ldi	r18, 0x4A	; 74
 53e:	3c e0       	ldi	r19, 0x0C	; 12
 540:	4c e2       	ldi	r20, 0x2C	; 44
 542:	51 e4       	ldi	r21, 0x41	; 65
 544:	0e 94 e0 03 	call	0x7c0	; 0x7c0 <__mulsf3>
 548:	0e 94 23 03 	call	0x646	; 0x646 <__fixunssfsi>
	
	temperture = (uint16_t) round(buffer / 100);
 54c:	24 e6       	ldi	r18, 0x64	; 100
 54e:	30 e0       	ldi	r19, 0x00	; 0
 550:	40 e0       	ldi	r20, 0x00	; 0
 552:	50 e0       	ldi	r21, 0x00	; 0
 554:	0e 94 9a 04 	call	0x934	; 0x934 <__udivmodsi4>
 558:	ca 01       	movw	r24, r20
 55a:	b9 01       	movw	r22, r18
 55c:	0e 94 52 03 	call	0x6a4	; 0x6a4 <__floatunsisf>
 560:	0e 94 4d 04 	call	0x89a	; 0x89a <round>
 564:	0e 94 23 03 	call	0x646	; 0x646 <__fixunssfsi>
	
	return temperture;	
	
	
 568:	cb 01       	movw	r24, r22
 56a:	08 95       	ret

0000056c <__subsf3>:
 56c:	50 58       	subi	r21, 0x80	; 128

0000056e <__addsf3>:
 56e:	bb 27       	eor	r27, r27
 570:	aa 27       	eor	r26, r26
 572:	0e 94 ce 02 	call	0x59c	; 0x59c <__addsf3x>
 576:	0c 94 a6 03 	jmp	0x74c	; 0x74c <__fp_round>
 57a:	0e 94 98 03 	call	0x730	; 0x730 <__fp_pscA>
 57e:	38 f0       	brcs	.+14     	; 0x58e <__addsf3+0x20>
 580:	0e 94 9f 03 	call	0x73e	; 0x73e <__fp_pscB>
 584:	20 f0       	brcs	.+8      	; 0x58e <__addsf3+0x20>
 586:	39 f4       	brne	.+14     	; 0x596 <__addsf3+0x28>
 588:	9f 3f       	cpi	r25, 0xFF	; 255
 58a:	19 f4       	brne	.+6      	; 0x592 <__addsf3+0x24>
 58c:	26 f4       	brtc	.+8      	; 0x596 <__addsf3+0x28>
 58e:	0c 94 95 03 	jmp	0x72a	; 0x72a <__fp_nan>
 592:	0e f4       	brtc	.+2      	; 0x596 <__addsf3+0x28>
 594:	e0 95       	com	r30
 596:	e7 fb       	bst	r30, 7
 598:	0c 94 8f 03 	jmp	0x71e	; 0x71e <__fp_inf>

0000059c <__addsf3x>:
 59c:	e9 2f       	mov	r30, r25
 59e:	0e 94 b7 03 	call	0x76e	; 0x76e <__fp_split3>
 5a2:	58 f3       	brcs	.-42     	; 0x57a <__addsf3+0xc>
 5a4:	ba 17       	cp	r27, r26
 5a6:	62 07       	cpc	r22, r18
 5a8:	73 07       	cpc	r23, r19
 5aa:	84 07       	cpc	r24, r20
 5ac:	95 07       	cpc	r25, r21
 5ae:	20 f0       	brcs	.+8      	; 0x5b8 <__addsf3x+0x1c>
 5b0:	79 f4       	brne	.+30     	; 0x5d0 <__addsf3x+0x34>
 5b2:	a6 f5       	brtc	.+104    	; 0x61c <__addsf3x+0x80>
 5b4:	0c 94 d9 03 	jmp	0x7b2	; 0x7b2 <__fp_zero>
 5b8:	0e f4       	brtc	.+2      	; 0x5bc <__addsf3x+0x20>
 5ba:	e0 95       	com	r30
 5bc:	0b 2e       	mov	r0, r27
 5be:	ba 2f       	mov	r27, r26
 5c0:	a0 2d       	mov	r26, r0
 5c2:	0b 01       	movw	r0, r22
 5c4:	b9 01       	movw	r22, r18
 5c6:	90 01       	movw	r18, r0
 5c8:	0c 01       	movw	r0, r24
 5ca:	ca 01       	movw	r24, r20
 5cc:	a0 01       	movw	r20, r0
 5ce:	11 24       	eor	r1, r1
 5d0:	ff 27       	eor	r31, r31
 5d2:	59 1b       	sub	r21, r25
 5d4:	99 f0       	breq	.+38     	; 0x5fc <__addsf3x+0x60>
 5d6:	59 3f       	cpi	r21, 0xF9	; 249
 5d8:	50 f4       	brcc	.+20     	; 0x5ee <__addsf3x+0x52>
 5da:	50 3e       	cpi	r21, 0xE0	; 224
 5dc:	68 f1       	brcs	.+90     	; 0x638 <__addsf3x+0x9c>
 5de:	1a 16       	cp	r1, r26
 5e0:	f0 40       	sbci	r31, 0x00	; 0
 5e2:	a2 2f       	mov	r26, r18
 5e4:	23 2f       	mov	r18, r19
 5e6:	34 2f       	mov	r19, r20
 5e8:	44 27       	eor	r20, r20
 5ea:	58 5f       	subi	r21, 0xF8	; 248
 5ec:	f3 cf       	rjmp	.-26     	; 0x5d4 <__addsf3x+0x38>
 5ee:	46 95       	lsr	r20
 5f0:	37 95       	ror	r19
 5f2:	27 95       	ror	r18
 5f4:	a7 95       	ror	r26
 5f6:	f0 40       	sbci	r31, 0x00	; 0
 5f8:	53 95       	inc	r21
 5fa:	c9 f7       	brne	.-14     	; 0x5ee <__addsf3x+0x52>
 5fc:	7e f4       	brtc	.+30     	; 0x61c <__addsf3x+0x80>
 5fe:	1f 16       	cp	r1, r31
 600:	ba 0b       	sbc	r27, r26
 602:	62 0b       	sbc	r22, r18
 604:	73 0b       	sbc	r23, r19
 606:	84 0b       	sbc	r24, r20
 608:	ba f0       	brmi	.+46     	; 0x638 <__addsf3x+0x9c>
 60a:	91 50       	subi	r25, 0x01	; 1
 60c:	a1 f0       	breq	.+40     	; 0x636 <__addsf3x+0x9a>
 60e:	ff 0f       	add	r31, r31
 610:	bb 1f       	adc	r27, r27
 612:	66 1f       	adc	r22, r22
 614:	77 1f       	adc	r23, r23
 616:	88 1f       	adc	r24, r24
 618:	c2 f7       	brpl	.-16     	; 0x60a <__addsf3x+0x6e>
 61a:	0e c0       	rjmp	.+28     	; 0x638 <__addsf3x+0x9c>
 61c:	ba 0f       	add	r27, r26
 61e:	62 1f       	adc	r22, r18
 620:	73 1f       	adc	r23, r19
 622:	84 1f       	adc	r24, r20
 624:	48 f4       	brcc	.+18     	; 0x638 <__addsf3x+0x9c>
 626:	87 95       	ror	r24
 628:	77 95       	ror	r23
 62a:	67 95       	ror	r22
 62c:	b7 95       	ror	r27
 62e:	f7 95       	ror	r31
 630:	9e 3f       	cpi	r25, 0xFE	; 254
 632:	08 f0       	brcs	.+2      	; 0x636 <__addsf3x+0x9a>
 634:	b0 cf       	rjmp	.-160    	; 0x596 <__addsf3+0x28>
 636:	93 95       	inc	r25
 638:	88 0f       	add	r24, r24
 63a:	08 f0       	brcs	.+2      	; 0x63e <__addsf3x+0xa2>
 63c:	99 27       	eor	r25, r25
 63e:	ee 0f       	add	r30, r30
 640:	97 95       	ror	r25
 642:	87 95       	ror	r24
 644:	08 95       	ret

00000646 <__fixunssfsi>:
 646:	0e 94 bf 03 	call	0x77e	; 0x77e <__fp_splitA>
 64a:	88 f0       	brcs	.+34     	; 0x66e <__fixunssfsi+0x28>
 64c:	9f 57       	subi	r25, 0x7F	; 127
 64e:	98 f0       	brcs	.+38     	; 0x676 <__fixunssfsi+0x30>
 650:	b9 2f       	mov	r27, r25
 652:	99 27       	eor	r25, r25
 654:	b7 51       	subi	r27, 0x17	; 23
 656:	b0 f0       	brcs	.+44     	; 0x684 <__fixunssfsi+0x3e>
 658:	e1 f0       	breq	.+56     	; 0x692 <__fixunssfsi+0x4c>
 65a:	66 0f       	add	r22, r22
 65c:	77 1f       	adc	r23, r23
 65e:	88 1f       	adc	r24, r24
 660:	99 1f       	adc	r25, r25
 662:	1a f0       	brmi	.+6      	; 0x66a <__fixunssfsi+0x24>
 664:	ba 95       	dec	r27
 666:	c9 f7       	brne	.-14     	; 0x65a <__fixunssfsi+0x14>
 668:	14 c0       	rjmp	.+40     	; 0x692 <__fixunssfsi+0x4c>
 66a:	b1 30       	cpi	r27, 0x01	; 1
 66c:	91 f0       	breq	.+36     	; 0x692 <__fixunssfsi+0x4c>
 66e:	0e 94 d9 03 	call	0x7b2	; 0x7b2 <__fp_zero>
 672:	b1 e0       	ldi	r27, 0x01	; 1
 674:	08 95       	ret
 676:	0c 94 d9 03 	jmp	0x7b2	; 0x7b2 <__fp_zero>
 67a:	67 2f       	mov	r22, r23
 67c:	78 2f       	mov	r23, r24
 67e:	88 27       	eor	r24, r24
 680:	b8 5f       	subi	r27, 0xF8	; 248
 682:	39 f0       	breq	.+14     	; 0x692 <__fixunssfsi+0x4c>
 684:	b9 3f       	cpi	r27, 0xF9	; 249
 686:	cc f3       	brlt	.-14     	; 0x67a <__fixunssfsi+0x34>
 688:	86 95       	lsr	r24
 68a:	77 95       	ror	r23
 68c:	67 95       	ror	r22
 68e:	b3 95       	inc	r27
 690:	d9 f7       	brne	.-10     	; 0x688 <__fixunssfsi+0x42>
 692:	3e f4       	brtc	.+14     	; 0x6a2 <__fixunssfsi+0x5c>
 694:	90 95       	com	r25
 696:	80 95       	com	r24
 698:	70 95       	com	r23
 69a:	61 95       	neg	r22
 69c:	7f 4f       	sbci	r23, 0xFF	; 255
 69e:	8f 4f       	sbci	r24, 0xFF	; 255
 6a0:	9f 4f       	sbci	r25, 0xFF	; 255
 6a2:	08 95       	ret

000006a4 <__floatunsisf>:
 6a4:	e8 94       	clt
 6a6:	09 c0       	rjmp	.+18     	; 0x6ba <__floatsisf+0x12>

000006a8 <__floatsisf>:
 6a8:	97 fb       	bst	r25, 7
 6aa:	3e f4       	brtc	.+14     	; 0x6ba <__floatsisf+0x12>
 6ac:	90 95       	com	r25
 6ae:	80 95       	com	r24
 6b0:	70 95       	com	r23
 6b2:	61 95       	neg	r22
 6b4:	7f 4f       	sbci	r23, 0xFF	; 255
 6b6:	8f 4f       	sbci	r24, 0xFF	; 255
 6b8:	9f 4f       	sbci	r25, 0xFF	; 255
 6ba:	99 23       	and	r25, r25
 6bc:	a9 f0       	breq	.+42     	; 0x6e8 <__floatsisf+0x40>
 6be:	f9 2f       	mov	r31, r25
 6c0:	96 e9       	ldi	r25, 0x96	; 150
 6c2:	bb 27       	eor	r27, r27
 6c4:	93 95       	inc	r25
 6c6:	f6 95       	lsr	r31
 6c8:	87 95       	ror	r24
 6ca:	77 95       	ror	r23
 6cc:	67 95       	ror	r22
 6ce:	b7 95       	ror	r27
 6d0:	f1 11       	cpse	r31, r1
 6d2:	f8 cf       	rjmp	.-16     	; 0x6c4 <__floatsisf+0x1c>
 6d4:	fa f4       	brpl	.+62     	; 0x714 <__floatsisf+0x6c>
 6d6:	bb 0f       	add	r27, r27
 6d8:	11 f4       	brne	.+4      	; 0x6de <__floatsisf+0x36>
 6da:	60 ff       	sbrs	r22, 0
 6dc:	1b c0       	rjmp	.+54     	; 0x714 <__floatsisf+0x6c>
 6de:	6f 5f       	subi	r22, 0xFF	; 255
 6e0:	7f 4f       	sbci	r23, 0xFF	; 255
 6e2:	8f 4f       	sbci	r24, 0xFF	; 255
 6e4:	9f 4f       	sbci	r25, 0xFF	; 255
 6e6:	16 c0       	rjmp	.+44     	; 0x714 <__floatsisf+0x6c>
 6e8:	88 23       	and	r24, r24
 6ea:	11 f0       	breq	.+4      	; 0x6f0 <__floatsisf+0x48>
 6ec:	96 e9       	ldi	r25, 0x96	; 150
 6ee:	11 c0       	rjmp	.+34     	; 0x712 <__floatsisf+0x6a>
 6f0:	77 23       	and	r23, r23
 6f2:	21 f0       	breq	.+8      	; 0x6fc <__floatsisf+0x54>
 6f4:	9e e8       	ldi	r25, 0x8E	; 142
 6f6:	87 2f       	mov	r24, r23
 6f8:	76 2f       	mov	r23, r22
 6fa:	05 c0       	rjmp	.+10     	; 0x706 <__floatsisf+0x5e>
 6fc:	66 23       	and	r22, r22
 6fe:	71 f0       	breq	.+28     	; 0x71c <__floatsisf+0x74>
 700:	96 e8       	ldi	r25, 0x86	; 134
 702:	86 2f       	mov	r24, r22
 704:	70 e0       	ldi	r23, 0x00	; 0
 706:	60 e0       	ldi	r22, 0x00	; 0
 708:	2a f0       	brmi	.+10     	; 0x714 <__floatsisf+0x6c>
 70a:	9a 95       	dec	r25
 70c:	66 0f       	add	r22, r22
 70e:	77 1f       	adc	r23, r23
 710:	88 1f       	adc	r24, r24
 712:	da f7       	brpl	.-10     	; 0x70a <__floatsisf+0x62>
 714:	88 0f       	add	r24, r24
 716:	96 95       	lsr	r25
 718:	87 95       	ror	r24
 71a:	97 f9       	bld	r25, 7
 71c:	08 95       	ret

0000071e <__fp_inf>:
 71e:	97 f9       	bld	r25, 7
 720:	9f 67       	ori	r25, 0x7F	; 127
 722:	80 e8       	ldi	r24, 0x80	; 128
 724:	70 e0       	ldi	r23, 0x00	; 0
 726:	60 e0       	ldi	r22, 0x00	; 0
 728:	08 95       	ret

0000072a <__fp_nan>:
 72a:	9f ef       	ldi	r25, 0xFF	; 255
 72c:	80 ec       	ldi	r24, 0xC0	; 192
 72e:	08 95       	ret

00000730 <__fp_pscA>:
 730:	00 24       	eor	r0, r0
 732:	0a 94       	dec	r0
 734:	16 16       	cp	r1, r22
 736:	17 06       	cpc	r1, r23
 738:	18 06       	cpc	r1, r24
 73a:	09 06       	cpc	r0, r25
 73c:	08 95       	ret

0000073e <__fp_pscB>:
 73e:	00 24       	eor	r0, r0
 740:	0a 94       	dec	r0
 742:	12 16       	cp	r1, r18
 744:	13 06       	cpc	r1, r19
 746:	14 06       	cpc	r1, r20
 748:	05 06       	cpc	r0, r21
 74a:	08 95       	ret

0000074c <__fp_round>:
 74c:	09 2e       	mov	r0, r25
 74e:	03 94       	inc	r0
 750:	00 0c       	add	r0, r0
 752:	11 f4       	brne	.+4      	; 0x758 <__fp_round+0xc>
 754:	88 23       	and	r24, r24
 756:	52 f0       	brmi	.+20     	; 0x76c <__fp_round+0x20>
 758:	bb 0f       	add	r27, r27
 75a:	40 f4       	brcc	.+16     	; 0x76c <__fp_round+0x20>
 75c:	bf 2b       	or	r27, r31
 75e:	11 f4       	brne	.+4      	; 0x764 <__fp_round+0x18>
 760:	60 ff       	sbrs	r22, 0
 762:	04 c0       	rjmp	.+8      	; 0x76c <__fp_round+0x20>
 764:	6f 5f       	subi	r22, 0xFF	; 255
 766:	7f 4f       	sbci	r23, 0xFF	; 255
 768:	8f 4f       	sbci	r24, 0xFF	; 255
 76a:	9f 4f       	sbci	r25, 0xFF	; 255
 76c:	08 95       	ret

0000076e <__fp_split3>:
 76e:	57 fd       	sbrc	r21, 7
 770:	90 58       	subi	r25, 0x80	; 128
 772:	44 0f       	add	r20, r20
 774:	55 1f       	adc	r21, r21
 776:	59 f0       	breq	.+22     	; 0x78e <__fp_splitA+0x10>
 778:	5f 3f       	cpi	r21, 0xFF	; 255
 77a:	71 f0       	breq	.+28     	; 0x798 <__fp_splitA+0x1a>
 77c:	47 95       	ror	r20

0000077e <__fp_splitA>:
 77e:	88 0f       	add	r24, r24
 780:	97 fb       	bst	r25, 7
 782:	99 1f       	adc	r25, r25
 784:	61 f0       	breq	.+24     	; 0x79e <__fp_splitA+0x20>
 786:	9f 3f       	cpi	r25, 0xFF	; 255
 788:	79 f0       	breq	.+30     	; 0x7a8 <__fp_splitA+0x2a>
 78a:	87 95       	ror	r24
 78c:	08 95       	ret
 78e:	12 16       	cp	r1, r18
 790:	13 06       	cpc	r1, r19
 792:	14 06       	cpc	r1, r20
 794:	55 1f       	adc	r21, r21
 796:	f2 cf       	rjmp	.-28     	; 0x77c <__fp_split3+0xe>
 798:	46 95       	lsr	r20
 79a:	f1 df       	rcall	.-30     	; 0x77e <__fp_splitA>
 79c:	08 c0       	rjmp	.+16     	; 0x7ae <__fp_splitA+0x30>
 79e:	16 16       	cp	r1, r22
 7a0:	17 06       	cpc	r1, r23
 7a2:	18 06       	cpc	r1, r24
 7a4:	99 1f       	adc	r25, r25
 7a6:	f1 cf       	rjmp	.-30     	; 0x78a <__fp_splitA+0xc>
 7a8:	86 95       	lsr	r24
 7aa:	71 05       	cpc	r23, r1
 7ac:	61 05       	cpc	r22, r1
 7ae:	08 94       	sec
 7b0:	08 95       	ret

000007b2 <__fp_zero>:
 7b2:	e8 94       	clt

000007b4 <__fp_szero>:
 7b4:	bb 27       	eor	r27, r27
 7b6:	66 27       	eor	r22, r22
 7b8:	77 27       	eor	r23, r23
 7ba:	cb 01       	movw	r24, r22
 7bc:	97 f9       	bld	r25, 7
 7be:	08 95       	ret

000007c0 <__mulsf3>:
 7c0:	0e 94 f3 03 	call	0x7e6	; 0x7e6 <__mulsf3x>
 7c4:	0c 94 a6 03 	jmp	0x74c	; 0x74c <__fp_round>
 7c8:	0e 94 98 03 	call	0x730	; 0x730 <__fp_pscA>
 7cc:	38 f0       	brcs	.+14     	; 0x7dc <__mulsf3+0x1c>
 7ce:	0e 94 9f 03 	call	0x73e	; 0x73e <__fp_pscB>
 7d2:	20 f0       	brcs	.+8      	; 0x7dc <__mulsf3+0x1c>
 7d4:	95 23       	and	r25, r21
 7d6:	11 f0       	breq	.+4      	; 0x7dc <__mulsf3+0x1c>
 7d8:	0c 94 8f 03 	jmp	0x71e	; 0x71e <__fp_inf>
 7dc:	0c 94 95 03 	jmp	0x72a	; 0x72a <__fp_nan>
 7e0:	11 24       	eor	r1, r1
 7e2:	0c 94 da 03 	jmp	0x7b4	; 0x7b4 <__fp_szero>

000007e6 <__mulsf3x>:
 7e6:	0e 94 b7 03 	call	0x76e	; 0x76e <__fp_split3>
 7ea:	70 f3       	brcs	.-36     	; 0x7c8 <__mulsf3+0x8>

000007ec <__mulsf3_pse>:
 7ec:	95 9f       	mul	r25, r21
 7ee:	c1 f3       	breq	.-16     	; 0x7e0 <__mulsf3+0x20>
 7f0:	95 0f       	add	r25, r21
 7f2:	50 e0       	ldi	r21, 0x00	; 0
 7f4:	55 1f       	adc	r21, r21
 7f6:	62 9f       	mul	r22, r18
 7f8:	f0 01       	movw	r30, r0
 7fa:	72 9f       	mul	r23, r18
 7fc:	bb 27       	eor	r27, r27
 7fe:	f0 0d       	add	r31, r0
 800:	b1 1d       	adc	r27, r1
 802:	63 9f       	mul	r22, r19
 804:	aa 27       	eor	r26, r26
 806:	f0 0d       	add	r31, r0
 808:	b1 1d       	adc	r27, r1
 80a:	aa 1f       	adc	r26, r26
 80c:	64 9f       	mul	r22, r20
 80e:	66 27       	eor	r22, r22
 810:	b0 0d       	add	r27, r0
 812:	a1 1d       	adc	r26, r1
 814:	66 1f       	adc	r22, r22
 816:	82 9f       	mul	r24, r18
 818:	22 27       	eor	r18, r18
 81a:	b0 0d       	add	r27, r0
 81c:	a1 1d       	adc	r26, r1
 81e:	62 1f       	adc	r22, r18
 820:	73 9f       	mul	r23, r19
 822:	b0 0d       	add	r27, r0
 824:	a1 1d       	adc	r26, r1
 826:	62 1f       	adc	r22, r18
 828:	83 9f       	mul	r24, r19
 82a:	a0 0d       	add	r26, r0
 82c:	61 1d       	adc	r22, r1
 82e:	22 1f       	adc	r18, r18
 830:	74 9f       	mul	r23, r20
 832:	33 27       	eor	r19, r19
 834:	a0 0d       	add	r26, r0
 836:	61 1d       	adc	r22, r1
 838:	23 1f       	adc	r18, r19
 83a:	84 9f       	mul	r24, r20
 83c:	60 0d       	add	r22, r0
 83e:	21 1d       	adc	r18, r1
 840:	82 2f       	mov	r24, r18
 842:	76 2f       	mov	r23, r22
 844:	6a 2f       	mov	r22, r26
 846:	11 24       	eor	r1, r1
 848:	9f 57       	subi	r25, 0x7F	; 127
 84a:	50 40       	sbci	r21, 0x00	; 0
 84c:	9a f0       	brmi	.+38     	; 0x874 <__mulsf3_pse+0x88>
 84e:	f1 f0       	breq	.+60     	; 0x88c <__mulsf3_pse+0xa0>
 850:	88 23       	and	r24, r24
 852:	4a f0       	brmi	.+18     	; 0x866 <__mulsf3_pse+0x7a>
 854:	ee 0f       	add	r30, r30
 856:	ff 1f       	adc	r31, r31
 858:	bb 1f       	adc	r27, r27
 85a:	66 1f       	adc	r22, r22
 85c:	77 1f       	adc	r23, r23
 85e:	88 1f       	adc	r24, r24
 860:	91 50       	subi	r25, 0x01	; 1
 862:	50 40       	sbci	r21, 0x00	; 0
 864:	a9 f7       	brne	.-22     	; 0x850 <__mulsf3_pse+0x64>
 866:	9e 3f       	cpi	r25, 0xFE	; 254
 868:	51 05       	cpc	r21, r1
 86a:	80 f0       	brcs	.+32     	; 0x88c <__mulsf3_pse+0xa0>
 86c:	0c 94 8f 03 	jmp	0x71e	; 0x71e <__fp_inf>
 870:	0c 94 da 03 	jmp	0x7b4	; 0x7b4 <__fp_szero>
 874:	5f 3f       	cpi	r21, 0xFF	; 255
 876:	e4 f3       	brlt	.-8      	; 0x870 <__mulsf3_pse+0x84>
 878:	98 3e       	cpi	r25, 0xE8	; 232
 87a:	d4 f3       	brlt	.-12     	; 0x870 <__mulsf3_pse+0x84>
 87c:	86 95       	lsr	r24
 87e:	77 95       	ror	r23
 880:	67 95       	ror	r22
 882:	b7 95       	ror	r27
 884:	f7 95       	ror	r31
 886:	e7 95       	ror	r30
 888:	9f 5f       	subi	r25, 0xFF	; 255
 88a:	c1 f7       	brne	.-16     	; 0x87c <__mulsf3_pse+0x90>
 88c:	fe 2b       	or	r31, r30
 88e:	88 0f       	add	r24, r24
 890:	91 1d       	adc	r25, r1
 892:	96 95       	lsr	r25
 894:	87 95       	ror	r24
 896:	97 f9       	bld	r25, 7
 898:	08 95       	ret

0000089a <round>:
 89a:	0e 94 bf 03 	call	0x77e	; 0x77e <__fp_splitA>
 89e:	e8 f0       	brcs	.+58     	; 0x8da <round+0x40>
 8a0:	9e 37       	cpi	r25, 0x7E	; 126
 8a2:	e8 f0       	brcs	.+58     	; 0x8de <round+0x44>
 8a4:	96 39       	cpi	r25, 0x96	; 150
 8a6:	b8 f4       	brcc	.+46     	; 0x8d6 <round+0x3c>
 8a8:	9e 38       	cpi	r25, 0x8E	; 142
 8aa:	48 f4       	brcc	.+18     	; 0x8be <round+0x24>
 8ac:	67 2f       	mov	r22, r23
 8ae:	78 2f       	mov	r23, r24
 8b0:	88 27       	eor	r24, r24
 8b2:	98 5f       	subi	r25, 0xF8	; 248
 8b4:	f9 cf       	rjmp	.-14     	; 0x8a8 <round+0xe>
 8b6:	86 95       	lsr	r24
 8b8:	77 95       	ror	r23
 8ba:	67 95       	ror	r22
 8bc:	93 95       	inc	r25
 8be:	95 39       	cpi	r25, 0x95	; 149
 8c0:	d0 f3       	brcs	.-12     	; 0x8b6 <round+0x1c>
 8c2:	b6 2f       	mov	r27, r22
 8c4:	b1 70       	andi	r27, 0x01	; 1
 8c6:	6b 0f       	add	r22, r27
 8c8:	71 1d       	adc	r23, r1
 8ca:	81 1d       	adc	r24, r1
 8cc:	20 f4       	brcc	.+8      	; 0x8d6 <round+0x3c>
 8ce:	87 95       	ror	r24
 8d0:	77 95       	ror	r23
 8d2:	67 95       	ror	r22
 8d4:	93 95       	inc	r25
 8d6:	0c 94 71 04 	jmp	0x8e2	; 0x8e2 <__fp_mintl>
 8da:	0c 94 8c 04 	jmp	0x918	; 0x918 <__fp_mpack>
 8de:	0c 94 da 03 	jmp	0x7b4	; 0x7b4 <__fp_szero>

000008e2 <__fp_mintl>:
 8e2:	88 23       	and	r24, r24
 8e4:	71 f4       	brne	.+28     	; 0x902 <__stack+0x3>
 8e6:	77 23       	and	r23, r23
 8e8:	21 f0       	breq	.+8      	; 0x8f2 <__fp_mintl+0x10>
 8ea:	98 50       	subi	r25, 0x08	; 8
 8ec:	87 2b       	or	r24, r23
 8ee:	76 2f       	mov	r23, r22
 8f0:	07 c0       	rjmp	.+14     	; 0x900 <__stack+0x1>
 8f2:	66 23       	and	r22, r22
 8f4:	11 f4       	brne	.+4      	; 0x8fa <__fp_mintl+0x18>
 8f6:	99 27       	eor	r25, r25
 8f8:	0d c0       	rjmp	.+26     	; 0x914 <__stack+0x15>
 8fa:	90 51       	subi	r25, 0x10	; 16
 8fc:	86 2b       	or	r24, r22
 8fe:	70 e0       	ldi	r23, 0x00	; 0
 900:	60 e0       	ldi	r22, 0x00	; 0
 902:	2a f0       	brmi	.+10     	; 0x90e <__stack+0xf>
 904:	9a 95       	dec	r25
 906:	66 0f       	add	r22, r22
 908:	77 1f       	adc	r23, r23
 90a:	88 1f       	adc	r24, r24
 90c:	da f7       	brpl	.-10     	; 0x904 <__stack+0x5>
 90e:	88 0f       	add	r24, r24
 910:	96 95       	lsr	r25
 912:	87 95       	ror	r24
 914:	97 f9       	bld	r25, 7
 916:	08 95       	ret

00000918 <__fp_mpack>:
 918:	9f 3f       	cpi	r25, 0xFF	; 255
 91a:	31 f0       	breq	.+12     	; 0x928 <__fp_mpack_finite+0xc>

0000091c <__fp_mpack_finite>:
 91c:	91 50       	subi	r25, 0x01	; 1
 91e:	20 f4       	brcc	.+8      	; 0x928 <__fp_mpack_finite+0xc>
 920:	87 95       	ror	r24
 922:	77 95       	ror	r23
 924:	67 95       	ror	r22
 926:	b7 95       	ror	r27
 928:	88 0f       	add	r24, r24
 92a:	91 1d       	adc	r25, r1
 92c:	96 95       	lsr	r25
 92e:	87 95       	ror	r24
 930:	97 f9       	bld	r25, 7
 932:	08 95       	ret

00000934 <__udivmodsi4>:
 934:	a1 e2       	ldi	r26, 0x21	; 33
 936:	1a 2e       	mov	r1, r26
 938:	aa 1b       	sub	r26, r26
 93a:	bb 1b       	sub	r27, r27
 93c:	fd 01       	movw	r30, r26
 93e:	0d c0       	rjmp	.+26     	; 0x95a <__udivmodsi4_ep>

00000940 <__udivmodsi4_loop>:
 940:	aa 1f       	adc	r26, r26
 942:	bb 1f       	adc	r27, r27
 944:	ee 1f       	adc	r30, r30
 946:	ff 1f       	adc	r31, r31
 948:	a2 17       	cp	r26, r18
 94a:	b3 07       	cpc	r27, r19
 94c:	e4 07       	cpc	r30, r20
 94e:	f5 07       	cpc	r31, r21
 950:	20 f0       	brcs	.+8      	; 0x95a <__udivmodsi4_ep>
 952:	a2 1b       	sub	r26, r18
 954:	b3 0b       	sbc	r27, r19
 956:	e4 0b       	sbc	r30, r20
 958:	f5 0b       	sbc	r31, r21

0000095a <__udivmodsi4_ep>:
 95a:	66 1f       	adc	r22, r22
 95c:	77 1f       	adc	r23, r23
 95e:	88 1f       	adc	r24, r24
 960:	99 1f       	adc	r25, r25
 962:	1a 94       	dec	r1
 964:	69 f7       	brne	.-38     	; 0x940 <__udivmodsi4_loop>
 966:	60 95       	com	r22
 968:	70 95       	com	r23
 96a:	80 95       	com	r24
 96c:	90 95       	com	r25
 96e:	9b 01       	movw	r18, r22
 970:	ac 01       	movw	r20, r24
 972:	bd 01       	movw	r22, r26
 974:	cf 01       	movw	r24, r30
 976:	08 95       	ret

00000978 <sprintf>:
 978:	ae e0       	ldi	r26, 0x0E	; 14
 97a:	b0 e0       	ldi	r27, 0x00	; 0
 97c:	e2 ec       	ldi	r30, 0xC2	; 194
 97e:	f4 e0       	ldi	r31, 0x04	; 4
 980:	0c 94 6b 07 	jmp	0xed6	; 0xed6 <__prologue_saves__+0x1c>
 984:	0d 89       	ldd	r16, Y+21	; 0x15
 986:	1e 89       	ldd	r17, Y+22	; 0x16
 988:	86 e0       	ldi	r24, 0x06	; 6
 98a:	8c 83       	std	Y+4, r24	; 0x04
 98c:	1a 83       	std	Y+2, r17	; 0x02
 98e:	09 83       	std	Y+1, r16	; 0x01
 990:	8f ef       	ldi	r24, 0xFF	; 255
 992:	9f e7       	ldi	r25, 0x7F	; 127
 994:	9e 83       	std	Y+6, r25	; 0x06
 996:	8d 83       	std	Y+5, r24	; 0x05
 998:	ae 01       	movw	r20, r28
 99a:	47 5e       	subi	r20, 0xE7	; 231
 99c:	5f 4f       	sbci	r21, 0xFF	; 255
 99e:	6f 89       	ldd	r22, Y+23	; 0x17
 9a0:	78 8d       	ldd	r23, Y+24	; 0x18
 9a2:	ce 01       	movw	r24, r28
 9a4:	01 96       	adiw	r24, 0x01	; 1
 9a6:	0e 94 df 04 	call	0x9be	; 0x9be <vfprintf>
 9aa:	2f 81       	ldd	r18, Y+7	; 0x07
 9ac:	38 85       	ldd	r19, Y+8	; 0x08
 9ae:	f8 01       	movw	r30, r16
 9b0:	e2 0f       	add	r30, r18
 9b2:	f3 1f       	adc	r31, r19
 9b4:	10 82       	st	Z, r1
 9b6:	2e 96       	adiw	r28, 0x0e	; 14
 9b8:	e4 e0       	ldi	r30, 0x04	; 4
 9ba:	0c 94 87 07 	jmp	0xf0e	; 0xf0e <__epilogue_restores__+0x1c>

000009be <vfprintf>:
 9be:	ac e0       	ldi	r26, 0x0C	; 12
 9c0:	b0 e0       	ldi	r27, 0x00	; 0
 9c2:	e5 ee       	ldi	r30, 0xE5	; 229
 9c4:	f4 e0       	ldi	r31, 0x04	; 4
 9c6:	0c 94 5d 07 	jmp	0xeba	; 0xeba <__prologue_saves__>
 9ca:	7c 01       	movw	r14, r24
 9cc:	6b 01       	movw	r12, r22
 9ce:	8a 01       	movw	r16, r20
 9d0:	fc 01       	movw	r30, r24
 9d2:	17 82       	std	Z+7, r1	; 0x07
 9d4:	16 82       	std	Z+6, r1	; 0x06
 9d6:	83 81       	ldd	r24, Z+3	; 0x03
 9d8:	81 ff       	sbrs	r24, 1
 9da:	bd c1       	rjmp	.+890    	; 0xd56 <vfprintf+0x398>
 9dc:	ce 01       	movw	r24, r28
 9de:	01 96       	adiw	r24, 0x01	; 1
 9e0:	4c 01       	movw	r8, r24
 9e2:	f7 01       	movw	r30, r14
 9e4:	93 81       	ldd	r25, Z+3	; 0x03
 9e6:	f6 01       	movw	r30, r12
 9e8:	93 fd       	sbrc	r25, 3
 9ea:	85 91       	lpm	r24, Z+
 9ec:	93 ff       	sbrs	r25, 3
 9ee:	81 91       	ld	r24, Z+
 9f0:	6f 01       	movw	r12, r30
 9f2:	88 23       	and	r24, r24
 9f4:	09 f4       	brne	.+2      	; 0x9f8 <vfprintf+0x3a>
 9f6:	ab c1       	rjmp	.+854    	; 0xd4e <vfprintf+0x390>
 9f8:	85 32       	cpi	r24, 0x25	; 37
 9fa:	39 f4       	brne	.+14     	; 0xa0a <vfprintf+0x4c>
 9fc:	93 fd       	sbrc	r25, 3
 9fe:	85 91       	lpm	r24, Z+
 a00:	93 ff       	sbrs	r25, 3
 a02:	81 91       	ld	r24, Z+
 a04:	6f 01       	movw	r12, r30
 a06:	85 32       	cpi	r24, 0x25	; 37
 a08:	29 f4       	brne	.+10     	; 0xa14 <vfprintf+0x56>
 a0a:	b7 01       	movw	r22, r14
 a0c:	90 e0       	ldi	r25, 0x00	; 0
 a0e:	0e 94 c7 06 	call	0xd8e	; 0xd8e <fputc>
 a12:	e7 cf       	rjmp	.-50     	; 0x9e2 <vfprintf+0x24>
 a14:	51 2c       	mov	r5, r1
 a16:	31 2c       	mov	r3, r1
 a18:	20 e0       	ldi	r18, 0x00	; 0
 a1a:	20 32       	cpi	r18, 0x20	; 32
 a1c:	a0 f4       	brcc	.+40     	; 0xa46 <vfprintf+0x88>
 a1e:	8b 32       	cpi	r24, 0x2B	; 43
 a20:	69 f0       	breq	.+26     	; 0xa3c <vfprintf+0x7e>
 a22:	30 f4       	brcc	.+12     	; 0xa30 <vfprintf+0x72>
 a24:	80 32       	cpi	r24, 0x20	; 32
 a26:	59 f0       	breq	.+22     	; 0xa3e <vfprintf+0x80>
 a28:	83 32       	cpi	r24, 0x23	; 35
 a2a:	69 f4       	brne	.+26     	; 0xa46 <vfprintf+0x88>
 a2c:	20 61       	ori	r18, 0x10	; 16
 a2e:	2c c0       	rjmp	.+88     	; 0xa88 <vfprintf+0xca>
 a30:	8d 32       	cpi	r24, 0x2D	; 45
 a32:	39 f0       	breq	.+14     	; 0xa42 <vfprintf+0x84>
 a34:	80 33       	cpi	r24, 0x30	; 48
 a36:	39 f4       	brne	.+14     	; 0xa46 <vfprintf+0x88>
 a38:	21 60       	ori	r18, 0x01	; 1
 a3a:	26 c0       	rjmp	.+76     	; 0xa88 <vfprintf+0xca>
 a3c:	22 60       	ori	r18, 0x02	; 2
 a3e:	24 60       	ori	r18, 0x04	; 4
 a40:	23 c0       	rjmp	.+70     	; 0xa88 <vfprintf+0xca>
 a42:	28 60       	ori	r18, 0x08	; 8
 a44:	21 c0       	rjmp	.+66     	; 0xa88 <vfprintf+0xca>
 a46:	27 fd       	sbrc	r18, 7
 a48:	27 c0       	rjmp	.+78     	; 0xa98 <vfprintf+0xda>
 a4a:	30 ed       	ldi	r19, 0xD0	; 208
 a4c:	38 0f       	add	r19, r24
 a4e:	3a 30       	cpi	r19, 0x0A	; 10
 a50:	78 f4       	brcc	.+30     	; 0xa70 <vfprintf+0xb2>
 a52:	26 ff       	sbrs	r18, 6
 a54:	06 c0       	rjmp	.+12     	; 0xa62 <vfprintf+0xa4>
 a56:	fa e0       	ldi	r31, 0x0A	; 10
 a58:	5f 9e       	mul	r5, r31
 a5a:	30 0d       	add	r19, r0
 a5c:	11 24       	eor	r1, r1
 a5e:	53 2e       	mov	r5, r19
 a60:	13 c0       	rjmp	.+38     	; 0xa88 <vfprintf+0xca>
 a62:	8a e0       	ldi	r24, 0x0A	; 10
 a64:	38 9e       	mul	r3, r24
 a66:	30 0d       	add	r19, r0
 a68:	11 24       	eor	r1, r1
 a6a:	33 2e       	mov	r3, r19
 a6c:	20 62       	ori	r18, 0x20	; 32
 a6e:	0c c0       	rjmp	.+24     	; 0xa88 <vfprintf+0xca>
 a70:	8e 32       	cpi	r24, 0x2E	; 46
 a72:	21 f4       	brne	.+8      	; 0xa7c <vfprintf+0xbe>
 a74:	26 fd       	sbrc	r18, 6
 a76:	6b c1       	rjmp	.+726    	; 0xd4e <vfprintf+0x390>
 a78:	20 64       	ori	r18, 0x40	; 64
 a7a:	06 c0       	rjmp	.+12     	; 0xa88 <vfprintf+0xca>
 a7c:	8c 36       	cpi	r24, 0x6C	; 108
 a7e:	11 f4       	brne	.+4      	; 0xa84 <vfprintf+0xc6>
 a80:	20 68       	ori	r18, 0x80	; 128
 a82:	02 c0       	rjmp	.+4      	; 0xa88 <vfprintf+0xca>
 a84:	88 36       	cpi	r24, 0x68	; 104
 a86:	41 f4       	brne	.+16     	; 0xa98 <vfprintf+0xda>
 a88:	f6 01       	movw	r30, r12
 a8a:	93 fd       	sbrc	r25, 3
 a8c:	85 91       	lpm	r24, Z+
 a8e:	93 ff       	sbrs	r25, 3
 a90:	81 91       	ld	r24, Z+
 a92:	6f 01       	movw	r12, r30
 a94:	81 11       	cpse	r24, r1
 a96:	c1 cf       	rjmp	.-126    	; 0xa1a <vfprintf+0x5c>
 a98:	98 2f       	mov	r25, r24
 a9a:	9f 7d       	andi	r25, 0xDF	; 223
 a9c:	95 54       	subi	r25, 0x45	; 69
 a9e:	93 30       	cpi	r25, 0x03	; 3
 aa0:	28 f4       	brcc	.+10     	; 0xaac <vfprintf+0xee>
 aa2:	0c 5f       	subi	r16, 0xFC	; 252
 aa4:	1f 4f       	sbci	r17, 0xFF	; 255
 aa6:	ff e3       	ldi	r31, 0x3F	; 63
 aa8:	f9 83       	std	Y+1, r31	; 0x01
 aaa:	0d c0       	rjmp	.+26     	; 0xac6 <vfprintf+0x108>
 aac:	83 36       	cpi	r24, 0x63	; 99
 aae:	31 f0       	breq	.+12     	; 0xabc <vfprintf+0xfe>
 ab0:	83 37       	cpi	r24, 0x73	; 115
 ab2:	71 f0       	breq	.+28     	; 0xad0 <vfprintf+0x112>
 ab4:	83 35       	cpi	r24, 0x53	; 83
 ab6:	09 f0       	breq	.+2      	; 0xaba <vfprintf+0xfc>
 ab8:	5b c0       	rjmp	.+182    	; 0xb70 <vfprintf+0x1b2>
 aba:	22 c0       	rjmp	.+68     	; 0xb00 <vfprintf+0x142>
 abc:	f8 01       	movw	r30, r16
 abe:	80 81       	ld	r24, Z
 ac0:	89 83       	std	Y+1, r24	; 0x01
 ac2:	0e 5f       	subi	r16, 0xFE	; 254
 ac4:	1f 4f       	sbci	r17, 0xFF	; 255
 ac6:	44 24       	eor	r4, r4
 ac8:	43 94       	inc	r4
 aca:	51 2c       	mov	r5, r1
 acc:	54 01       	movw	r10, r8
 ace:	15 c0       	rjmp	.+42     	; 0xafa <vfprintf+0x13c>
 ad0:	38 01       	movw	r6, r16
 ad2:	f2 e0       	ldi	r31, 0x02	; 2
 ad4:	6f 0e       	add	r6, r31
 ad6:	71 1c       	adc	r7, r1
 ad8:	f8 01       	movw	r30, r16
 ada:	a0 80       	ld	r10, Z
 adc:	b1 80       	ldd	r11, Z+1	; 0x01
 ade:	26 ff       	sbrs	r18, 6
 ae0:	03 c0       	rjmp	.+6      	; 0xae8 <vfprintf+0x12a>
 ae2:	65 2d       	mov	r22, r5
 ae4:	70 e0       	ldi	r23, 0x00	; 0
 ae6:	02 c0       	rjmp	.+4      	; 0xaec <vfprintf+0x12e>
 ae8:	6f ef       	ldi	r22, 0xFF	; 255
 aea:	7f ef       	ldi	r23, 0xFF	; 255
 aec:	c5 01       	movw	r24, r10
 aee:	2c 87       	std	Y+12, r18	; 0x0c
 af0:	0e 94 bc 06 	call	0xd78	; 0xd78 <strnlen>
 af4:	2c 01       	movw	r4, r24
 af6:	83 01       	movw	r16, r6
 af8:	2c 85       	ldd	r18, Y+12	; 0x0c
 afa:	2f 77       	andi	r18, 0x7F	; 127
 afc:	22 2e       	mov	r2, r18
 afe:	17 c0       	rjmp	.+46     	; 0xb2e <vfprintf+0x170>
 b00:	38 01       	movw	r6, r16
 b02:	f2 e0       	ldi	r31, 0x02	; 2
 b04:	6f 0e       	add	r6, r31
 b06:	71 1c       	adc	r7, r1
 b08:	f8 01       	movw	r30, r16
 b0a:	a0 80       	ld	r10, Z
 b0c:	b1 80       	ldd	r11, Z+1	; 0x01
 b0e:	26 ff       	sbrs	r18, 6
 b10:	03 c0       	rjmp	.+6      	; 0xb18 <vfprintf+0x15a>
 b12:	65 2d       	mov	r22, r5
 b14:	70 e0       	ldi	r23, 0x00	; 0
 b16:	02 c0       	rjmp	.+4      	; 0xb1c <vfprintf+0x15e>
 b18:	6f ef       	ldi	r22, 0xFF	; 255
 b1a:	7f ef       	ldi	r23, 0xFF	; 255
 b1c:	c5 01       	movw	r24, r10
 b1e:	2c 87       	std	Y+12, r18	; 0x0c
 b20:	0e 94 b1 06 	call	0xd62	; 0xd62 <strnlen_P>
 b24:	2c 01       	movw	r4, r24
 b26:	2c 85       	ldd	r18, Y+12	; 0x0c
 b28:	20 68       	ori	r18, 0x80	; 128
 b2a:	22 2e       	mov	r2, r18
 b2c:	83 01       	movw	r16, r6
 b2e:	23 fc       	sbrc	r2, 3
 b30:	1b c0       	rjmp	.+54     	; 0xb68 <vfprintf+0x1aa>
 b32:	83 2d       	mov	r24, r3
 b34:	90 e0       	ldi	r25, 0x00	; 0
 b36:	48 16       	cp	r4, r24
 b38:	59 06       	cpc	r5, r25
 b3a:	b0 f4       	brcc	.+44     	; 0xb68 <vfprintf+0x1aa>
 b3c:	b7 01       	movw	r22, r14
 b3e:	80 e2       	ldi	r24, 0x20	; 32
 b40:	90 e0       	ldi	r25, 0x00	; 0
 b42:	0e 94 c7 06 	call	0xd8e	; 0xd8e <fputc>
 b46:	3a 94       	dec	r3
 b48:	f4 cf       	rjmp	.-24     	; 0xb32 <vfprintf+0x174>
 b4a:	f5 01       	movw	r30, r10
 b4c:	27 fc       	sbrc	r2, 7
 b4e:	85 91       	lpm	r24, Z+
 b50:	27 fe       	sbrs	r2, 7
 b52:	81 91       	ld	r24, Z+
 b54:	5f 01       	movw	r10, r30
 b56:	b7 01       	movw	r22, r14
 b58:	90 e0       	ldi	r25, 0x00	; 0
 b5a:	0e 94 c7 06 	call	0xd8e	; 0xd8e <fputc>
 b5e:	31 10       	cpse	r3, r1
 b60:	3a 94       	dec	r3
 b62:	f1 e0       	ldi	r31, 0x01	; 1
 b64:	4f 1a       	sub	r4, r31
 b66:	51 08       	sbc	r5, r1
 b68:	41 14       	cp	r4, r1
 b6a:	51 04       	cpc	r5, r1
 b6c:	71 f7       	brne	.-36     	; 0xb4a <vfprintf+0x18c>
 b6e:	e5 c0       	rjmp	.+458    	; 0xd3a <vfprintf+0x37c>
 b70:	84 36       	cpi	r24, 0x64	; 100
 b72:	11 f0       	breq	.+4      	; 0xb78 <vfprintf+0x1ba>
 b74:	89 36       	cpi	r24, 0x69	; 105
 b76:	39 f5       	brne	.+78     	; 0xbc6 <vfprintf+0x208>
 b78:	f8 01       	movw	r30, r16
 b7a:	27 ff       	sbrs	r18, 7
 b7c:	07 c0       	rjmp	.+14     	; 0xb8c <vfprintf+0x1ce>
 b7e:	60 81       	ld	r22, Z
 b80:	71 81       	ldd	r23, Z+1	; 0x01
 b82:	82 81       	ldd	r24, Z+2	; 0x02
 b84:	93 81       	ldd	r25, Z+3	; 0x03
 b86:	0c 5f       	subi	r16, 0xFC	; 252
 b88:	1f 4f       	sbci	r17, 0xFF	; 255
 b8a:	08 c0       	rjmp	.+16     	; 0xb9c <vfprintf+0x1de>
 b8c:	60 81       	ld	r22, Z
 b8e:	71 81       	ldd	r23, Z+1	; 0x01
 b90:	07 2e       	mov	r0, r23
 b92:	00 0c       	add	r0, r0
 b94:	88 0b       	sbc	r24, r24
 b96:	99 0b       	sbc	r25, r25
 b98:	0e 5f       	subi	r16, 0xFE	; 254
 b9a:	1f 4f       	sbci	r17, 0xFF	; 255
 b9c:	2f 76       	andi	r18, 0x6F	; 111
 b9e:	72 2e       	mov	r7, r18
 ba0:	97 ff       	sbrs	r25, 7
 ba2:	09 c0       	rjmp	.+18     	; 0xbb6 <vfprintf+0x1f8>
 ba4:	90 95       	com	r25
 ba6:	80 95       	com	r24
 ba8:	70 95       	com	r23
 baa:	61 95       	neg	r22
 bac:	7f 4f       	sbci	r23, 0xFF	; 255
 bae:	8f 4f       	sbci	r24, 0xFF	; 255
 bb0:	9f 4f       	sbci	r25, 0xFF	; 255
 bb2:	20 68       	ori	r18, 0x80	; 128
 bb4:	72 2e       	mov	r7, r18
 bb6:	2a e0       	ldi	r18, 0x0A	; 10
 bb8:	30 e0       	ldi	r19, 0x00	; 0
 bba:	a4 01       	movw	r20, r8
 bbc:	0e 94 ff 06 	call	0xdfe	; 0xdfe <__ultoa_invert>
 bc0:	a8 2e       	mov	r10, r24
 bc2:	a8 18       	sub	r10, r8
 bc4:	44 c0       	rjmp	.+136    	; 0xc4e <vfprintf+0x290>
 bc6:	85 37       	cpi	r24, 0x75	; 117
 bc8:	29 f4       	brne	.+10     	; 0xbd4 <vfprintf+0x216>
 bca:	2f 7e       	andi	r18, 0xEF	; 239
 bcc:	b2 2e       	mov	r11, r18
 bce:	2a e0       	ldi	r18, 0x0A	; 10
 bd0:	30 e0       	ldi	r19, 0x00	; 0
 bd2:	25 c0       	rjmp	.+74     	; 0xc1e <vfprintf+0x260>
 bd4:	f2 2f       	mov	r31, r18
 bd6:	f9 7f       	andi	r31, 0xF9	; 249
 bd8:	bf 2e       	mov	r11, r31
 bda:	8f 36       	cpi	r24, 0x6F	; 111
 bdc:	c1 f0       	breq	.+48     	; 0xc0e <vfprintf+0x250>
 bde:	18 f4       	brcc	.+6      	; 0xbe6 <vfprintf+0x228>
 be0:	88 35       	cpi	r24, 0x58	; 88
 be2:	79 f0       	breq	.+30     	; 0xc02 <vfprintf+0x244>
 be4:	b4 c0       	rjmp	.+360    	; 0xd4e <vfprintf+0x390>
 be6:	80 37       	cpi	r24, 0x70	; 112
 be8:	19 f0       	breq	.+6      	; 0xbf0 <vfprintf+0x232>
 bea:	88 37       	cpi	r24, 0x78	; 120
 bec:	21 f0       	breq	.+8      	; 0xbf6 <vfprintf+0x238>
 bee:	af c0       	rjmp	.+350    	; 0xd4e <vfprintf+0x390>
 bf0:	2f 2f       	mov	r18, r31
 bf2:	20 61       	ori	r18, 0x10	; 16
 bf4:	b2 2e       	mov	r11, r18
 bf6:	b4 fe       	sbrs	r11, 4
 bf8:	0d c0       	rjmp	.+26     	; 0xc14 <vfprintf+0x256>
 bfa:	8b 2d       	mov	r24, r11
 bfc:	84 60       	ori	r24, 0x04	; 4
 bfe:	b8 2e       	mov	r11, r24
 c00:	09 c0       	rjmp	.+18     	; 0xc14 <vfprintf+0x256>
 c02:	24 ff       	sbrs	r18, 4
 c04:	0a c0       	rjmp	.+20     	; 0xc1a <vfprintf+0x25c>
 c06:	9f 2f       	mov	r25, r31
 c08:	96 60       	ori	r25, 0x06	; 6
 c0a:	b9 2e       	mov	r11, r25
 c0c:	06 c0       	rjmp	.+12     	; 0xc1a <vfprintf+0x25c>
 c0e:	28 e0       	ldi	r18, 0x08	; 8
 c10:	30 e0       	ldi	r19, 0x00	; 0
 c12:	05 c0       	rjmp	.+10     	; 0xc1e <vfprintf+0x260>
 c14:	20 e1       	ldi	r18, 0x10	; 16
 c16:	30 e0       	ldi	r19, 0x00	; 0
 c18:	02 c0       	rjmp	.+4      	; 0xc1e <vfprintf+0x260>
 c1a:	20 e1       	ldi	r18, 0x10	; 16
 c1c:	32 e0       	ldi	r19, 0x02	; 2
 c1e:	f8 01       	movw	r30, r16
 c20:	b7 fe       	sbrs	r11, 7
 c22:	07 c0       	rjmp	.+14     	; 0xc32 <vfprintf+0x274>
 c24:	60 81       	ld	r22, Z
 c26:	71 81       	ldd	r23, Z+1	; 0x01
 c28:	82 81       	ldd	r24, Z+2	; 0x02
 c2a:	93 81       	ldd	r25, Z+3	; 0x03
 c2c:	0c 5f       	subi	r16, 0xFC	; 252
 c2e:	1f 4f       	sbci	r17, 0xFF	; 255
 c30:	06 c0       	rjmp	.+12     	; 0xc3e <vfprintf+0x280>
 c32:	60 81       	ld	r22, Z
 c34:	71 81       	ldd	r23, Z+1	; 0x01
 c36:	80 e0       	ldi	r24, 0x00	; 0
 c38:	90 e0       	ldi	r25, 0x00	; 0
 c3a:	0e 5f       	subi	r16, 0xFE	; 254
 c3c:	1f 4f       	sbci	r17, 0xFF	; 255
 c3e:	a4 01       	movw	r20, r8
 c40:	0e 94 ff 06 	call	0xdfe	; 0xdfe <__ultoa_invert>
 c44:	a8 2e       	mov	r10, r24
 c46:	a8 18       	sub	r10, r8
 c48:	fb 2d       	mov	r31, r11
 c4a:	ff 77       	andi	r31, 0x7F	; 127
 c4c:	7f 2e       	mov	r7, r31
 c4e:	76 fe       	sbrs	r7, 6
 c50:	0b c0       	rjmp	.+22     	; 0xc68 <vfprintf+0x2aa>
 c52:	37 2d       	mov	r19, r7
 c54:	3e 7f       	andi	r19, 0xFE	; 254
 c56:	a5 14       	cp	r10, r5
 c58:	50 f4       	brcc	.+20     	; 0xc6e <vfprintf+0x2b0>
 c5a:	74 fe       	sbrs	r7, 4
 c5c:	0a c0       	rjmp	.+20     	; 0xc72 <vfprintf+0x2b4>
 c5e:	72 fc       	sbrc	r7, 2
 c60:	08 c0       	rjmp	.+16     	; 0xc72 <vfprintf+0x2b4>
 c62:	37 2d       	mov	r19, r7
 c64:	3e 7e       	andi	r19, 0xEE	; 238
 c66:	05 c0       	rjmp	.+10     	; 0xc72 <vfprintf+0x2b4>
 c68:	ba 2c       	mov	r11, r10
 c6a:	37 2d       	mov	r19, r7
 c6c:	03 c0       	rjmp	.+6      	; 0xc74 <vfprintf+0x2b6>
 c6e:	ba 2c       	mov	r11, r10
 c70:	01 c0       	rjmp	.+2      	; 0xc74 <vfprintf+0x2b6>
 c72:	b5 2c       	mov	r11, r5
 c74:	34 ff       	sbrs	r19, 4
 c76:	0d c0       	rjmp	.+26     	; 0xc92 <vfprintf+0x2d4>
 c78:	fe 01       	movw	r30, r28
 c7a:	ea 0d       	add	r30, r10
 c7c:	f1 1d       	adc	r31, r1
 c7e:	80 81       	ld	r24, Z
 c80:	80 33       	cpi	r24, 0x30	; 48
 c82:	11 f4       	brne	.+4      	; 0xc88 <vfprintf+0x2ca>
 c84:	39 7e       	andi	r19, 0xE9	; 233
 c86:	09 c0       	rjmp	.+18     	; 0xc9a <vfprintf+0x2dc>
 c88:	32 ff       	sbrs	r19, 2
 c8a:	06 c0       	rjmp	.+12     	; 0xc98 <vfprintf+0x2da>
 c8c:	b3 94       	inc	r11
 c8e:	b3 94       	inc	r11
 c90:	04 c0       	rjmp	.+8      	; 0xc9a <vfprintf+0x2dc>
 c92:	83 2f       	mov	r24, r19
 c94:	86 78       	andi	r24, 0x86	; 134
 c96:	09 f0       	breq	.+2      	; 0xc9a <vfprintf+0x2dc>
 c98:	b3 94       	inc	r11
 c9a:	33 fd       	sbrc	r19, 3
 c9c:	13 c0       	rjmp	.+38     	; 0xcc4 <vfprintf+0x306>
 c9e:	30 ff       	sbrs	r19, 0
 ca0:	06 c0       	rjmp	.+12     	; 0xcae <vfprintf+0x2f0>
 ca2:	5a 2c       	mov	r5, r10
 ca4:	b3 14       	cp	r11, r3
 ca6:	18 f4       	brcc	.+6      	; 0xcae <vfprintf+0x2f0>
 ca8:	53 0c       	add	r5, r3
 caa:	5b 18       	sub	r5, r11
 cac:	b3 2c       	mov	r11, r3
 cae:	b3 14       	cp	r11, r3
 cb0:	68 f4       	brcc	.+26     	; 0xccc <vfprintf+0x30e>
 cb2:	b7 01       	movw	r22, r14
 cb4:	80 e2       	ldi	r24, 0x20	; 32
 cb6:	90 e0       	ldi	r25, 0x00	; 0
 cb8:	3c 87       	std	Y+12, r19	; 0x0c
 cba:	0e 94 c7 06 	call	0xd8e	; 0xd8e <fputc>
 cbe:	b3 94       	inc	r11
 cc0:	3c 85       	ldd	r19, Y+12	; 0x0c
 cc2:	f5 cf       	rjmp	.-22     	; 0xcae <vfprintf+0x2f0>
 cc4:	b3 14       	cp	r11, r3
 cc6:	10 f4       	brcc	.+4      	; 0xccc <vfprintf+0x30e>
 cc8:	3b 18       	sub	r3, r11
 cca:	01 c0       	rjmp	.+2      	; 0xcce <vfprintf+0x310>
 ccc:	31 2c       	mov	r3, r1
 cce:	34 ff       	sbrs	r19, 4
 cd0:	12 c0       	rjmp	.+36     	; 0xcf6 <vfprintf+0x338>
 cd2:	b7 01       	movw	r22, r14
 cd4:	80 e3       	ldi	r24, 0x30	; 48
 cd6:	90 e0       	ldi	r25, 0x00	; 0
 cd8:	3c 87       	std	Y+12, r19	; 0x0c
 cda:	0e 94 c7 06 	call	0xd8e	; 0xd8e <fputc>
 cde:	3c 85       	ldd	r19, Y+12	; 0x0c
 ce0:	32 ff       	sbrs	r19, 2
 ce2:	17 c0       	rjmp	.+46     	; 0xd12 <vfprintf+0x354>
 ce4:	31 fd       	sbrc	r19, 1
 ce6:	03 c0       	rjmp	.+6      	; 0xcee <vfprintf+0x330>
 ce8:	88 e7       	ldi	r24, 0x78	; 120
 cea:	90 e0       	ldi	r25, 0x00	; 0
 cec:	02 c0       	rjmp	.+4      	; 0xcf2 <vfprintf+0x334>
 cee:	88 e5       	ldi	r24, 0x58	; 88
 cf0:	90 e0       	ldi	r25, 0x00	; 0
 cf2:	b7 01       	movw	r22, r14
 cf4:	0c c0       	rjmp	.+24     	; 0xd0e <vfprintf+0x350>
 cf6:	83 2f       	mov	r24, r19
 cf8:	86 78       	andi	r24, 0x86	; 134
 cfa:	59 f0       	breq	.+22     	; 0xd12 <vfprintf+0x354>
 cfc:	31 ff       	sbrs	r19, 1
 cfe:	02 c0       	rjmp	.+4      	; 0xd04 <vfprintf+0x346>
 d00:	8b e2       	ldi	r24, 0x2B	; 43
 d02:	01 c0       	rjmp	.+2      	; 0xd06 <vfprintf+0x348>
 d04:	80 e2       	ldi	r24, 0x20	; 32
 d06:	37 fd       	sbrc	r19, 7
 d08:	8d e2       	ldi	r24, 0x2D	; 45
 d0a:	b7 01       	movw	r22, r14
 d0c:	90 e0       	ldi	r25, 0x00	; 0
 d0e:	0e 94 c7 06 	call	0xd8e	; 0xd8e <fputc>
 d12:	a5 14       	cp	r10, r5
 d14:	38 f4       	brcc	.+14     	; 0xd24 <vfprintf+0x366>
 d16:	b7 01       	movw	r22, r14
 d18:	80 e3       	ldi	r24, 0x30	; 48
 d1a:	90 e0       	ldi	r25, 0x00	; 0
 d1c:	0e 94 c7 06 	call	0xd8e	; 0xd8e <fputc>
 d20:	5a 94       	dec	r5
 d22:	f7 cf       	rjmp	.-18     	; 0xd12 <vfprintf+0x354>
 d24:	aa 94       	dec	r10
 d26:	f4 01       	movw	r30, r8
 d28:	ea 0d       	add	r30, r10
 d2a:	f1 1d       	adc	r31, r1
 d2c:	80 81       	ld	r24, Z
 d2e:	b7 01       	movw	r22, r14
 d30:	90 e0       	ldi	r25, 0x00	; 0
 d32:	0e 94 c7 06 	call	0xd8e	; 0xd8e <fputc>
 d36:	a1 10       	cpse	r10, r1
 d38:	f5 cf       	rjmp	.-22     	; 0xd24 <vfprintf+0x366>
 d3a:	33 20       	and	r3, r3
 d3c:	09 f4       	brne	.+2      	; 0xd40 <vfprintf+0x382>
 d3e:	51 ce       	rjmp	.-862    	; 0x9e2 <vfprintf+0x24>
 d40:	b7 01       	movw	r22, r14
 d42:	80 e2       	ldi	r24, 0x20	; 32
 d44:	90 e0       	ldi	r25, 0x00	; 0
 d46:	0e 94 c7 06 	call	0xd8e	; 0xd8e <fputc>
 d4a:	3a 94       	dec	r3
 d4c:	f6 cf       	rjmp	.-20     	; 0xd3a <vfprintf+0x37c>
 d4e:	f7 01       	movw	r30, r14
 d50:	86 81       	ldd	r24, Z+6	; 0x06
 d52:	97 81       	ldd	r25, Z+7	; 0x07
 d54:	02 c0       	rjmp	.+4      	; 0xd5a <vfprintf+0x39c>
 d56:	8f ef       	ldi	r24, 0xFF	; 255
 d58:	9f ef       	ldi	r25, 0xFF	; 255
 d5a:	2c 96       	adiw	r28, 0x0c	; 12
 d5c:	e2 e1       	ldi	r30, 0x12	; 18
 d5e:	0c 94 79 07 	jmp	0xef2	; 0xef2 <__epilogue_restores__>

00000d62 <strnlen_P>:
 d62:	fc 01       	movw	r30, r24
 d64:	05 90       	lpm	r0, Z+
 d66:	61 50       	subi	r22, 0x01	; 1
 d68:	70 40       	sbci	r23, 0x00	; 0
 d6a:	01 10       	cpse	r0, r1
 d6c:	d8 f7       	brcc	.-10     	; 0xd64 <strnlen_P+0x2>
 d6e:	80 95       	com	r24
 d70:	90 95       	com	r25
 d72:	8e 0f       	add	r24, r30
 d74:	9f 1f       	adc	r25, r31
 d76:	08 95       	ret

00000d78 <strnlen>:
 d78:	fc 01       	movw	r30, r24
 d7a:	61 50       	subi	r22, 0x01	; 1
 d7c:	70 40       	sbci	r23, 0x00	; 0
 d7e:	01 90       	ld	r0, Z+
 d80:	01 10       	cpse	r0, r1
 d82:	d8 f7       	brcc	.-10     	; 0xd7a <strnlen+0x2>
 d84:	80 95       	com	r24
 d86:	90 95       	com	r25
 d88:	8e 0f       	add	r24, r30
 d8a:	9f 1f       	adc	r25, r31
 d8c:	08 95       	ret

00000d8e <fputc>:
 d8e:	0f 93       	push	r16
 d90:	1f 93       	push	r17
 d92:	cf 93       	push	r28
 d94:	df 93       	push	r29
 d96:	fb 01       	movw	r30, r22
 d98:	23 81       	ldd	r18, Z+3	; 0x03
 d9a:	21 fd       	sbrc	r18, 1
 d9c:	03 c0       	rjmp	.+6      	; 0xda4 <fputc+0x16>
 d9e:	8f ef       	ldi	r24, 0xFF	; 255
 da0:	9f ef       	ldi	r25, 0xFF	; 255
 da2:	28 c0       	rjmp	.+80     	; 0xdf4 <fputc+0x66>
 da4:	22 ff       	sbrs	r18, 2
 da6:	16 c0       	rjmp	.+44     	; 0xdd4 <fputc+0x46>
 da8:	46 81       	ldd	r20, Z+6	; 0x06
 daa:	57 81       	ldd	r21, Z+7	; 0x07
 dac:	24 81       	ldd	r18, Z+4	; 0x04
 dae:	35 81       	ldd	r19, Z+5	; 0x05
 db0:	42 17       	cp	r20, r18
 db2:	53 07       	cpc	r21, r19
 db4:	44 f4       	brge	.+16     	; 0xdc6 <fputc+0x38>
 db6:	a0 81       	ld	r26, Z
 db8:	b1 81       	ldd	r27, Z+1	; 0x01
 dba:	9d 01       	movw	r18, r26
 dbc:	2f 5f       	subi	r18, 0xFF	; 255
 dbe:	3f 4f       	sbci	r19, 0xFF	; 255
 dc0:	31 83       	std	Z+1, r19	; 0x01
 dc2:	20 83       	st	Z, r18
 dc4:	8c 93       	st	X, r24
 dc6:	26 81       	ldd	r18, Z+6	; 0x06
 dc8:	37 81       	ldd	r19, Z+7	; 0x07
 dca:	2f 5f       	subi	r18, 0xFF	; 255
 dcc:	3f 4f       	sbci	r19, 0xFF	; 255
 dce:	37 83       	std	Z+7, r19	; 0x07
 dd0:	26 83       	std	Z+6, r18	; 0x06
 dd2:	10 c0       	rjmp	.+32     	; 0xdf4 <fputc+0x66>
 dd4:	eb 01       	movw	r28, r22
 dd6:	09 2f       	mov	r16, r25
 dd8:	18 2f       	mov	r17, r24
 dda:	00 84       	ldd	r0, Z+8	; 0x08
 ddc:	f1 85       	ldd	r31, Z+9	; 0x09
 dde:	e0 2d       	mov	r30, r0
 de0:	09 95       	icall
 de2:	89 2b       	or	r24, r25
 de4:	e1 f6       	brne	.-72     	; 0xd9e <fputc+0x10>
 de6:	8e 81       	ldd	r24, Y+6	; 0x06
 de8:	9f 81       	ldd	r25, Y+7	; 0x07
 dea:	01 96       	adiw	r24, 0x01	; 1
 dec:	9f 83       	std	Y+7, r25	; 0x07
 dee:	8e 83       	std	Y+6, r24	; 0x06
 df0:	81 2f       	mov	r24, r17
 df2:	90 2f       	mov	r25, r16
 df4:	df 91       	pop	r29
 df6:	cf 91       	pop	r28
 df8:	1f 91       	pop	r17
 dfa:	0f 91       	pop	r16
 dfc:	08 95       	ret

00000dfe <__ultoa_invert>:
 dfe:	fa 01       	movw	r30, r20
 e00:	aa 27       	eor	r26, r26
 e02:	28 30       	cpi	r18, 0x08	; 8
 e04:	51 f1       	breq	.+84     	; 0xe5a <__ultoa_invert+0x5c>
 e06:	20 31       	cpi	r18, 0x10	; 16
 e08:	81 f1       	breq	.+96     	; 0xe6a <__ultoa_invert+0x6c>
 e0a:	e8 94       	clt
 e0c:	6f 93       	push	r22
 e0e:	6e 7f       	andi	r22, 0xFE	; 254
 e10:	6e 5f       	subi	r22, 0xFE	; 254
 e12:	7f 4f       	sbci	r23, 0xFF	; 255
 e14:	8f 4f       	sbci	r24, 0xFF	; 255
 e16:	9f 4f       	sbci	r25, 0xFF	; 255
 e18:	af 4f       	sbci	r26, 0xFF	; 255
 e1a:	b1 e0       	ldi	r27, 0x01	; 1
 e1c:	3e d0       	rcall	.+124    	; 0xe9a <__ultoa_invert+0x9c>
 e1e:	b4 e0       	ldi	r27, 0x04	; 4
 e20:	3c d0       	rcall	.+120    	; 0xe9a <__ultoa_invert+0x9c>
 e22:	67 0f       	add	r22, r23
 e24:	78 1f       	adc	r23, r24
 e26:	89 1f       	adc	r24, r25
 e28:	9a 1f       	adc	r25, r26
 e2a:	a1 1d       	adc	r26, r1
 e2c:	68 0f       	add	r22, r24
 e2e:	79 1f       	adc	r23, r25
 e30:	8a 1f       	adc	r24, r26
 e32:	91 1d       	adc	r25, r1
 e34:	a1 1d       	adc	r26, r1
 e36:	6a 0f       	add	r22, r26
 e38:	71 1d       	adc	r23, r1
 e3a:	81 1d       	adc	r24, r1
 e3c:	91 1d       	adc	r25, r1
 e3e:	a1 1d       	adc	r26, r1
 e40:	20 d0       	rcall	.+64     	; 0xe82 <__ultoa_invert+0x84>
 e42:	09 f4       	brne	.+2      	; 0xe46 <__ultoa_invert+0x48>
 e44:	68 94       	set
 e46:	3f 91       	pop	r19
 e48:	2a e0       	ldi	r18, 0x0A	; 10
 e4a:	26 9f       	mul	r18, r22
 e4c:	11 24       	eor	r1, r1
 e4e:	30 19       	sub	r19, r0
 e50:	30 5d       	subi	r19, 0xD0	; 208
 e52:	31 93       	st	Z+, r19
 e54:	de f6       	brtc	.-74     	; 0xe0c <__ultoa_invert+0xe>
 e56:	cf 01       	movw	r24, r30
 e58:	08 95       	ret
 e5a:	46 2f       	mov	r20, r22
 e5c:	47 70       	andi	r20, 0x07	; 7
 e5e:	40 5d       	subi	r20, 0xD0	; 208
 e60:	41 93       	st	Z+, r20
 e62:	b3 e0       	ldi	r27, 0x03	; 3
 e64:	0f d0       	rcall	.+30     	; 0xe84 <__ultoa_invert+0x86>
 e66:	c9 f7       	brne	.-14     	; 0xe5a <__ultoa_invert+0x5c>
 e68:	f6 cf       	rjmp	.-20     	; 0xe56 <__ultoa_invert+0x58>
 e6a:	46 2f       	mov	r20, r22
 e6c:	4f 70       	andi	r20, 0x0F	; 15
 e6e:	40 5d       	subi	r20, 0xD0	; 208
 e70:	4a 33       	cpi	r20, 0x3A	; 58
 e72:	18 f0       	brcs	.+6      	; 0xe7a <__ultoa_invert+0x7c>
 e74:	49 5d       	subi	r20, 0xD9	; 217
 e76:	31 fd       	sbrc	r19, 1
 e78:	40 52       	subi	r20, 0x20	; 32
 e7a:	41 93       	st	Z+, r20
 e7c:	02 d0       	rcall	.+4      	; 0xe82 <__ultoa_invert+0x84>
 e7e:	a9 f7       	brne	.-22     	; 0xe6a <__ultoa_invert+0x6c>
 e80:	ea cf       	rjmp	.-44     	; 0xe56 <__ultoa_invert+0x58>
 e82:	b4 e0       	ldi	r27, 0x04	; 4
 e84:	a6 95       	lsr	r26
 e86:	97 95       	ror	r25
 e88:	87 95       	ror	r24
 e8a:	77 95       	ror	r23
 e8c:	67 95       	ror	r22
 e8e:	ba 95       	dec	r27
 e90:	c9 f7       	brne	.-14     	; 0xe84 <__ultoa_invert+0x86>
 e92:	00 97       	sbiw	r24, 0x00	; 0
 e94:	61 05       	cpc	r22, r1
 e96:	71 05       	cpc	r23, r1
 e98:	08 95       	ret
 e9a:	9b 01       	movw	r18, r22
 e9c:	ac 01       	movw	r20, r24
 e9e:	0a 2e       	mov	r0, r26
 ea0:	06 94       	lsr	r0
 ea2:	57 95       	ror	r21
 ea4:	47 95       	ror	r20
 ea6:	37 95       	ror	r19
 ea8:	27 95       	ror	r18
 eaa:	ba 95       	dec	r27
 eac:	c9 f7       	brne	.-14     	; 0xea0 <__ultoa_invert+0xa2>
 eae:	62 0f       	add	r22, r18
 eb0:	73 1f       	adc	r23, r19
 eb2:	84 1f       	adc	r24, r20
 eb4:	95 1f       	adc	r25, r21
 eb6:	a0 1d       	adc	r26, r0
 eb8:	08 95       	ret

00000eba <__prologue_saves__>:
 eba:	2f 92       	push	r2
 ebc:	3f 92       	push	r3
 ebe:	4f 92       	push	r4
 ec0:	5f 92       	push	r5
 ec2:	6f 92       	push	r6
 ec4:	7f 92       	push	r7
 ec6:	8f 92       	push	r8
 ec8:	9f 92       	push	r9
 eca:	af 92       	push	r10
 ecc:	bf 92       	push	r11
 ece:	cf 92       	push	r12
 ed0:	df 92       	push	r13
 ed2:	ef 92       	push	r14
 ed4:	ff 92       	push	r15
 ed6:	0f 93       	push	r16
 ed8:	1f 93       	push	r17
 eda:	cf 93       	push	r28
 edc:	df 93       	push	r29
 ede:	cd b7       	in	r28, 0x3d	; 61
 ee0:	de b7       	in	r29, 0x3e	; 62
 ee2:	ca 1b       	sub	r28, r26
 ee4:	db 0b       	sbc	r29, r27
 ee6:	0f b6       	in	r0, 0x3f	; 63
 ee8:	f8 94       	cli
 eea:	de bf       	out	0x3e, r29	; 62
 eec:	0f be       	out	0x3f, r0	; 63
 eee:	cd bf       	out	0x3d, r28	; 61
 ef0:	09 94       	ijmp

00000ef2 <__epilogue_restores__>:
 ef2:	2a 88       	ldd	r2, Y+18	; 0x12
 ef4:	39 88       	ldd	r3, Y+17	; 0x11
 ef6:	48 88       	ldd	r4, Y+16	; 0x10
 ef8:	5f 84       	ldd	r5, Y+15	; 0x0f
 efa:	6e 84       	ldd	r6, Y+14	; 0x0e
 efc:	7d 84       	ldd	r7, Y+13	; 0x0d
 efe:	8c 84       	ldd	r8, Y+12	; 0x0c
 f00:	9b 84       	ldd	r9, Y+11	; 0x0b
 f02:	aa 84       	ldd	r10, Y+10	; 0x0a
 f04:	b9 84       	ldd	r11, Y+9	; 0x09
 f06:	c8 84       	ldd	r12, Y+8	; 0x08
 f08:	df 80       	ldd	r13, Y+7	; 0x07
 f0a:	ee 80       	ldd	r14, Y+6	; 0x06
 f0c:	fd 80       	ldd	r15, Y+5	; 0x05
 f0e:	0c 81       	ldd	r16, Y+4	; 0x04
 f10:	1b 81       	ldd	r17, Y+3	; 0x03
 f12:	aa 81       	ldd	r26, Y+2	; 0x02
 f14:	b9 81       	ldd	r27, Y+1	; 0x01
 f16:	ce 0f       	add	r28, r30
 f18:	d1 1d       	adc	r29, r1
 f1a:	0f b6       	in	r0, 0x3f	; 63
 f1c:	f8 94       	cli
 f1e:	de bf       	out	0x3e, r29	; 62
 f20:	0f be       	out	0x3f, r0	; 63
 f22:	cd bf       	out	0x3d, r28	; 61
 f24:	ed 01       	movw	r28, r26
 f26:	08 95       	ret

00000f28 <_exit>:
 f28:	f8 94       	cli

00000f2a <__stop_program>:
 f2a:	ff cf       	rjmp	.-2      	; 0xf2a <__stop_program>
