
Diode Temp Sensor.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000005a  00800100  00000e02  00000e76  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000e02  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005c  00000000  00000000  00000ed0  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000f2c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000110  00000000  00000000  00000f68  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001433  00000000  00000000  00001078  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000b65  00000000  00000000  000024ab  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000009e6  00000000  00000000  00003010  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000210  00000000  00000000  000039f8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000063a  00000000  00000000  00003c08  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000877  00000000  00000000  00004242  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000d8  00000000  00000000  00004ab9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   8:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  10:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  54:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e2 e0       	ldi	r30, 0x02	; 2
  7c:	fe e0       	ldi	r31, 0x0E	; 14
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	aa 35       	cpi	r26, 0x5A	; 90
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>
  8a:	0e 94 15 02 	call	0x42a	; 0x42a <main>
  8e:	0c 94 ff 06 	jmp	0xdfe	; 0xdfe <_exit>

00000092 <__bad_interrupt>:
  92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <ADCRead>:

	uint16_t input = 0; //We're going to sample and average from 16 readings. 
	uint32_t sum = 0; //The sum of all samples.
	uint16_t average = 0; // the average of all the sample
	
	ADCSRB &= 0x00; //Auto Trigger = Free Running mode
  96:	eb e7       	ldi	r30, 0x7B	; 123
  98:	f0 e0       	ldi	r31, 0x00	; 0
  9a:	90 81       	ld	r25, Z
  9c:	10 82       	st	Z, r1
	ADCSRA |= (1 << ADEN);                // ADC Enable; Interupt Disable; Freq/1 
  9e:	ea e7       	ldi	r30, 0x7A	; 122
  a0:	f0 e0       	ldi	r31, 0x00	; 0
  a2:	90 81       	ld	r25, Z
  a4:	90 68       	ori	r25, 0x80	; 128
  a6:	90 83       	st	Z, r25
	//ADMUX |= (1 << REFS0); //Set reference, AVcc
	ADMUX |= ((1 << REFS0) | (1 << REFS1)) ; //Set Internal 1.1v reference		  
  a8:	ec e7       	ldi	r30, 0x7C	; 124
  aa:	f0 e0       	ldi	r31, 0x00	; 0
  ac:	90 81       	ld	r25, Z
  ae:	90 6c       	ori	r25, 0xC0	; 192
  b0:	90 83       	st	Z, r25
	
	ADMUX &= 0b11110000;
  b2:	90 81       	ld	r25, Z
  b4:	90 7f       	andi	r25, 0xF0	; 240
  b6:	90 83       	st	Z, r25
	    
	ADMUX |= pin;  //Set input pin
  b8:	90 81       	ld	r25, Z
  ba:	89 2b       	or	r24, r25
  bc:	80 83       	st	Z, r24
  be:	20 e0       	ldi	r18, 0x00	; 0
  c0:	34 e0       	ldi	r19, 0x04	; 4
#define sample_time_us 100

uint16_t ADCRead(uint8_t pin){

	uint16_t input = 0; //We're going to sample and average from 16 readings. 
	uint32_t sum = 0; //The sum of all samples.
  c2:	40 e0       	ldi	r20, 0x00	; 0
  c4:	50 e0       	ldi	r21, 0x00	; 0
  c6:	ba 01       	movw	r22, r20
	ADMUX |= pin;  //Set input pin
	
	uint16_t i;
	for(i = 0; i < number_samples; i++) {
	
		ADCSRA |= (1 << ADSC); //Start Conversation
  c8:	ea e7       	ldi	r30, 0x7A	; 122
  ca:	f0 e0       	ldi	r31, 0x00	; 0

		while( (ADCSRA & (1 << ADSC)) ); //Wait till conversation complete ( ADSC == 0 )

		ADCSRA |= (1 << ADIF);   // Clear ADC Interrupt Flag
		
		input = ADC; 
  cc:	a8 e7       	ldi	r26, 0x78	; 120
  ce:	b0 e0       	ldi	r27, 0x00	; 0
	ADMUX |= pin;  //Set input pin
	
	uint16_t i;
	for(i = 0; i < number_samples; i++) {
	
		ADCSRA |= (1 << ADSC); //Start Conversation
  d0:	90 81       	ld	r25, Z
  d2:	90 64       	ori	r25, 0x40	; 64
  d4:	90 83       	st	Z, r25

		while( (ADCSRA & (1 << ADSC)) ); //Wait till conversation complete ( ADSC == 0 )
  d6:	90 81       	ld	r25, Z
  d8:	96 fd       	sbrc	r25, 6
  da:	fd cf       	rjmp	.-6      	; 0xd6 <ADCRead+0x40>

		ADCSRA |= (1 << ADIF);   // Clear ADC Interrupt Flag
  dc:	90 81       	ld	r25, Z
  de:	90 61       	ori	r25, 0x10	; 16
  e0:	90 83       	st	Z, r25
		
		input = ADC; 
  e2:	8d 91       	ld	r24, X+
  e4:	9c 91       	ld	r25, X
  e6:	11 97       	sbiw	r26, 0x01	; 1
		sum = sum + input;
  e8:	48 0f       	add	r20, r24
  ea:	59 1f       	adc	r21, r25
  ec:	61 1d       	adc	r22, r1
  ee:	71 1d       	adc	r23, r1
  f0:	21 50       	subi	r18, 0x01	; 1
  f2:	31 09       	sbc	r19, r1
	ADMUX &= 0b11110000;
	    
	ADMUX |= pin;  //Set input pin
	
	uint16_t i;
	for(i = 0; i < number_samples; i++) {
  f4:	69 f7       	brne	.-38     	; 0xd0 <ADCRead+0x3a>
		input = ADC; 
		sum = sum + input;
		
	}
	
	average = (uint16_t) (sum / number_samples);
  f6:	db 01       	movw	r26, r22
  f8:	ca 01       	movw	r24, r20
  fa:	07 2e       	mov	r0, r23
  fc:	7a e0       	ldi	r23, 0x0A	; 10
  fe:	b6 95       	lsr	r27
 100:	a7 95       	ror	r26
 102:	97 95       	ror	r25
 104:	87 95       	ror	r24
 106:	7a 95       	dec	r23
 108:	d1 f7       	brne	.-12     	; 0xfe <ADCRead+0x68>
 10a:	70 2d       	mov	r23, r0
		
	return average;
}
 10c:	08 95       	ret

0000010e <toggle_e>:

    while ( (c = pgm_read_byte(progmem_s++)) ) {
        lcd_putc(c);
    }

}/* lcd_puts_p */
 10e:	5e 9a       	sbi	0x0b, 6	; 11
 110:	00 00       	nop
 112:	5e 98       	cbi	0x0b, 6	; 11
 114:	08 95       	ret

00000116 <lcd_write>:
 116:	cf 93       	push	r28
 118:	df 93       	push	r29
 11a:	d8 2f       	mov	r29, r24
 11c:	66 23       	and	r22, r22
 11e:	11 f0       	breq	.+4      	; 0x124 <lcd_write+0xe>
 120:	5c 9a       	sbi	0x0b, 4	; 11
 122:	01 c0       	rjmp	.+2      	; 0x126 <lcd_write+0x10>
 124:	5c 98       	cbi	0x0b, 4	; 11
 126:	5d 98       	cbi	0x0b, 5	; 11
 128:	8a b1       	in	r24, 0x0a	; 10
 12a:	8f 60       	ori	r24, 0x0F	; 15
 12c:	8a b9       	out	0x0a, r24	; 10
 12e:	cb b1       	in	r28, 0x0b	; 11
 130:	c0 7f       	andi	r28, 0xF0	; 240
 132:	8d 2f       	mov	r24, r29
 134:	82 95       	swap	r24
 136:	8f 70       	andi	r24, 0x0F	; 15
 138:	8c 2b       	or	r24, r28
 13a:	8b b9       	out	0x0b, r24	; 11
 13c:	0e 94 87 00 	call	0x10e	; 0x10e <toggle_e>
 140:	df 70       	andi	r29, 0x0F	; 15
 142:	dc 2b       	or	r29, r28
 144:	db b9       	out	0x0b, r29	; 11
 146:	0e 94 87 00 	call	0x10e	; 0x10e <toggle_e>
 14a:	cf 60       	ori	r28, 0x0F	; 15
 14c:	cb b9       	out	0x0b, r28	; 11
 14e:	df 91       	pop	r29
 150:	cf 91       	pop	r28
 152:	08 95       	ret

00000154 <lcd_read>:
 154:	88 23       	and	r24, r24
 156:	11 f0       	breq	.+4      	; 0x15c <lcd_read+0x8>
 158:	5c 9a       	sbi	0x0b, 4	; 11
 15a:	01 c0       	rjmp	.+2      	; 0x15e <lcd_read+0xa>
 15c:	5c 98       	cbi	0x0b, 4	; 11
 15e:	5d 9a       	sbi	0x0b, 5	; 11
 160:	8a b1       	in	r24, 0x0a	; 10
 162:	80 7f       	andi	r24, 0xF0	; 240
 164:	8a b9       	out	0x0a, r24	; 10
 166:	5e 9a       	sbi	0x0b, 6	; 11
 168:	00 00       	nop
 16a:	29 b1       	in	r18, 0x09	; 9
 16c:	5e 98       	cbi	0x0b, 6	; 11
 16e:	00 00       	nop
 170:	5e 9a       	sbi	0x0b, 6	; 11
 172:	00 00       	nop
 174:	99 b1       	in	r25, 0x09	; 9
 176:	22 95       	swap	r18
 178:	20 7f       	andi	r18, 0xF0	; 240
 17a:	89 2f       	mov	r24, r25
 17c:	8f 70       	andi	r24, 0x0F	; 15
 17e:	5e 98       	cbi	0x0b, 6	; 11
 180:	82 2b       	or	r24, r18
 182:	08 95       	ret

00000184 <lcd_waitbusy>:
 184:	80 e0       	ldi	r24, 0x00	; 0
 186:	0e 94 aa 00 	call	0x154	; 0x154 <lcd_read>
 18a:	88 23       	and	r24, r24
 18c:	dc f3       	brlt	.-10     	; 0x184 <lcd_waitbusy>
 18e:	00 c0       	rjmp	.+0      	; 0x190 <lcd_waitbusy+0xc>
 190:	00 c0       	rjmp	.+0      	; 0x192 <lcd_waitbusy+0xe>
 192:	80 e0       	ldi	r24, 0x00	; 0
 194:	0e 94 aa 00 	call	0x154	; 0x154 <lcd_read>
 198:	08 95       	ret

0000019a <lcd_command>:
 19a:	cf 93       	push	r28
 19c:	c8 2f       	mov	r28, r24
 19e:	0e 94 c2 00 	call	0x184	; 0x184 <lcd_waitbusy>
 1a2:	60 e0       	ldi	r22, 0x00	; 0
 1a4:	8c 2f       	mov	r24, r28
 1a6:	0e 94 8b 00 	call	0x116	; 0x116 <lcd_write>
 1aa:	cf 91       	pop	r28
 1ac:	08 95       	ret

000001ae <lcd_gotoxy>:
 1ae:	61 11       	cpse	r22, r1
 1b0:	04 c0       	rjmp	.+8      	; 0x1ba <lcd_gotoxy+0xc>
 1b2:	80 58       	subi	r24, 0x80	; 128
 1b4:	0e 94 cd 00 	call	0x19a	; 0x19a <lcd_command>
 1b8:	08 95       	ret
 1ba:	80 54       	subi	r24, 0x40	; 64
 1bc:	0e 94 cd 00 	call	0x19a	; 0x19a <lcd_command>
 1c0:	08 95       	ret

000001c2 <lcd_clrscr>:
 1c2:	81 e0       	ldi	r24, 0x01	; 1
 1c4:	0e 94 cd 00 	call	0x19a	; 0x19a <lcd_command>
 1c8:	08 95       	ret

000001ca <lcd_putc>:
 1ca:	cf 93       	push	r28
 1cc:	c8 2f       	mov	r28, r24
 1ce:	0e 94 c2 00 	call	0x184	; 0x184 <lcd_waitbusy>
 1d2:	ca 30       	cpi	r28, 0x0A	; 10
 1d4:	49 f4       	brne	.+18     	; 0x1e8 <lcd_putc+0x1e>
 1d6:	80 34       	cpi	r24, 0x40	; 64
 1d8:	10 f0       	brcs	.+4      	; 0x1de <lcd_putc+0x14>
 1da:	80 e0       	ldi	r24, 0x00	; 0
 1dc:	01 c0       	rjmp	.+2      	; 0x1e0 <lcd_putc+0x16>
 1de:	80 e4       	ldi	r24, 0x40	; 64
 1e0:	80 58       	subi	r24, 0x80	; 128
 1e2:	0e 94 cd 00 	call	0x19a	; 0x19a <lcd_command>
 1e6:	04 c0       	rjmp	.+8      	; 0x1f0 <lcd_putc+0x26>
 1e8:	61 e0       	ldi	r22, 0x01	; 1
 1ea:	8c 2f       	mov	r24, r28
 1ec:	0e 94 8b 00 	call	0x116	; 0x116 <lcd_write>
 1f0:	cf 91       	pop	r28
 1f2:	08 95       	ret

000001f4 <lcd_puts>:
 1f4:	cf 93       	push	r28
 1f6:	df 93       	push	r29
 1f8:	ec 01       	movw	r28, r24
 1fa:	21 96       	adiw	r28, 0x01	; 1
 1fc:	fc 01       	movw	r30, r24
 1fe:	80 81       	ld	r24, Z
 200:	88 23       	and	r24, r24
 202:	29 f0       	breq	.+10     	; 0x20e <lcd_puts+0x1a>
 204:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_putc>
 208:	89 91       	ld	r24, Y+
 20a:	81 11       	cpse	r24, r1
 20c:	fb cf       	rjmp	.-10     	; 0x204 <lcd_puts+0x10>
 20e:	df 91       	pop	r29
 210:	cf 91       	pop	r28
 212:	08 95       	ret

00000214 <lcd_init>:
                   LCD_DISP_ON_CURSOR      display on, cursor on
                   LCD_DISP_CURSOR_BLINK   display on, cursor on flashing
Returns:  none
*************************************************************************/
void lcd_init(uint8_t dispAttr)
{
 214:	cf 93       	push	r28
 216:	c8 2f       	mov	r28, r24
      && ( &LCD_RS_PORT == &LCD_DATA0_PORT) && ( &LCD_RW_PORT == &LCD_DATA0_PORT) && (&LCD_E_PORT == &LCD_DATA0_PORT)
      && (LCD_DATA0_PIN == 0 ) && (LCD_DATA1_PIN == 1) && (LCD_DATA2_PIN == 2) && (LCD_DATA3_PIN == 3) 
      && (LCD_RS_PIN == 4 ) && (LCD_RW_PIN == 5) && (LCD_E_PIN == 6 ) )
    {
        /* configure all port bits as output (all LCD lines on same port) */
        DDR(LCD_DATA0_PORT) |= 0x7F;
 218:	9a b1       	in	r25, 0x0a	; 10
 21a:	9f 67       	ori	r25, 0x7F	; 127
 21c:	9a b9       	out	0x0a, r25	; 10
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 21e:	8f e9       	ldi	r24, 0x9F	; 159
 220:	9f e0       	ldi	r25, 0x0F	; 15
 222:	01 97       	sbiw	r24, 0x01	; 1
 224:	f1 f7       	brne	.-4      	; 0x222 <lcd_init+0xe>
 226:	00 c0       	rjmp	.+0      	; 0x228 <lcd_init+0x14>
 228:	00 00       	nop
        DDR(LCD_DATA3_PORT) |= _BV(LCD_DATA3_PIN);
    }
    delay(LCD_DELAY_BOOTUP);             /* wait 16ms or more after power-on       */
    
    /* initial write to lcd is 8bit */
    LCD_DATA1_PORT |= _BV(LCD_DATA1_PIN);    // LCD_FUNCTION>>4;
 22a:	59 9a       	sbi	0x0b, 1	; 11
    LCD_DATA0_PORT |= _BV(LCD_DATA0_PIN);    // LCD_FUNCTION_8BIT>>4;
 22c:	58 9a       	sbi	0x0b, 0	; 11
    lcd_e_toggle();
 22e:	0e 94 87 00 	call	0x10e	; 0x10e <toggle_e>
 232:	81 ee       	ldi	r24, 0xE1	; 225
 234:	94 e0       	ldi	r25, 0x04	; 4
 236:	01 97       	sbiw	r24, 0x01	; 1
 238:	f1 f7       	brne	.-4      	; 0x236 <lcd_init+0x22>
 23a:	00 c0       	rjmp	.+0      	; 0x23c <lcd_init+0x28>
 23c:	00 00       	nop
    delay(LCD_DELAY_INIT);               /* delay, busy flag can't be checked here */
   
    /* repeat last command */ 
    lcd_e_toggle();      
 23e:	0e 94 87 00 	call	0x10e	; 0x10e <toggle_e>
 242:	95 e1       	ldi	r25, 0x15	; 21
 244:	9a 95       	dec	r25
 246:	f1 f7       	brne	.-4      	; 0x244 <lcd_init+0x30>
 248:	00 00       	nop
    delay(LCD_DELAY_INIT_REP);           /* delay, busy flag can't be checked here */
    
    /* repeat last command a third time */
    lcd_e_toggle();      
 24a:	0e 94 87 00 	call	0x10e	; 0x10e <toggle_e>
 24e:	85 e1       	ldi	r24, 0x15	; 21
 250:	8a 95       	dec	r24
 252:	f1 f7       	brne	.-4      	; 0x250 <lcd_init+0x3c>
 254:	00 00       	nop
    delay(LCD_DELAY_INIT_REP);           /* delay, busy flag can't be checked here */

    /* now configure for 4bit mode */
    LCD_DATA0_PORT &= ~_BV(LCD_DATA0_PIN);   // LCD_FUNCTION_4BIT_1LINE>>4
 256:	58 98       	cbi	0x0b, 0	; 11
    lcd_e_toggle();
 258:	0e 94 87 00 	call	0x10e	; 0x10e <toggle_e>
 25c:	95 e1       	ldi	r25, 0x15	; 21
 25e:	9a 95       	dec	r25
 260:	f1 f7       	brne	.-4      	; 0x25e <lcd_init+0x4a>
 262:	00 00       	nop
    /* Display with KS0073 controller requires special commands for enabling 4 line mode */
	lcd_command(KS0073_EXTENDED_FUNCTION_REGISTER_ON);
	lcd_command(KS0073_4LINES_MODE);
	lcd_command(KS0073_EXTENDED_FUNCTION_REGISTER_OFF);
#else
    lcd_command(LCD_FUNCTION_DEFAULT);      /* function set: display lines  */
 264:	88 e2       	ldi	r24, 0x28	; 40
 266:	0e 94 cd 00 	call	0x19a	; 0x19a <lcd_command>
#endif
    lcd_command(LCD_DISP_OFF);              /* display off                  */
 26a:	88 e0       	ldi	r24, 0x08	; 8
 26c:	0e 94 cd 00 	call	0x19a	; 0x19a <lcd_command>
    lcd_clrscr();                           /* display clear                */ 
 270:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <lcd_clrscr>
    lcd_command(LCD_MODE_DEFAULT);          /* set entry mode               */
 274:	86 e0       	ldi	r24, 0x06	; 6
 276:	0e 94 cd 00 	call	0x19a	; 0x19a <lcd_command>
    lcd_command(dispAttr);                  /* display/cursor control       */
 27a:	8c 2f       	mov	r24, r28
 27c:	0e 94 cd 00 	call	0x19a	; 0x19a <lcd_command>

}/* lcd_init */
 280:	cf 91       	pop	r28
 282:	08 95       	ret

00000284 <lcd_Write>:

  
 ***************************************
 */

 void lcd_Write( uint16_t adc_reading_lm35, uint16_t adc_reading_diode, uint16_t temperture_lm35, uint16_t temperture_diode ){  //Not Tested
 284:	af 92       	push	r10
 286:	bf 92       	push	r11
 288:	cf 92       	push	r12
 28a:	df 92       	push	r13
 28c:	ef 92       	push	r14
 28e:	ff 92       	push	r15
 290:	0f 93       	push	r16
 292:	1f 93       	push	r17
 294:	cf 93       	push	r28
 296:	df 93       	push	r29
 298:	cd b7       	in	r28, 0x3d	; 61
 29a:	de b7       	in	r29, 0x3e	; 62
 29c:	a2 97       	sbiw	r28, 0x22	; 34
 29e:	0f b6       	in	r0, 0x3f	; 63
 2a0:	f8 94       	cli
 2a2:	de bf       	out	0x3e, r29	; 62
 2a4:	0f be       	out	0x3f, r0	; 63
 2a6:	cd bf       	out	0x3d, r28	; 61
 2a8:	d8 2e       	mov	r13, r24
 2aa:	c9 2e       	mov	r12, r25
 2ac:	b6 2e       	mov	r11, r22
 2ae:	a7 2e       	mov	r10, r23
 2b0:	8a 01       	movw	r16, r20
 2b2:	79 01       	movw	r14, r18

	lcd_init( LCD_DISP_ON );   //Turn the LCD on, without cursor.
 2b4:	8c e0       	ldi	r24, 0x0C	; 12
 2b6:	0e 94 0a 01 	call	0x214	; 0x214 <lcd_init>



	// The if statement is to prevent overloading the output since the model allows for 
	// such occurances. 
	if ( (temperture_lm35 < MAX_TEMP) && (temperture_diode < MAX_TEMP) ){
 2ba:	0e 36       	cpi	r16, 0x6E	; 110
 2bc:	11 05       	cpc	r17, r1
 2be:	08 f0       	brcs	.+2      	; 0x2c2 <lcd_Write+0x3e>
 2c0:	9e c0       	rjmp	.+316    	; 0x3fe <lcd_Write+0x17a>
 2c2:	8e e6       	ldi	r24, 0x6E	; 110
 2c4:	e8 16       	cp	r14, r24
 2c6:	f1 04       	cpc	r15, r1
 2c8:	08 f0       	brcs	.+2      	; 0x2cc <lcd_Write+0x48>
 2ca:	47 c0       	rjmp	.+142    	; 0x35a <lcd_Write+0xd6>
	
		sprintf(display_line1, "LM35 :%4.0d - %dC", adc_reading_lm35, temperture_lm35);     //First line on the LCD
 2cc:	1f 93       	push	r17
 2ce:	0f 93       	push	r16
 2d0:	cf 92       	push	r12
 2d2:	df 92       	push	r13
 2d4:	80 e0       	ldi	r24, 0x00	; 0
 2d6:	91 e0       	ldi	r25, 0x01	; 1
 2d8:	9f 93       	push	r25
 2da:	8f 93       	push	r24
 2dc:	ce 01       	movw	r24, r28
 2de:	01 96       	adiw	r24, 0x01	; 1
 2e0:	9f 93       	push	r25
 2e2:	8f 93       	push	r24
 2e4:	0e 94 27 04 	call	0x84e	; 0x84e <sprintf>
		sprintf(display_line2, "DIODE:%4.0d - %dC", adc_reading_diode, temperture_diode);   //Second line on the LCD
 2e8:	ff 92       	push	r15
 2ea:	ef 92       	push	r14
 2ec:	af 92       	push	r10
 2ee:	bf 92       	push	r11
 2f0:	82 e1       	ldi	r24, 0x12	; 18
 2f2:	91 e0       	ldi	r25, 0x01	; 1
 2f4:	9f 93       	push	r25
 2f6:	8f 93       	push	r24
 2f8:	ce 01       	movw	r24, r28
 2fa:	42 96       	adiw	r24, 0x12	; 18
 2fc:	9f 93       	push	r25
 2fe:	8f 93       	push	r24
 300:	0e 94 27 04 	call	0x84e	; 0x84e <sprintf>
 304:	0f b6       	in	r0, 0x3f	; 63
 306:	f8 94       	cli
 308:	de bf       	out	0x3e, r29	; 62
 30a:	0f be       	out	0x3f, r0	; 63
 30c:	cd bf       	out	0x3d, r28	; 61
 30e:	66 c0       	rjmp	.+204    	; 0x3dc <lcd_Write+0x158>
		
	} else if ( (temperture_lm35 > MAX_TEMP) && (temperture_diode < MAX_TEMP) ) {
 310:	9e e6       	ldi	r25, 0x6E	; 110
 312:	e9 16       	cp	r14, r25
 314:	f1 04       	cpc	r15, r1
 316:	08 f0       	brcs	.+2      	; 0x31a <lcd_Write+0x96>
 318:	44 c0       	rjmp	.+136    	; 0x3a2 <lcd_Write+0x11e>
		
		sprintf(display_line1, "LM35 :%4.0d -  :(", adc_reading_lm35);     //First line on the LCD
 31a:	cf 92       	push	r12
 31c:	df 92       	push	r13
 31e:	84 e2       	ldi	r24, 0x24	; 36
 320:	91 e0       	ldi	r25, 0x01	; 1
 322:	9f 93       	push	r25
 324:	8f 93       	push	r24
 326:	ce 01       	movw	r24, r28
 328:	01 96       	adiw	r24, 0x01	; 1
 32a:	9f 93       	push	r25
 32c:	8f 93       	push	r24
 32e:	0e 94 27 04 	call	0x84e	; 0x84e <sprintf>
		sprintf(display_line2, "DIODE:%4.0d - %dC", adc_reading_diode, temperture_diode);   //Second line on the LCD			
 332:	ff 92       	push	r15
 334:	ef 92       	push	r14
 336:	af 92       	push	r10
 338:	bf 92       	push	r11
 33a:	82 e1       	ldi	r24, 0x12	; 18
 33c:	91 e0       	ldi	r25, 0x01	; 1
 33e:	9f 93       	push	r25
 340:	8f 93       	push	r24
 342:	ce 01       	movw	r24, r28
 344:	42 96       	adiw	r24, 0x12	; 18
 346:	9f 93       	push	r25
 348:	8f 93       	push	r24
 34a:	0e 94 27 04 	call	0x84e	; 0x84e <sprintf>
 34e:	0f b6       	in	r0, 0x3f	; 63
 350:	f8 94       	cli
 352:	de bf       	out	0x3e, r29	; 62
 354:	0f be       	out	0x3f, r0	; 63
 356:	cd bf       	out	0x3d, r28	; 61
 358:	41 c0       	rjmp	.+130    	; 0x3dc <lcd_Write+0x158>
		
	} else if ( (temperture_lm35 < MAX_TEMP) && (temperture_diode > MAX_TEMP) ) {
 35a:	9f e6       	ldi	r25, 0x6F	; 111
 35c:	e9 16       	cp	r14, r25
 35e:	f1 04       	cpc	r15, r1
 360:	00 f1       	brcs	.+64     	; 0x3a2 <lcd_Write+0x11e>
		
		sprintf(display_line1, "LM35 :%4.0d - %dC", adc_reading_lm35, temperture_lm35);     //First line on the LCD
 362:	1f 93       	push	r17
 364:	0f 93       	push	r16
 366:	cf 92       	push	r12
 368:	df 92       	push	r13
 36a:	80 e0       	ldi	r24, 0x00	; 0
 36c:	91 e0       	ldi	r25, 0x01	; 1
 36e:	9f 93       	push	r25
 370:	8f 93       	push	r24
 372:	ce 01       	movw	r24, r28
 374:	01 96       	adiw	r24, 0x01	; 1
 376:	9f 93       	push	r25
 378:	8f 93       	push	r24
 37a:	0e 94 27 04 	call	0x84e	; 0x84e <sprintf>
		sprintf(display_line2, "DIODE:%4.0d -  :C", adc_reading_diode);   //Second line on the LCD
 37e:	af 92       	push	r10
 380:	bf 92       	push	r11
 382:	86 e3       	ldi	r24, 0x36	; 54
 384:	91 e0       	ldi	r25, 0x01	; 1
 386:	9f 93       	push	r25
 388:	8f 93       	push	r24
 38a:	ce 01       	movw	r24, r28
 38c:	42 96       	adiw	r24, 0x12	; 18
 38e:	9f 93       	push	r25
 390:	8f 93       	push	r24
 392:	0e 94 27 04 	call	0x84e	; 0x84e <sprintf>
 396:	0f b6       	in	r0, 0x3f	; 63
 398:	f8 94       	cli
 39a:	de bf       	out	0x3e, r29	; 62
 39c:	0f be       	out	0x3f, r0	; 63
 39e:	cd bf       	out	0x3d, r28	; 61
 3a0:	1d c0       	rjmp	.+58     	; 0x3dc <lcd_Write+0x158>
		
	} else {
		
		sprintf(display_line1, "LM35 :%4.0d -  :C", adc_reading_lm35);     //First line on the LCD
 3a2:	cf 92       	push	r12
 3a4:	df 92       	push	r13
 3a6:	88 e4       	ldi	r24, 0x48	; 72
 3a8:	91 e0       	ldi	r25, 0x01	; 1
 3aa:	9f 93       	push	r25
 3ac:	8f 93       	push	r24
 3ae:	ce 01       	movw	r24, r28
 3b0:	01 96       	adiw	r24, 0x01	; 1
 3b2:	9f 93       	push	r25
 3b4:	8f 93       	push	r24
 3b6:	0e 94 27 04 	call	0x84e	; 0x84e <sprintf>
		sprintf(display_line2, "DIODE:%4.0d -  :C", adc_reading_diode);   //Second line on the LCD		
 3ba:	af 92       	push	r10
 3bc:	bf 92       	push	r11
 3be:	86 e3       	ldi	r24, 0x36	; 54
 3c0:	91 e0       	ldi	r25, 0x01	; 1
 3c2:	9f 93       	push	r25
 3c4:	8f 93       	push	r24
 3c6:	ce 01       	movw	r24, r28
 3c8:	42 96       	adiw	r24, 0x12	; 18
 3ca:	9f 93       	push	r25
 3cc:	8f 93       	push	r24
 3ce:	0e 94 27 04 	call	0x84e	; 0x84e <sprintf>
 3d2:	0f b6       	in	r0, 0x3f	; 63
 3d4:	f8 94       	cli
 3d6:	de bf       	out	0x3e, r29	; 62
 3d8:	0f be       	out	0x3f, r0	; 63
 3da:	cd bf       	out	0x3d, r28	; 61
		
	}

	lcd_gotoxy((uint8_t) 0x0, (uint8_t) 0x0);    //Move cursor to the first line
 3dc:	60 e0       	ldi	r22, 0x00	; 0
 3de:	80 e0       	ldi	r24, 0x00	; 0
 3e0:	0e 94 d7 00 	call	0x1ae	; 0x1ae <lcd_gotoxy>
	lcd_puts( display_line1 );               //display line 1
 3e4:	ce 01       	movw	r24, r28
 3e6:	01 96       	adiw	r24, 0x01	; 1
 3e8:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <lcd_puts>
	lcd_gotoxy((uint8_t) 0x0, (uint8_t) 0x1);    //Move cursor to the second line
 3ec:	61 e0       	ldi	r22, 0x01	; 1
 3ee:	80 e0       	ldi	r24, 0x00	; 0
 3f0:	0e 94 d7 00 	call	0x1ae	; 0x1ae <lcd_gotoxy>
	lcd_puts( display_line2 );                //display line 2
 3f4:	ce 01       	movw	r24, r28
 3f6:	42 96       	adiw	r24, 0x12	; 18
 3f8:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <lcd_puts>
 3fc:	05 c0       	rjmp	.+10     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
	if ( (temperture_lm35 < MAX_TEMP) && (temperture_diode < MAX_TEMP) ){
	
		sprintf(display_line1, "LM35 :%4.0d - %dC", adc_reading_lm35, temperture_lm35);     //First line on the LCD
		sprintf(display_line2, "DIODE:%4.0d - %dC", adc_reading_diode, temperture_diode);   //Second line on the LCD
		
	} else if ( (temperture_lm35 > MAX_TEMP) && (temperture_diode < MAX_TEMP) ) {
 3fe:	0f 36       	cpi	r16, 0x6F	; 111
 400:	11 05       	cpc	r17, r1
 402:	08 f0       	brcs	.+2      	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 404:	85 cf       	rjmp	.-246    	; 0x310 <lcd_Write+0x8c>
 406:	cd cf       	rjmp	.-102    	; 0x3a2 <lcd_Write+0x11e>
	lcd_gotoxy((uint8_t) 0x0, (uint8_t) 0x0);    //Move cursor to the first line
	lcd_puts( display_line1 );               //display line 1
	lcd_gotoxy((uint8_t) 0x0, (uint8_t) 0x1);    //Move cursor to the second line
	lcd_puts( display_line2 );                //display line 2
	
 }
 408:	a2 96       	adiw	r28, 0x22	; 34
 40a:	0f b6       	in	r0, 0x3f	; 63
 40c:	f8 94       	cli
 40e:	de bf       	out	0x3e, r29	; 62
 410:	0f be       	out	0x3f, r0	; 63
 412:	cd bf       	out	0x3d, r28	; 61
 414:	df 91       	pop	r29
 416:	cf 91       	pop	r28
 418:	1f 91       	pop	r17
 41a:	0f 91       	pop	r16
 41c:	ff 90       	pop	r15
 41e:	ef 90       	pop	r14
 420:	df 90       	pop	r13
 422:	cf 90       	pop	r12
 424:	bf 90       	pop	r11
 426:	af 90       	pop	r10
 428:	08 95       	ret

0000042a <main>:
from 1 to 129. Thus, one does not need to use \c clock_div_t type as argument.
*/
void clock_prescale_set(clock_div_t __x)
{
    uint8_t __tmp = _BV(CLKPCE);
    __asm__ __volatile__ (
 42a:	90 e0       	ldi	r25, 0x00	; 0
 42c:	80 e8       	ldi	r24, 0x80	; 128
 42e:	0f b6       	in	r0, 0x3f	; 63
 430:	f8 94       	cli
 432:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
 436:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
 43a:	0f be       	out	0x3f, r0	; 63
 43c:	c0 e8       	ldi	r28, 0x80	; 128
 43e:	f1 2c       	mov	r15, r1
 440:	2f 2d       	mov	r18, r15
 442:	0f b6       	in	r0, 0x3f	; 63
 444:	f8 94       	cli
 446:	c0 93 61 00 	sts	0x0061, r28	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
 44a:	20 93 61 00 	sts	0x0061, r18	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
 44e:	0f be       	out	0x3f, r0	; 63

	while(1){

		clock_prescale_set(clock_div_1); //Set freq to 8MHZ

		adc_reading_lm35 = ADCRead(LM35_pin);  //Reads ADC, the input is the pin number of the ADC
 450:	8f 2d       	mov	r24, r15
 452:	0e 94 4b 00 	call	0x96	; 0x96 <ADCRead>
 456:	5c 01       	movw	r10, r24
		adc_reading_diode = ADCRead(Diode_pin);
 458:	81 e0       	ldi	r24, 0x01	; 1
 45a:	0e 94 4b 00 	call	0x96	; 0x96 <ADCRead>
 45e:	8c 01       	movw	r16, r24
		
		temperture_lm35 = temperture_model_lm35(adc_reading_lm35);
 460:	c5 01       	movw	r24, r10
 462:	0e 94 67 02 	call	0x4ce	; 0x4ce <temperture_model_lm35>
 466:	6c 01       	movw	r12, r24
		temperture_diode = temperture_model_diode(adc_reading_diode);
 468:	c8 01       	movw	r24, r16
 46a:	0e 94 46 02 	call	0x48c	; 0x48c <temperture_model_diode>
 46e:	23 e0       	ldi	r18, 0x03	; 3
 470:	0f b6       	in	r0, 0x3f	; 63
 472:	f8 94       	cli
 474:	c0 93 61 00 	sts	0x0061, r28	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
 478:	20 93 61 00 	sts	0x0061, r18	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
 47c:	0f be       	out	0x3f, r0	; 63
		
		clock_prescale_set(clock_div_8);  //For some reason the display doesnt like 8MHz, but works fine with 1MHZ
		lcd_Write(adc_reading_lm35, adc_reading_diode, temperture_lm35, temperture_diode);
 47e:	9c 01       	movw	r18, r24
 480:	a6 01       	movw	r20, r12
 482:	b8 01       	movw	r22, r16
 484:	c5 01       	movw	r24, r10
 486:	0e 94 42 01 	call	0x284	; 0x284 <lcd_Write>
	}
 48a:	da cf       	rjmp	.-76     	; 0x440 <main+0x16>

0000048c <temperture_model_diode>:
uint16_t temperture_model_diode( uint16_t adc_value ){     //Assuming the ADC output is less than 1024
	
	uint16_t temperture;
	
	temperture = 28755;
	temperture = temperture - ( 60.481 * adc_value );
 48c:	bc 01       	movw	r22, r24
 48e:	80 e0       	ldi	r24, 0x00	; 0
 490:	90 e0       	ldi	r25, 0x00	; 0
 492:	0e 94 1d 03 	call	0x63a	; 0x63a <__floatunsisf>
 496:	2b e8       	ldi	r18, 0x8B	; 139
 498:	3c ee       	ldi	r19, 0xEC	; 236
 49a:	41 e7       	ldi	r20, 0x71	; 113
 49c:	52 e4       	ldi	r21, 0x42	; 66
 49e:	0e 94 ab 03 	call	0x756	; 0x756 <__mulsf3>
 4a2:	9b 01       	movw	r18, r22
 4a4:	ac 01       	movw	r20, r24
 4a6:	60 e0       	ldi	r22, 0x00	; 0
 4a8:	76 ea       	ldi	r23, 0xA6	; 166
 4aa:	80 ee       	ldi	r24, 0xE0	; 224
 4ac:	96 e4       	ldi	r25, 0x46	; 70
 4ae:	0e 94 81 02 	call	0x502	; 0x502 <__subsf3>
 4b2:	0e 94 ee 02 	call	0x5dc	; 0x5dc <__fixunssfsi>
	
	temperture = temperture / 100;
 4b6:	9b 01       	movw	r18, r22
 4b8:	36 95       	lsr	r19
 4ba:	27 95       	ror	r18
 4bc:	36 95       	lsr	r19
 4be:	27 95       	ror	r18
 4c0:	ab e7       	ldi	r26, 0x7B	; 123
 4c2:	b4 e1       	ldi	r27, 0x14	; 20
 4c4:	0e 94 18 04 	call	0x830	; 0x830 <__umulhisi3>

	return temperture;
	
} 
 4c8:	96 95       	lsr	r25
 4ca:	87 95       	ror	r24
 4cc:	08 95       	ret

000004ce <temperture_model_lm35>:

uint16_t temperture_model_lm35( uint16_t adc_value ){
	
	uint16_t temperture;

	temperture = adc_value * 10.75;
 4ce:	bc 01       	movw	r22, r24
 4d0:	80 e0       	ldi	r24, 0x00	; 0
 4d2:	90 e0       	ldi	r25, 0x00	; 0
 4d4:	0e 94 1d 03 	call	0x63a	; 0x63a <__floatunsisf>
 4d8:	20 e0       	ldi	r18, 0x00	; 0
 4da:	30 e0       	ldi	r19, 0x00	; 0
 4dc:	4c e2       	ldi	r20, 0x2C	; 44
 4de:	51 e4       	ldi	r21, 0x41	; 65
 4e0:	0e 94 ab 03 	call	0x756	; 0x756 <__mulsf3>
 4e4:	0e 94 ee 02 	call	0x5dc	; 0x5dc <__fixunssfsi>

	return (temperture / 100 - 2);
 4e8:	9b 01       	movw	r18, r22
 4ea:	36 95       	lsr	r19
 4ec:	27 95       	ror	r18
 4ee:	36 95       	lsr	r19
 4f0:	27 95       	ror	r18
 4f2:	ab e7       	ldi	r26, 0x7B	; 123
 4f4:	b4 e1       	ldi	r27, 0x14	; 20
 4f6:	0e 94 18 04 	call	0x830	; 0x830 <__umulhisi3>
 4fa:	96 95       	lsr	r25
 4fc:	87 95       	ror	r24


 4fe:	02 97       	sbiw	r24, 0x02	; 2
 500:	08 95       	ret

00000502 <__subsf3>:
 502:	50 58       	subi	r21, 0x80	; 128

00000504 <__addsf3>:
 504:	bb 27       	eor	r27, r27
 506:	aa 27       	eor	r26, r26
 508:	0e 94 99 02 	call	0x532	; 0x532 <__addsf3x>
 50c:	0c 94 71 03 	jmp	0x6e2	; 0x6e2 <__fp_round>
 510:	0e 94 63 03 	call	0x6c6	; 0x6c6 <__fp_pscA>
 514:	38 f0       	brcs	.+14     	; 0x524 <__addsf3+0x20>
 516:	0e 94 6a 03 	call	0x6d4	; 0x6d4 <__fp_pscB>
 51a:	20 f0       	brcs	.+8      	; 0x524 <__addsf3+0x20>
 51c:	39 f4       	brne	.+14     	; 0x52c <__addsf3+0x28>
 51e:	9f 3f       	cpi	r25, 0xFF	; 255
 520:	19 f4       	brne	.+6      	; 0x528 <__addsf3+0x24>
 522:	26 f4       	brtc	.+8      	; 0x52c <__addsf3+0x28>
 524:	0c 94 60 03 	jmp	0x6c0	; 0x6c0 <__fp_nan>
 528:	0e f4       	brtc	.+2      	; 0x52c <__addsf3+0x28>
 52a:	e0 95       	com	r30
 52c:	e7 fb       	bst	r30, 7
 52e:	0c 94 5a 03 	jmp	0x6b4	; 0x6b4 <__fp_inf>

00000532 <__addsf3x>:
 532:	e9 2f       	mov	r30, r25
 534:	0e 94 82 03 	call	0x704	; 0x704 <__fp_split3>
 538:	58 f3       	brcs	.-42     	; 0x510 <__addsf3+0xc>
 53a:	ba 17       	cp	r27, r26
 53c:	62 07       	cpc	r22, r18
 53e:	73 07       	cpc	r23, r19
 540:	84 07       	cpc	r24, r20
 542:	95 07       	cpc	r25, r21
 544:	20 f0       	brcs	.+8      	; 0x54e <__addsf3x+0x1c>
 546:	79 f4       	brne	.+30     	; 0x566 <__addsf3x+0x34>
 548:	a6 f5       	brtc	.+104    	; 0x5b2 <__addsf3x+0x80>
 54a:	0c 94 a4 03 	jmp	0x748	; 0x748 <__fp_zero>
 54e:	0e f4       	brtc	.+2      	; 0x552 <__addsf3x+0x20>
 550:	e0 95       	com	r30
 552:	0b 2e       	mov	r0, r27
 554:	ba 2f       	mov	r27, r26
 556:	a0 2d       	mov	r26, r0
 558:	0b 01       	movw	r0, r22
 55a:	b9 01       	movw	r22, r18
 55c:	90 01       	movw	r18, r0
 55e:	0c 01       	movw	r0, r24
 560:	ca 01       	movw	r24, r20
 562:	a0 01       	movw	r20, r0
 564:	11 24       	eor	r1, r1
 566:	ff 27       	eor	r31, r31
 568:	59 1b       	sub	r21, r25
 56a:	99 f0       	breq	.+38     	; 0x592 <__addsf3x+0x60>
 56c:	59 3f       	cpi	r21, 0xF9	; 249
 56e:	50 f4       	brcc	.+20     	; 0x584 <__addsf3x+0x52>
 570:	50 3e       	cpi	r21, 0xE0	; 224
 572:	68 f1       	brcs	.+90     	; 0x5ce <__addsf3x+0x9c>
 574:	1a 16       	cp	r1, r26
 576:	f0 40       	sbci	r31, 0x00	; 0
 578:	a2 2f       	mov	r26, r18
 57a:	23 2f       	mov	r18, r19
 57c:	34 2f       	mov	r19, r20
 57e:	44 27       	eor	r20, r20
 580:	58 5f       	subi	r21, 0xF8	; 248
 582:	f3 cf       	rjmp	.-26     	; 0x56a <__addsf3x+0x38>
 584:	46 95       	lsr	r20
 586:	37 95       	ror	r19
 588:	27 95       	ror	r18
 58a:	a7 95       	ror	r26
 58c:	f0 40       	sbci	r31, 0x00	; 0
 58e:	53 95       	inc	r21
 590:	c9 f7       	brne	.-14     	; 0x584 <__addsf3x+0x52>
 592:	7e f4       	brtc	.+30     	; 0x5b2 <__addsf3x+0x80>
 594:	1f 16       	cp	r1, r31
 596:	ba 0b       	sbc	r27, r26
 598:	62 0b       	sbc	r22, r18
 59a:	73 0b       	sbc	r23, r19
 59c:	84 0b       	sbc	r24, r20
 59e:	ba f0       	brmi	.+46     	; 0x5ce <__addsf3x+0x9c>
 5a0:	91 50       	subi	r25, 0x01	; 1
 5a2:	a1 f0       	breq	.+40     	; 0x5cc <__addsf3x+0x9a>
 5a4:	ff 0f       	add	r31, r31
 5a6:	bb 1f       	adc	r27, r27
 5a8:	66 1f       	adc	r22, r22
 5aa:	77 1f       	adc	r23, r23
 5ac:	88 1f       	adc	r24, r24
 5ae:	c2 f7       	brpl	.-16     	; 0x5a0 <__addsf3x+0x6e>
 5b0:	0e c0       	rjmp	.+28     	; 0x5ce <__addsf3x+0x9c>
 5b2:	ba 0f       	add	r27, r26
 5b4:	62 1f       	adc	r22, r18
 5b6:	73 1f       	adc	r23, r19
 5b8:	84 1f       	adc	r24, r20
 5ba:	48 f4       	brcc	.+18     	; 0x5ce <__addsf3x+0x9c>
 5bc:	87 95       	ror	r24
 5be:	77 95       	ror	r23
 5c0:	67 95       	ror	r22
 5c2:	b7 95       	ror	r27
 5c4:	f7 95       	ror	r31
 5c6:	9e 3f       	cpi	r25, 0xFE	; 254
 5c8:	08 f0       	brcs	.+2      	; 0x5cc <__addsf3x+0x9a>
 5ca:	b0 cf       	rjmp	.-160    	; 0x52c <__addsf3+0x28>
 5cc:	93 95       	inc	r25
 5ce:	88 0f       	add	r24, r24
 5d0:	08 f0       	brcs	.+2      	; 0x5d4 <__addsf3x+0xa2>
 5d2:	99 27       	eor	r25, r25
 5d4:	ee 0f       	add	r30, r30
 5d6:	97 95       	ror	r25
 5d8:	87 95       	ror	r24
 5da:	08 95       	ret

000005dc <__fixunssfsi>:
 5dc:	0e 94 8a 03 	call	0x714	; 0x714 <__fp_splitA>
 5e0:	88 f0       	brcs	.+34     	; 0x604 <__fixunssfsi+0x28>
 5e2:	9f 57       	subi	r25, 0x7F	; 127
 5e4:	98 f0       	brcs	.+38     	; 0x60c <__fixunssfsi+0x30>
 5e6:	b9 2f       	mov	r27, r25
 5e8:	99 27       	eor	r25, r25
 5ea:	b7 51       	subi	r27, 0x17	; 23
 5ec:	b0 f0       	brcs	.+44     	; 0x61a <__fixunssfsi+0x3e>
 5ee:	e1 f0       	breq	.+56     	; 0x628 <__fixunssfsi+0x4c>
 5f0:	66 0f       	add	r22, r22
 5f2:	77 1f       	adc	r23, r23
 5f4:	88 1f       	adc	r24, r24
 5f6:	99 1f       	adc	r25, r25
 5f8:	1a f0       	brmi	.+6      	; 0x600 <__fixunssfsi+0x24>
 5fa:	ba 95       	dec	r27
 5fc:	c9 f7       	brne	.-14     	; 0x5f0 <__fixunssfsi+0x14>
 5fe:	14 c0       	rjmp	.+40     	; 0x628 <__fixunssfsi+0x4c>
 600:	b1 30       	cpi	r27, 0x01	; 1
 602:	91 f0       	breq	.+36     	; 0x628 <__fixunssfsi+0x4c>
 604:	0e 94 a4 03 	call	0x748	; 0x748 <__fp_zero>
 608:	b1 e0       	ldi	r27, 0x01	; 1
 60a:	08 95       	ret
 60c:	0c 94 a4 03 	jmp	0x748	; 0x748 <__fp_zero>
 610:	67 2f       	mov	r22, r23
 612:	78 2f       	mov	r23, r24
 614:	88 27       	eor	r24, r24
 616:	b8 5f       	subi	r27, 0xF8	; 248
 618:	39 f0       	breq	.+14     	; 0x628 <__fixunssfsi+0x4c>
 61a:	b9 3f       	cpi	r27, 0xF9	; 249
 61c:	cc f3       	brlt	.-14     	; 0x610 <__fixunssfsi+0x34>
 61e:	86 95       	lsr	r24
 620:	77 95       	ror	r23
 622:	67 95       	ror	r22
 624:	b3 95       	inc	r27
 626:	d9 f7       	brne	.-10     	; 0x61e <__fixunssfsi+0x42>
 628:	3e f4       	brtc	.+14     	; 0x638 <__fixunssfsi+0x5c>
 62a:	90 95       	com	r25
 62c:	80 95       	com	r24
 62e:	70 95       	com	r23
 630:	61 95       	neg	r22
 632:	7f 4f       	sbci	r23, 0xFF	; 255
 634:	8f 4f       	sbci	r24, 0xFF	; 255
 636:	9f 4f       	sbci	r25, 0xFF	; 255
 638:	08 95       	ret

0000063a <__floatunsisf>:
 63a:	e8 94       	clt
 63c:	09 c0       	rjmp	.+18     	; 0x650 <__floatsisf+0x12>

0000063e <__floatsisf>:
 63e:	97 fb       	bst	r25, 7
 640:	3e f4       	brtc	.+14     	; 0x650 <__floatsisf+0x12>
 642:	90 95       	com	r25
 644:	80 95       	com	r24
 646:	70 95       	com	r23
 648:	61 95       	neg	r22
 64a:	7f 4f       	sbci	r23, 0xFF	; 255
 64c:	8f 4f       	sbci	r24, 0xFF	; 255
 64e:	9f 4f       	sbci	r25, 0xFF	; 255
 650:	99 23       	and	r25, r25
 652:	a9 f0       	breq	.+42     	; 0x67e <__floatsisf+0x40>
 654:	f9 2f       	mov	r31, r25
 656:	96 e9       	ldi	r25, 0x96	; 150
 658:	bb 27       	eor	r27, r27
 65a:	93 95       	inc	r25
 65c:	f6 95       	lsr	r31
 65e:	87 95       	ror	r24
 660:	77 95       	ror	r23
 662:	67 95       	ror	r22
 664:	b7 95       	ror	r27
 666:	f1 11       	cpse	r31, r1
 668:	f8 cf       	rjmp	.-16     	; 0x65a <__floatsisf+0x1c>
 66a:	fa f4       	brpl	.+62     	; 0x6aa <__floatsisf+0x6c>
 66c:	bb 0f       	add	r27, r27
 66e:	11 f4       	brne	.+4      	; 0x674 <__floatsisf+0x36>
 670:	60 ff       	sbrs	r22, 0
 672:	1b c0       	rjmp	.+54     	; 0x6aa <__floatsisf+0x6c>
 674:	6f 5f       	subi	r22, 0xFF	; 255
 676:	7f 4f       	sbci	r23, 0xFF	; 255
 678:	8f 4f       	sbci	r24, 0xFF	; 255
 67a:	9f 4f       	sbci	r25, 0xFF	; 255
 67c:	16 c0       	rjmp	.+44     	; 0x6aa <__floatsisf+0x6c>
 67e:	88 23       	and	r24, r24
 680:	11 f0       	breq	.+4      	; 0x686 <__floatsisf+0x48>
 682:	96 e9       	ldi	r25, 0x96	; 150
 684:	11 c0       	rjmp	.+34     	; 0x6a8 <__floatsisf+0x6a>
 686:	77 23       	and	r23, r23
 688:	21 f0       	breq	.+8      	; 0x692 <__floatsisf+0x54>
 68a:	9e e8       	ldi	r25, 0x8E	; 142
 68c:	87 2f       	mov	r24, r23
 68e:	76 2f       	mov	r23, r22
 690:	05 c0       	rjmp	.+10     	; 0x69c <__floatsisf+0x5e>
 692:	66 23       	and	r22, r22
 694:	71 f0       	breq	.+28     	; 0x6b2 <__floatsisf+0x74>
 696:	96 e8       	ldi	r25, 0x86	; 134
 698:	86 2f       	mov	r24, r22
 69a:	70 e0       	ldi	r23, 0x00	; 0
 69c:	60 e0       	ldi	r22, 0x00	; 0
 69e:	2a f0       	brmi	.+10     	; 0x6aa <__floatsisf+0x6c>
 6a0:	9a 95       	dec	r25
 6a2:	66 0f       	add	r22, r22
 6a4:	77 1f       	adc	r23, r23
 6a6:	88 1f       	adc	r24, r24
 6a8:	da f7       	brpl	.-10     	; 0x6a0 <__floatsisf+0x62>
 6aa:	88 0f       	add	r24, r24
 6ac:	96 95       	lsr	r25
 6ae:	87 95       	ror	r24
 6b0:	97 f9       	bld	r25, 7
 6b2:	08 95       	ret

000006b4 <__fp_inf>:
 6b4:	97 f9       	bld	r25, 7
 6b6:	9f 67       	ori	r25, 0x7F	; 127
 6b8:	80 e8       	ldi	r24, 0x80	; 128
 6ba:	70 e0       	ldi	r23, 0x00	; 0
 6bc:	60 e0       	ldi	r22, 0x00	; 0
 6be:	08 95       	ret

000006c0 <__fp_nan>:
 6c0:	9f ef       	ldi	r25, 0xFF	; 255
 6c2:	80 ec       	ldi	r24, 0xC0	; 192
 6c4:	08 95       	ret

000006c6 <__fp_pscA>:
 6c6:	00 24       	eor	r0, r0
 6c8:	0a 94       	dec	r0
 6ca:	16 16       	cp	r1, r22
 6cc:	17 06       	cpc	r1, r23
 6ce:	18 06       	cpc	r1, r24
 6d0:	09 06       	cpc	r0, r25
 6d2:	08 95       	ret

000006d4 <__fp_pscB>:
 6d4:	00 24       	eor	r0, r0
 6d6:	0a 94       	dec	r0
 6d8:	12 16       	cp	r1, r18
 6da:	13 06       	cpc	r1, r19
 6dc:	14 06       	cpc	r1, r20
 6de:	05 06       	cpc	r0, r21
 6e0:	08 95       	ret

000006e2 <__fp_round>:
 6e2:	09 2e       	mov	r0, r25
 6e4:	03 94       	inc	r0
 6e6:	00 0c       	add	r0, r0
 6e8:	11 f4       	brne	.+4      	; 0x6ee <__fp_round+0xc>
 6ea:	88 23       	and	r24, r24
 6ec:	52 f0       	brmi	.+20     	; 0x702 <__fp_round+0x20>
 6ee:	bb 0f       	add	r27, r27
 6f0:	40 f4       	brcc	.+16     	; 0x702 <__fp_round+0x20>
 6f2:	bf 2b       	or	r27, r31
 6f4:	11 f4       	brne	.+4      	; 0x6fa <__fp_round+0x18>
 6f6:	60 ff       	sbrs	r22, 0
 6f8:	04 c0       	rjmp	.+8      	; 0x702 <__fp_round+0x20>
 6fa:	6f 5f       	subi	r22, 0xFF	; 255
 6fc:	7f 4f       	sbci	r23, 0xFF	; 255
 6fe:	8f 4f       	sbci	r24, 0xFF	; 255
 700:	9f 4f       	sbci	r25, 0xFF	; 255
 702:	08 95       	ret

00000704 <__fp_split3>:
 704:	57 fd       	sbrc	r21, 7
 706:	90 58       	subi	r25, 0x80	; 128
 708:	44 0f       	add	r20, r20
 70a:	55 1f       	adc	r21, r21
 70c:	59 f0       	breq	.+22     	; 0x724 <__fp_splitA+0x10>
 70e:	5f 3f       	cpi	r21, 0xFF	; 255
 710:	71 f0       	breq	.+28     	; 0x72e <__fp_splitA+0x1a>
 712:	47 95       	ror	r20

00000714 <__fp_splitA>:
 714:	88 0f       	add	r24, r24
 716:	97 fb       	bst	r25, 7
 718:	99 1f       	adc	r25, r25
 71a:	61 f0       	breq	.+24     	; 0x734 <__fp_splitA+0x20>
 71c:	9f 3f       	cpi	r25, 0xFF	; 255
 71e:	79 f0       	breq	.+30     	; 0x73e <__fp_splitA+0x2a>
 720:	87 95       	ror	r24
 722:	08 95       	ret
 724:	12 16       	cp	r1, r18
 726:	13 06       	cpc	r1, r19
 728:	14 06       	cpc	r1, r20
 72a:	55 1f       	adc	r21, r21
 72c:	f2 cf       	rjmp	.-28     	; 0x712 <__fp_split3+0xe>
 72e:	46 95       	lsr	r20
 730:	f1 df       	rcall	.-30     	; 0x714 <__fp_splitA>
 732:	08 c0       	rjmp	.+16     	; 0x744 <__fp_splitA+0x30>
 734:	16 16       	cp	r1, r22
 736:	17 06       	cpc	r1, r23
 738:	18 06       	cpc	r1, r24
 73a:	99 1f       	adc	r25, r25
 73c:	f1 cf       	rjmp	.-30     	; 0x720 <__fp_splitA+0xc>
 73e:	86 95       	lsr	r24
 740:	71 05       	cpc	r23, r1
 742:	61 05       	cpc	r22, r1
 744:	08 94       	sec
 746:	08 95       	ret

00000748 <__fp_zero>:
 748:	e8 94       	clt

0000074a <__fp_szero>:
 74a:	bb 27       	eor	r27, r27
 74c:	66 27       	eor	r22, r22
 74e:	77 27       	eor	r23, r23
 750:	cb 01       	movw	r24, r22
 752:	97 f9       	bld	r25, 7
 754:	08 95       	ret

00000756 <__mulsf3>:
 756:	0e 94 be 03 	call	0x77c	; 0x77c <__mulsf3x>
 75a:	0c 94 71 03 	jmp	0x6e2	; 0x6e2 <__fp_round>
 75e:	0e 94 63 03 	call	0x6c6	; 0x6c6 <__fp_pscA>
 762:	38 f0       	brcs	.+14     	; 0x772 <__mulsf3+0x1c>
 764:	0e 94 6a 03 	call	0x6d4	; 0x6d4 <__fp_pscB>
 768:	20 f0       	brcs	.+8      	; 0x772 <__mulsf3+0x1c>
 76a:	95 23       	and	r25, r21
 76c:	11 f0       	breq	.+4      	; 0x772 <__mulsf3+0x1c>
 76e:	0c 94 5a 03 	jmp	0x6b4	; 0x6b4 <__fp_inf>
 772:	0c 94 60 03 	jmp	0x6c0	; 0x6c0 <__fp_nan>
 776:	11 24       	eor	r1, r1
 778:	0c 94 a5 03 	jmp	0x74a	; 0x74a <__fp_szero>

0000077c <__mulsf3x>:
 77c:	0e 94 82 03 	call	0x704	; 0x704 <__fp_split3>
 780:	70 f3       	brcs	.-36     	; 0x75e <__mulsf3+0x8>

00000782 <__mulsf3_pse>:
 782:	95 9f       	mul	r25, r21
 784:	c1 f3       	breq	.-16     	; 0x776 <__mulsf3+0x20>
 786:	95 0f       	add	r25, r21
 788:	50 e0       	ldi	r21, 0x00	; 0
 78a:	55 1f       	adc	r21, r21
 78c:	62 9f       	mul	r22, r18
 78e:	f0 01       	movw	r30, r0
 790:	72 9f       	mul	r23, r18
 792:	bb 27       	eor	r27, r27
 794:	f0 0d       	add	r31, r0
 796:	b1 1d       	adc	r27, r1
 798:	63 9f       	mul	r22, r19
 79a:	aa 27       	eor	r26, r26
 79c:	f0 0d       	add	r31, r0
 79e:	b1 1d       	adc	r27, r1
 7a0:	aa 1f       	adc	r26, r26
 7a2:	64 9f       	mul	r22, r20
 7a4:	66 27       	eor	r22, r22
 7a6:	b0 0d       	add	r27, r0
 7a8:	a1 1d       	adc	r26, r1
 7aa:	66 1f       	adc	r22, r22
 7ac:	82 9f       	mul	r24, r18
 7ae:	22 27       	eor	r18, r18
 7b0:	b0 0d       	add	r27, r0
 7b2:	a1 1d       	adc	r26, r1
 7b4:	62 1f       	adc	r22, r18
 7b6:	73 9f       	mul	r23, r19
 7b8:	b0 0d       	add	r27, r0
 7ba:	a1 1d       	adc	r26, r1
 7bc:	62 1f       	adc	r22, r18
 7be:	83 9f       	mul	r24, r19
 7c0:	a0 0d       	add	r26, r0
 7c2:	61 1d       	adc	r22, r1
 7c4:	22 1f       	adc	r18, r18
 7c6:	74 9f       	mul	r23, r20
 7c8:	33 27       	eor	r19, r19
 7ca:	a0 0d       	add	r26, r0
 7cc:	61 1d       	adc	r22, r1
 7ce:	23 1f       	adc	r18, r19
 7d0:	84 9f       	mul	r24, r20
 7d2:	60 0d       	add	r22, r0
 7d4:	21 1d       	adc	r18, r1
 7d6:	82 2f       	mov	r24, r18
 7d8:	76 2f       	mov	r23, r22
 7da:	6a 2f       	mov	r22, r26
 7dc:	11 24       	eor	r1, r1
 7de:	9f 57       	subi	r25, 0x7F	; 127
 7e0:	50 40       	sbci	r21, 0x00	; 0
 7e2:	9a f0       	brmi	.+38     	; 0x80a <__mulsf3_pse+0x88>
 7e4:	f1 f0       	breq	.+60     	; 0x822 <__mulsf3_pse+0xa0>
 7e6:	88 23       	and	r24, r24
 7e8:	4a f0       	brmi	.+18     	; 0x7fc <__mulsf3_pse+0x7a>
 7ea:	ee 0f       	add	r30, r30
 7ec:	ff 1f       	adc	r31, r31
 7ee:	bb 1f       	adc	r27, r27
 7f0:	66 1f       	adc	r22, r22
 7f2:	77 1f       	adc	r23, r23
 7f4:	88 1f       	adc	r24, r24
 7f6:	91 50       	subi	r25, 0x01	; 1
 7f8:	50 40       	sbci	r21, 0x00	; 0
 7fa:	a9 f7       	brne	.-22     	; 0x7e6 <__mulsf3_pse+0x64>
 7fc:	9e 3f       	cpi	r25, 0xFE	; 254
 7fe:	51 05       	cpc	r21, r1
 800:	80 f0       	brcs	.+32     	; 0x822 <__mulsf3_pse+0xa0>
 802:	0c 94 5a 03 	jmp	0x6b4	; 0x6b4 <__fp_inf>
 806:	0c 94 a5 03 	jmp	0x74a	; 0x74a <__fp_szero>
 80a:	5f 3f       	cpi	r21, 0xFF	; 255
 80c:	e4 f3       	brlt	.-8      	; 0x806 <__mulsf3_pse+0x84>
 80e:	98 3e       	cpi	r25, 0xE8	; 232
 810:	d4 f3       	brlt	.-12     	; 0x806 <__mulsf3_pse+0x84>
 812:	86 95       	lsr	r24
 814:	77 95       	ror	r23
 816:	67 95       	ror	r22
 818:	b7 95       	ror	r27
 81a:	f7 95       	ror	r31
 81c:	e7 95       	ror	r30
 81e:	9f 5f       	subi	r25, 0xFF	; 255
 820:	c1 f7       	brne	.-16     	; 0x812 <__mulsf3_pse+0x90>
 822:	fe 2b       	or	r31, r30
 824:	88 0f       	add	r24, r24
 826:	91 1d       	adc	r25, r1
 828:	96 95       	lsr	r25
 82a:	87 95       	ror	r24
 82c:	97 f9       	bld	r25, 7
 82e:	08 95       	ret

00000830 <__umulhisi3>:
 830:	a2 9f       	mul	r26, r18
 832:	b0 01       	movw	r22, r0
 834:	b3 9f       	mul	r27, r19
 836:	c0 01       	movw	r24, r0
 838:	a3 9f       	mul	r26, r19
 83a:	70 0d       	add	r23, r0
 83c:	81 1d       	adc	r24, r1
 83e:	11 24       	eor	r1, r1
 840:	91 1d       	adc	r25, r1
 842:	b2 9f       	mul	r27, r18
 844:	70 0d       	add	r23, r0
 846:	81 1d       	adc	r24, r1
 848:	11 24       	eor	r1, r1
 84a:	91 1d       	adc	r25, r1
 84c:	08 95       	ret

0000084e <sprintf>:
 84e:	ae e0       	ldi	r26, 0x0E	; 14
 850:	b0 e0       	ldi	r27, 0x00	; 0
 852:	ed e2       	ldi	r30, 0x2D	; 45
 854:	f4 e0       	ldi	r31, 0x04	; 4
 856:	0c 94 d6 06 	jmp	0xdac	; 0xdac <__prologue_saves__+0x1c>
 85a:	0d 89       	ldd	r16, Y+21	; 0x15
 85c:	1e 89       	ldd	r17, Y+22	; 0x16
 85e:	86 e0       	ldi	r24, 0x06	; 6
 860:	8c 83       	std	Y+4, r24	; 0x04
 862:	1a 83       	std	Y+2, r17	; 0x02
 864:	09 83       	std	Y+1, r16	; 0x01
 866:	8f ef       	ldi	r24, 0xFF	; 255
 868:	9f e7       	ldi	r25, 0x7F	; 127
 86a:	9e 83       	std	Y+6, r25	; 0x06
 86c:	8d 83       	std	Y+5, r24	; 0x05
 86e:	ae 01       	movw	r20, r28
 870:	47 5e       	subi	r20, 0xE7	; 231
 872:	5f 4f       	sbci	r21, 0xFF	; 255
 874:	6f 89       	ldd	r22, Y+23	; 0x17
 876:	78 8d       	ldd	r23, Y+24	; 0x18
 878:	ce 01       	movw	r24, r28
 87a:	01 96       	adiw	r24, 0x01	; 1
 87c:	0e 94 4a 04 	call	0x894	; 0x894 <vfprintf>
 880:	2f 81       	ldd	r18, Y+7	; 0x07
 882:	38 85       	ldd	r19, Y+8	; 0x08
 884:	f8 01       	movw	r30, r16
 886:	e2 0f       	add	r30, r18
 888:	f3 1f       	adc	r31, r19
 88a:	10 82       	st	Z, r1
 88c:	2e 96       	adiw	r28, 0x0e	; 14
 88e:	e4 e0       	ldi	r30, 0x04	; 4
 890:	0c 94 f2 06 	jmp	0xde4	; 0xde4 <__epilogue_restores__+0x1c>

00000894 <vfprintf>:
 894:	ac e0       	ldi	r26, 0x0C	; 12
 896:	b0 e0       	ldi	r27, 0x00	; 0
 898:	e0 e5       	ldi	r30, 0x50	; 80
 89a:	f4 e0       	ldi	r31, 0x04	; 4
 89c:	0c 94 c8 06 	jmp	0xd90	; 0xd90 <__prologue_saves__>
 8a0:	7c 01       	movw	r14, r24
 8a2:	6b 01       	movw	r12, r22
 8a4:	8a 01       	movw	r16, r20
 8a6:	fc 01       	movw	r30, r24
 8a8:	17 82       	std	Z+7, r1	; 0x07
 8aa:	16 82       	std	Z+6, r1	; 0x06
 8ac:	83 81       	ldd	r24, Z+3	; 0x03
 8ae:	81 ff       	sbrs	r24, 1
 8b0:	bd c1       	rjmp	.+890    	; 0xc2c <__stack+0x32d>
 8b2:	ce 01       	movw	r24, r28
 8b4:	01 96       	adiw	r24, 0x01	; 1
 8b6:	4c 01       	movw	r8, r24
 8b8:	f7 01       	movw	r30, r14
 8ba:	93 81       	ldd	r25, Z+3	; 0x03
 8bc:	f6 01       	movw	r30, r12
 8be:	93 fd       	sbrc	r25, 3
 8c0:	85 91       	lpm	r24, Z+
 8c2:	93 ff       	sbrs	r25, 3
 8c4:	81 91       	ld	r24, Z+
 8c6:	6f 01       	movw	r12, r30
 8c8:	88 23       	and	r24, r24
 8ca:	09 f4       	brne	.+2      	; 0x8ce <vfprintf+0x3a>
 8cc:	ab c1       	rjmp	.+854    	; 0xc24 <__stack+0x325>
 8ce:	85 32       	cpi	r24, 0x25	; 37
 8d0:	39 f4       	brne	.+14     	; 0x8e0 <vfprintf+0x4c>
 8d2:	93 fd       	sbrc	r25, 3
 8d4:	85 91       	lpm	r24, Z+
 8d6:	93 ff       	sbrs	r25, 3
 8d8:	81 91       	ld	r24, Z+
 8da:	6f 01       	movw	r12, r30
 8dc:	85 32       	cpi	r24, 0x25	; 37
 8de:	29 f4       	brne	.+10     	; 0x8ea <vfprintf+0x56>
 8e0:	b7 01       	movw	r22, r14
 8e2:	90 e0       	ldi	r25, 0x00	; 0
 8e4:	0e 94 32 06 	call	0xc64	; 0xc64 <fputc>
 8e8:	e7 cf       	rjmp	.-50     	; 0x8b8 <vfprintf+0x24>
 8ea:	51 2c       	mov	r5, r1
 8ec:	31 2c       	mov	r3, r1
 8ee:	20 e0       	ldi	r18, 0x00	; 0
 8f0:	20 32       	cpi	r18, 0x20	; 32
 8f2:	a0 f4       	brcc	.+40     	; 0x91c <__stack+0x1d>
 8f4:	8b 32       	cpi	r24, 0x2B	; 43
 8f6:	69 f0       	breq	.+26     	; 0x912 <__stack+0x13>
 8f8:	30 f4       	brcc	.+12     	; 0x906 <__stack+0x7>
 8fa:	80 32       	cpi	r24, 0x20	; 32
 8fc:	59 f0       	breq	.+22     	; 0x914 <__stack+0x15>
 8fe:	83 32       	cpi	r24, 0x23	; 35
 900:	69 f4       	brne	.+26     	; 0x91c <__stack+0x1d>
 902:	20 61       	ori	r18, 0x10	; 16
 904:	2c c0       	rjmp	.+88     	; 0x95e <__stack+0x5f>
 906:	8d 32       	cpi	r24, 0x2D	; 45
 908:	39 f0       	breq	.+14     	; 0x918 <__stack+0x19>
 90a:	80 33       	cpi	r24, 0x30	; 48
 90c:	39 f4       	brne	.+14     	; 0x91c <__stack+0x1d>
 90e:	21 60       	ori	r18, 0x01	; 1
 910:	26 c0       	rjmp	.+76     	; 0x95e <__stack+0x5f>
 912:	22 60       	ori	r18, 0x02	; 2
 914:	24 60       	ori	r18, 0x04	; 4
 916:	23 c0       	rjmp	.+70     	; 0x95e <__stack+0x5f>
 918:	28 60       	ori	r18, 0x08	; 8
 91a:	21 c0       	rjmp	.+66     	; 0x95e <__stack+0x5f>
 91c:	27 fd       	sbrc	r18, 7
 91e:	27 c0       	rjmp	.+78     	; 0x96e <__stack+0x6f>
 920:	30 ed       	ldi	r19, 0xD0	; 208
 922:	38 0f       	add	r19, r24
 924:	3a 30       	cpi	r19, 0x0A	; 10
 926:	78 f4       	brcc	.+30     	; 0x946 <__stack+0x47>
 928:	26 ff       	sbrs	r18, 6
 92a:	06 c0       	rjmp	.+12     	; 0x938 <__stack+0x39>
 92c:	fa e0       	ldi	r31, 0x0A	; 10
 92e:	5f 9e       	mul	r5, r31
 930:	30 0d       	add	r19, r0
 932:	11 24       	eor	r1, r1
 934:	53 2e       	mov	r5, r19
 936:	13 c0       	rjmp	.+38     	; 0x95e <__stack+0x5f>
 938:	8a e0       	ldi	r24, 0x0A	; 10
 93a:	38 9e       	mul	r3, r24
 93c:	30 0d       	add	r19, r0
 93e:	11 24       	eor	r1, r1
 940:	33 2e       	mov	r3, r19
 942:	20 62       	ori	r18, 0x20	; 32
 944:	0c c0       	rjmp	.+24     	; 0x95e <__stack+0x5f>
 946:	8e 32       	cpi	r24, 0x2E	; 46
 948:	21 f4       	brne	.+8      	; 0x952 <__stack+0x53>
 94a:	26 fd       	sbrc	r18, 6
 94c:	6b c1       	rjmp	.+726    	; 0xc24 <__stack+0x325>
 94e:	20 64       	ori	r18, 0x40	; 64
 950:	06 c0       	rjmp	.+12     	; 0x95e <__stack+0x5f>
 952:	8c 36       	cpi	r24, 0x6C	; 108
 954:	11 f4       	brne	.+4      	; 0x95a <__stack+0x5b>
 956:	20 68       	ori	r18, 0x80	; 128
 958:	02 c0       	rjmp	.+4      	; 0x95e <__stack+0x5f>
 95a:	88 36       	cpi	r24, 0x68	; 104
 95c:	41 f4       	brne	.+16     	; 0x96e <__stack+0x6f>
 95e:	f6 01       	movw	r30, r12
 960:	93 fd       	sbrc	r25, 3
 962:	85 91       	lpm	r24, Z+
 964:	93 ff       	sbrs	r25, 3
 966:	81 91       	ld	r24, Z+
 968:	6f 01       	movw	r12, r30
 96a:	81 11       	cpse	r24, r1
 96c:	c1 cf       	rjmp	.-126    	; 0x8f0 <vfprintf+0x5c>
 96e:	98 2f       	mov	r25, r24
 970:	9f 7d       	andi	r25, 0xDF	; 223
 972:	95 54       	subi	r25, 0x45	; 69
 974:	93 30       	cpi	r25, 0x03	; 3
 976:	28 f4       	brcc	.+10     	; 0x982 <__stack+0x83>
 978:	0c 5f       	subi	r16, 0xFC	; 252
 97a:	1f 4f       	sbci	r17, 0xFF	; 255
 97c:	ff e3       	ldi	r31, 0x3F	; 63
 97e:	f9 83       	std	Y+1, r31	; 0x01
 980:	0d c0       	rjmp	.+26     	; 0x99c <__stack+0x9d>
 982:	83 36       	cpi	r24, 0x63	; 99
 984:	31 f0       	breq	.+12     	; 0x992 <__stack+0x93>
 986:	83 37       	cpi	r24, 0x73	; 115
 988:	71 f0       	breq	.+28     	; 0x9a6 <__stack+0xa7>
 98a:	83 35       	cpi	r24, 0x53	; 83
 98c:	09 f0       	breq	.+2      	; 0x990 <__stack+0x91>
 98e:	5b c0       	rjmp	.+182    	; 0xa46 <__stack+0x147>
 990:	22 c0       	rjmp	.+68     	; 0x9d6 <__stack+0xd7>
 992:	f8 01       	movw	r30, r16
 994:	80 81       	ld	r24, Z
 996:	89 83       	std	Y+1, r24	; 0x01
 998:	0e 5f       	subi	r16, 0xFE	; 254
 99a:	1f 4f       	sbci	r17, 0xFF	; 255
 99c:	44 24       	eor	r4, r4
 99e:	43 94       	inc	r4
 9a0:	51 2c       	mov	r5, r1
 9a2:	54 01       	movw	r10, r8
 9a4:	15 c0       	rjmp	.+42     	; 0x9d0 <__stack+0xd1>
 9a6:	38 01       	movw	r6, r16
 9a8:	f2 e0       	ldi	r31, 0x02	; 2
 9aa:	6f 0e       	add	r6, r31
 9ac:	71 1c       	adc	r7, r1
 9ae:	f8 01       	movw	r30, r16
 9b0:	a0 80       	ld	r10, Z
 9b2:	b1 80       	ldd	r11, Z+1	; 0x01
 9b4:	26 ff       	sbrs	r18, 6
 9b6:	03 c0       	rjmp	.+6      	; 0x9be <__stack+0xbf>
 9b8:	65 2d       	mov	r22, r5
 9ba:	70 e0       	ldi	r23, 0x00	; 0
 9bc:	02 c0       	rjmp	.+4      	; 0x9c2 <__stack+0xc3>
 9be:	6f ef       	ldi	r22, 0xFF	; 255
 9c0:	7f ef       	ldi	r23, 0xFF	; 255
 9c2:	c5 01       	movw	r24, r10
 9c4:	2c 87       	std	Y+12, r18	; 0x0c
 9c6:	0e 94 27 06 	call	0xc4e	; 0xc4e <strnlen>
 9ca:	2c 01       	movw	r4, r24
 9cc:	83 01       	movw	r16, r6
 9ce:	2c 85       	ldd	r18, Y+12	; 0x0c
 9d0:	2f 77       	andi	r18, 0x7F	; 127
 9d2:	22 2e       	mov	r2, r18
 9d4:	17 c0       	rjmp	.+46     	; 0xa04 <__stack+0x105>
 9d6:	38 01       	movw	r6, r16
 9d8:	f2 e0       	ldi	r31, 0x02	; 2
 9da:	6f 0e       	add	r6, r31
 9dc:	71 1c       	adc	r7, r1
 9de:	f8 01       	movw	r30, r16
 9e0:	a0 80       	ld	r10, Z
 9e2:	b1 80       	ldd	r11, Z+1	; 0x01
 9e4:	26 ff       	sbrs	r18, 6
 9e6:	03 c0       	rjmp	.+6      	; 0x9ee <__stack+0xef>
 9e8:	65 2d       	mov	r22, r5
 9ea:	70 e0       	ldi	r23, 0x00	; 0
 9ec:	02 c0       	rjmp	.+4      	; 0x9f2 <__stack+0xf3>
 9ee:	6f ef       	ldi	r22, 0xFF	; 255
 9f0:	7f ef       	ldi	r23, 0xFF	; 255
 9f2:	c5 01       	movw	r24, r10
 9f4:	2c 87       	std	Y+12, r18	; 0x0c
 9f6:	0e 94 1c 06 	call	0xc38	; 0xc38 <strnlen_P>
 9fa:	2c 01       	movw	r4, r24
 9fc:	2c 85       	ldd	r18, Y+12	; 0x0c
 9fe:	20 68       	ori	r18, 0x80	; 128
 a00:	22 2e       	mov	r2, r18
 a02:	83 01       	movw	r16, r6
 a04:	23 fc       	sbrc	r2, 3
 a06:	1b c0       	rjmp	.+54     	; 0xa3e <__stack+0x13f>
 a08:	83 2d       	mov	r24, r3
 a0a:	90 e0       	ldi	r25, 0x00	; 0
 a0c:	48 16       	cp	r4, r24
 a0e:	59 06       	cpc	r5, r25
 a10:	b0 f4       	brcc	.+44     	; 0xa3e <__stack+0x13f>
 a12:	b7 01       	movw	r22, r14
 a14:	80 e2       	ldi	r24, 0x20	; 32
 a16:	90 e0       	ldi	r25, 0x00	; 0
 a18:	0e 94 32 06 	call	0xc64	; 0xc64 <fputc>
 a1c:	3a 94       	dec	r3
 a1e:	f4 cf       	rjmp	.-24     	; 0xa08 <__stack+0x109>
 a20:	f5 01       	movw	r30, r10
 a22:	27 fc       	sbrc	r2, 7
 a24:	85 91       	lpm	r24, Z+
 a26:	27 fe       	sbrs	r2, 7
 a28:	81 91       	ld	r24, Z+
 a2a:	5f 01       	movw	r10, r30
 a2c:	b7 01       	movw	r22, r14
 a2e:	90 e0       	ldi	r25, 0x00	; 0
 a30:	0e 94 32 06 	call	0xc64	; 0xc64 <fputc>
 a34:	31 10       	cpse	r3, r1
 a36:	3a 94       	dec	r3
 a38:	f1 e0       	ldi	r31, 0x01	; 1
 a3a:	4f 1a       	sub	r4, r31
 a3c:	51 08       	sbc	r5, r1
 a3e:	41 14       	cp	r4, r1
 a40:	51 04       	cpc	r5, r1
 a42:	71 f7       	brne	.-36     	; 0xa20 <__stack+0x121>
 a44:	e5 c0       	rjmp	.+458    	; 0xc10 <__stack+0x311>
 a46:	84 36       	cpi	r24, 0x64	; 100
 a48:	11 f0       	breq	.+4      	; 0xa4e <__stack+0x14f>
 a4a:	89 36       	cpi	r24, 0x69	; 105
 a4c:	39 f5       	brne	.+78     	; 0xa9c <__stack+0x19d>
 a4e:	f8 01       	movw	r30, r16
 a50:	27 ff       	sbrs	r18, 7
 a52:	07 c0       	rjmp	.+14     	; 0xa62 <__stack+0x163>
 a54:	60 81       	ld	r22, Z
 a56:	71 81       	ldd	r23, Z+1	; 0x01
 a58:	82 81       	ldd	r24, Z+2	; 0x02
 a5a:	93 81       	ldd	r25, Z+3	; 0x03
 a5c:	0c 5f       	subi	r16, 0xFC	; 252
 a5e:	1f 4f       	sbci	r17, 0xFF	; 255
 a60:	08 c0       	rjmp	.+16     	; 0xa72 <__stack+0x173>
 a62:	60 81       	ld	r22, Z
 a64:	71 81       	ldd	r23, Z+1	; 0x01
 a66:	07 2e       	mov	r0, r23
 a68:	00 0c       	add	r0, r0
 a6a:	88 0b       	sbc	r24, r24
 a6c:	99 0b       	sbc	r25, r25
 a6e:	0e 5f       	subi	r16, 0xFE	; 254
 a70:	1f 4f       	sbci	r17, 0xFF	; 255
 a72:	2f 76       	andi	r18, 0x6F	; 111
 a74:	72 2e       	mov	r7, r18
 a76:	97 ff       	sbrs	r25, 7
 a78:	09 c0       	rjmp	.+18     	; 0xa8c <__stack+0x18d>
 a7a:	90 95       	com	r25
 a7c:	80 95       	com	r24
 a7e:	70 95       	com	r23
 a80:	61 95       	neg	r22
 a82:	7f 4f       	sbci	r23, 0xFF	; 255
 a84:	8f 4f       	sbci	r24, 0xFF	; 255
 a86:	9f 4f       	sbci	r25, 0xFF	; 255
 a88:	20 68       	ori	r18, 0x80	; 128
 a8a:	72 2e       	mov	r7, r18
 a8c:	2a e0       	ldi	r18, 0x0A	; 10
 a8e:	30 e0       	ldi	r19, 0x00	; 0
 a90:	a4 01       	movw	r20, r8
 a92:	0e 94 6a 06 	call	0xcd4	; 0xcd4 <__ultoa_invert>
 a96:	a8 2e       	mov	r10, r24
 a98:	a8 18       	sub	r10, r8
 a9a:	44 c0       	rjmp	.+136    	; 0xb24 <__stack+0x225>
 a9c:	85 37       	cpi	r24, 0x75	; 117
 a9e:	29 f4       	brne	.+10     	; 0xaaa <__stack+0x1ab>
 aa0:	2f 7e       	andi	r18, 0xEF	; 239
 aa2:	b2 2e       	mov	r11, r18
 aa4:	2a e0       	ldi	r18, 0x0A	; 10
 aa6:	30 e0       	ldi	r19, 0x00	; 0
 aa8:	25 c0       	rjmp	.+74     	; 0xaf4 <__stack+0x1f5>
 aaa:	f2 2f       	mov	r31, r18
 aac:	f9 7f       	andi	r31, 0xF9	; 249
 aae:	bf 2e       	mov	r11, r31
 ab0:	8f 36       	cpi	r24, 0x6F	; 111
 ab2:	c1 f0       	breq	.+48     	; 0xae4 <__stack+0x1e5>
 ab4:	18 f4       	brcc	.+6      	; 0xabc <__stack+0x1bd>
 ab6:	88 35       	cpi	r24, 0x58	; 88
 ab8:	79 f0       	breq	.+30     	; 0xad8 <__stack+0x1d9>
 aba:	b4 c0       	rjmp	.+360    	; 0xc24 <__stack+0x325>
 abc:	80 37       	cpi	r24, 0x70	; 112
 abe:	19 f0       	breq	.+6      	; 0xac6 <__stack+0x1c7>
 ac0:	88 37       	cpi	r24, 0x78	; 120
 ac2:	21 f0       	breq	.+8      	; 0xacc <__stack+0x1cd>
 ac4:	af c0       	rjmp	.+350    	; 0xc24 <__stack+0x325>
 ac6:	2f 2f       	mov	r18, r31
 ac8:	20 61       	ori	r18, 0x10	; 16
 aca:	b2 2e       	mov	r11, r18
 acc:	b4 fe       	sbrs	r11, 4
 ace:	0d c0       	rjmp	.+26     	; 0xaea <__stack+0x1eb>
 ad0:	8b 2d       	mov	r24, r11
 ad2:	84 60       	ori	r24, 0x04	; 4
 ad4:	b8 2e       	mov	r11, r24
 ad6:	09 c0       	rjmp	.+18     	; 0xaea <__stack+0x1eb>
 ad8:	24 ff       	sbrs	r18, 4
 ada:	0a c0       	rjmp	.+20     	; 0xaf0 <__stack+0x1f1>
 adc:	9f 2f       	mov	r25, r31
 ade:	96 60       	ori	r25, 0x06	; 6
 ae0:	b9 2e       	mov	r11, r25
 ae2:	06 c0       	rjmp	.+12     	; 0xaf0 <__stack+0x1f1>
 ae4:	28 e0       	ldi	r18, 0x08	; 8
 ae6:	30 e0       	ldi	r19, 0x00	; 0
 ae8:	05 c0       	rjmp	.+10     	; 0xaf4 <__stack+0x1f5>
 aea:	20 e1       	ldi	r18, 0x10	; 16
 aec:	30 e0       	ldi	r19, 0x00	; 0
 aee:	02 c0       	rjmp	.+4      	; 0xaf4 <__stack+0x1f5>
 af0:	20 e1       	ldi	r18, 0x10	; 16
 af2:	32 e0       	ldi	r19, 0x02	; 2
 af4:	f8 01       	movw	r30, r16
 af6:	b7 fe       	sbrs	r11, 7
 af8:	07 c0       	rjmp	.+14     	; 0xb08 <__stack+0x209>
 afa:	60 81       	ld	r22, Z
 afc:	71 81       	ldd	r23, Z+1	; 0x01
 afe:	82 81       	ldd	r24, Z+2	; 0x02
 b00:	93 81       	ldd	r25, Z+3	; 0x03
 b02:	0c 5f       	subi	r16, 0xFC	; 252
 b04:	1f 4f       	sbci	r17, 0xFF	; 255
 b06:	06 c0       	rjmp	.+12     	; 0xb14 <__stack+0x215>
 b08:	60 81       	ld	r22, Z
 b0a:	71 81       	ldd	r23, Z+1	; 0x01
 b0c:	80 e0       	ldi	r24, 0x00	; 0
 b0e:	90 e0       	ldi	r25, 0x00	; 0
 b10:	0e 5f       	subi	r16, 0xFE	; 254
 b12:	1f 4f       	sbci	r17, 0xFF	; 255
 b14:	a4 01       	movw	r20, r8
 b16:	0e 94 6a 06 	call	0xcd4	; 0xcd4 <__ultoa_invert>
 b1a:	a8 2e       	mov	r10, r24
 b1c:	a8 18       	sub	r10, r8
 b1e:	fb 2d       	mov	r31, r11
 b20:	ff 77       	andi	r31, 0x7F	; 127
 b22:	7f 2e       	mov	r7, r31
 b24:	76 fe       	sbrs	r7, 6
 b26:	0b c0       	rjmp	.+22     	; 0xb3e <__stack+0x23f>
 b28:	37 2d       	mov	r19, r7
 b2a:	3e 7f       	andi	r19, 0xFE	; 254
 b2c:	a5 14       	cp	r10, r5
 b2e:	50 f4       	brcc	.+20     	; 0xb44 <__stack+0x245>
 b30:	74 fe       	sbrs	r7, 4
 b32:	0a c0       	rjmp	.+20     	; 0xb48 <__stack+0x249>
 b34:	72 fc       	sbrc	r7, 2
 b36:	08 c0       	rjmp	.+16     	; 0xb48 <__stack+0x249>
 b38:	37 2d       	mov	r19, r7
 b3a:	3e 7e       	andi	r19, 0xEE	; 238
 b3c:	05 c0       	rjmp	.+10     	; 0xb48 <__stack+0x249>
 b3e:	ba 2c       	mov	r11, r10
 b40:	37 2d       	mov	r19, r7
 b42:	03 c0       	rjmp	.+6      	; 0xb4a <__stack+0x24b>
 b44:	ba 2c       	mov	r11, r10
 b46:	01 c0       	rjmp	.+2      	; 0xb4a <__stack+0x24b>
 b48:	b5 2c       	mov	r11, r5
 b4a:	34 ff       	sbrs	r19, 4
 b4c:	0d c0       	rjmp	.+26     	; 0xb68 <__stack+0x269>
 b4e:	fe 01       	movw	r30, r28
 b50:	ea 0d       	add	r30, r10
 b52:	f1 1d       	adc	r31, r1
 b54:	80 81       	ld	r24, Z
 b56:	80 33       	cpi	r24, 0x30	; 48
 b58:	11 f4       	brne	.+4      	; 0xb5e <__stack+0x25f>
 b5a:	39 7e       	andi	r19, 0xE9	; 233
 b5c:	09 c0       	rjmp	.+18     	; 0xb70 <__stack+0x271>
 b5e:	32 ff       	sbrs	r19, 2
 b60:	06 c0       	rjmp	.+12     	; 0xb6e <__stack+0x26f>
 b62:	b3 94       	inc	r11
 b64:	b3 94       	inc	r11
 b66:	04 c0       	rjmp	.+8      	; 0xb70 <__stack+0x271>
 b68:	83 2f       	mov	r24, r19
 b6a:	86 78       	andi	r24, 0x86	; 134
 b6c:	09 f0       	breq	.+2      	; 0xb70 <__stack+0x271>
 b6e:	b3 94       	inc	r11
 b70:	33 fd       	sbrc	r19, 3
 b72:	13 c0       	rjmp	.+38     	; 0xb9a <__stack+0x29b>
 b74:	30 ff       	sbrs	r19, 0
 b76:	06 c0       	rjmp	.+12     	; 0xb84 <__stack+0x285>
 b78:	5a 2c       	mov	r5, r10
 b7a:	b3 14       	cp	r11, r3
 b7c:	18 f4       	brcc	.+6      	; 0xb84 <__stack+0x285>
 b7e:	53 0c       	add	r5, r3
 b80:	5b 18       	sub	r5, r11
 b82:	b3 2c       	mov	r11, r3
 b84:	b3 14       	cp	r11, r3
 b86:	68 f4       	brcc	.+26     	; 0xba2 <__stack+0x2a3>
 b88:	b7 01       	movw	r22, r14
 b8a:	80 e2       	ldi	r24, 0x20	; 32
 b8c:	90 e0       	ldi	r25, 0x00	; 0
 b8e:	3c 87       	std	Y+12, r19	; 0x0c
 b90:	0e 94 32 06 	call	0xc64	; 0xc64 <fputc>
 b94:	b3 94       	inc	r11
 b96:	3c 85       	ldd	r19, Y+12	; 0x0c
 b98:	f5 cf       	rjmp	.-22     	; 0xb84 <__stack+0x285>
 b9a:	b3 14       	cp	r11, r3
 b9c:	10 f4       	brcc	.+4      	; 0xba2 <__stack+0x2a3>
 b9e:	3b 18       	sub	r3, r11
 ba0:	01 c0       	rjmp	.+2      	; 0xba4 <__stack+0x2a5>
 ba2:	31 2c       	mov	r3, r1
 ba4:	34 ff       	sbrs	r19, 4
 ba6:	12 c0       	rjmp	.+36     	; 0xbcc <__stack+0x2cd>
 ba8:	b7 01       	movw	r22, r14
 baa:	80 e3       	ldi	r24, 0x30	; 48
 bac:	90 e0       	ldi	r25, 0x00	; 0
 bae:	3c 87       	std	Y+12, r19	; 0x0c
 bb0:	0e 94 32 06 	call	0xc64	; 0xc64 <fputc>
 bb4:	3c 85       	ldd	r19, Y+12	; 0x0c
 bb6:	32 ff       	sbrs	r19, 2
 bb8:	17 c0       	rjmp	.+46     	; 0xbe8 <__stack+0x2e9>
 bba:	31 fd       	sbrc	r19, 1
 bbc:	03 c0       	rjmp	.+6      	; 0xbc4 <__stack+0x2c5>
 bbe:	88 e7       	ldi	r24, 0x78	; 120
 bc0:	90 e0       	ldi	r25, 0x00	; 0
 bc2:	02 c0       	rjmp	.+4      	; 0xbc8 <__stack+0x2c9>
 bc4:	88 e5       	ldi	r24, 0x58	; 88
 bc6:	90 e0       	ldi	r25, 0x00	; 0
 bc8:	b7 01       	movw	r22, r14
 bca:	0c c0       	rjmp	.+24     	; 0xbe4 <__stack+0x2e5>
 bcc:	83 2f       	mov	r24, r19
 bce:	86 78       	andi	r24, 0x86	; 134
 bd0:	59 f0       	breq	.+22     	; 0xbe8 <__stack+0x2e9>
 bd2:	31 ff       	sbrs	r19, 1
 bd4:	02 c0       	rjmp	.+4      	; 0xbda <__stack+0x2db>
 bd6:	8b e2       	ldi	r24, 0x2B	; 43
 bd8:	01 c0       	rjmp	.+2      	; 0xbdc <__stack+0x2dd>
 bda:	80 e2       	ldi	r24, 0x20	; 32
 bdc:	37 fd       	sbrc	r19, 7
 bde:	8d e2       	ldi	r24, 0x2D	; 45
 be0:	b7 01       	movw	r22, r14
 be2:	90 e0       	ldi	r25, 0x00	; 0
 be4:	0e 94 32 06 	call	0xc64	; 0xc64 <fputc>
 be8:	a5 14       	cp	r10, r5
 bea:	38 f4       	brcc	.+14     	; 0xbfa <__stack+0x2fb>
 bec:	b7 01       	movw	r22, r14
 bee:	80 e3       	ldi	r24, 0x30	; 48
 bf0:	90 e0       	ldi	r25, 0x00	; 0
 bf2:	0e 94 32 06 	call	0xc64	; 0xc64 <fputc>
 bf6:	5a 94       	dec	r5
 bf8:	f7 cf       	rjmp	.-18     	; 0xbe8 <__stack+0x2e9>
 bfa:	aa 94       	dec	r10
 bfc:	f4 01       	movw	r30, r8
 bfe:	ea 0d       	add	r30, r10
 c00:	f1 1d       	adc	r31, r1
 c02:	80 81       	ld	r24, Z
 c04:	b7 01       	movw	r22, r14
 c06:	90 e0       	ldi	r25, 0x00	; 0
 c08:	0e 94 32 06 	call	0xc64	; 0xc64 <fputc>
 c0c:	a1 10       	cpse	r10, r1
 c0e:	f5 cf       	rjmp	.-22     	; 0xbfa <__stack+0x2fb>
 c10:	33 20       	and	r3, r3
 c12:	09 f4       	brne	.+2      	; 0xc16 <__stack+0x317>
 c14:	51 ce       	rjmp	.-862    	; 0x8b8 <vfprintf+0x24>
 c16:	b7 01       	movw	r22, r14
 c18:	80 e2       	ldi	r24, 0x20	; 32
 c1a:	90 e0       	ldi	r25, 0x00	; 0
 c1c:	0e 94 32 06 	call	0xc64	; 0xc64 <fputc>
 c20:	3a 94       	dec	r3
 c22:	f6 cf       	rjmp	.-20     	; 0xc10 <__stack+0x311>
 c24:	f7 01       	movw	r30, r14
 c26:	86 81       	ldd	r24, Z+6	; 0x06
 c28:	97 81       	ldd	r25, Z+7	; 0x07
 c2a:	02 c0       	rjmp	.+4      	; 0xc30 <__stack+0x331>
 c2c:	8f ef       	ldi	r24, 0xFF	; 255
 c2e:	9f ef       	ldi	r25, 0xFF	; 255
 c30:	2c 96       	adiw	r28, 0x0c	; 12
 c32:	e2 e1       	ldi	r30, 0x12	; 18
 c34:	0c 94 e4 06 	jmp	0xdc8	; 0xdc8 <__epilogue_restores__>

00000c38 <strnlen_P>:
 c38:	fc 01       	movw	r30, r24
 c3a:	05 90       	lpm	r0, Z+
 c3c:	61 50       	subi	r22, 0x01	; 1
 c3e:	70 40       	sbci	r23, 0x00	; 0
 c40:	01 10       	cpse	r0, r1
 c42:	d8 f7       	brcc	.-10     	; 0xc3a <strnlen_P+0x2>
 c44:	80 95       	com	r24
 c46:	90 95       	com	r25
 c48:	8e 0f       	add	r24, r30
 c4a:	9f 1f       	adc	r25, r31
 c4c:	08 95       	ret

00000c4e <strnlen>:
 c4e:	fc 01       	movw	r30, r24
 c50:	61 50       	subi	r22, 0x01	; 1
 c52:	70 40       	sbci	r23, 0x00	; 0
 c54:	01 90       	ld	r0, Z+
 c56:	01 10       	cpse	r0, r1
 c58:	d8 f7       	brcc	.-10     	; 0xc50 <strnlen+0x2>
 c5a:	80 95       	com	r24
 c5c:	90 95       	com	r25
 c5e:	8e 0f       	add	r24, r30
 c60:	9f 1f       	adc	r25, r31
 c62:	08 95       	ret

00000c64 <fputc>:
 c64:	0f 93       	push	r16
 c66:	1f 93       	push	r17
 c68:	cf 93       	push	r28
 c6a:	df 93       	push	r29
 c6c:	fb 01       	movw	r30, r22
 c6e:	23 81       	ldd	r18, Z+3	; 0x03
 c70:	21 fd       	sbrc	r18, 1
 c72:	03 c0       	rjmp	.+6      	; 0xc7a <fputc+0x16>
 c74:	8f ef       	ldi	r24, 0xFF	; 255
 c76:	9f ef       	ldi	r25, 0xFF	; 255
 c78:	28 c0       	rjmp	.+80     	; 0xcca <fputc+0x66>
 c7a:	22 ff       	sbrs	r18, 2
 c7c:	16 c0       	rjmp	.+44     	; 0xcaa <fputc+0x46>
 c7e:	46 81       	ldd	r20, Z+6	; 0x06
 c80:	57 81       	ldd	r21, Z+7	; 0x07
 c82:	24 81       	ldd	r18, Z+4	; 0x04
 c84:	35 81       	ldd	r19, Z+5	; 0x05
 c86:	42 17       	cp	r20, r18
 c88:	53 07       	cpc	r21, r19
 c8a:	44 f4       	brge	.+16     	; 0xc9c <fputc+0x38>
 c8c:	a0 81       	ld	r26, Z
 c8e:	b1 81       	ldd	r27, Z+1	; 0x01
 c90:	9d 01       	movw	r18, r26
 c92:	2f 5f       	subi	r18, 0xFF	; 255
 c94:	3f 4f       	sbci	r19, 0xFF	; 255
 c96:	31 83       	std	Z+1, r19	; 0x01
 c98:	20 83       	st	Z, r18
 c9a:	8c 93       	st	X, r24
 c9c:	26 81       	ldd	r18, Z+6	; 0x06
 c9e:	37 81       	ldd	r19, Z+7	; 0x07
 ca0:	2f 5f       	subi	r18, 0xFF	; 255
 ca2:	3f 4f       	sbci	r19, 0xFF	; 255
 ca4:	37 83       	std	Z+7, r19	; 0x07
 ca6:	26 83       	std	Z+6, r18	; 0x06
 ca8:	10 c0       	rjmp	.+32     	; 0xcca <fputc+0x66>
 caa:	eb 01       	movw	r28, r22
 cac:	09 2f       	mov	r16, r25
 cae:	18 2f       	mov	r17, r24
 cb0:	00 84       	ldd	r0, Z+8	; 0x08
 cb2:	f1 85       	ldd	r31, Z+9	; 0x09
 cb4:	e0 2d       	mov	r30, r0
 cb6:	09 95       	icall
 cb8:	89 2b       	or	r24, r25
 cba:	e1 f6       	brne	.-72     	; 0xc74 <fputc+0x10>
 cbc:	8e 81       	ldd	r24, Y+6	; 0x06
 cbe:	9f 81       	ldd	r25, Y+7	; 0x07
 cc0:	01 96       	adiw	r24, 0x01	; 1
 cc2:	9f 83       	std	Y+7, r25	; 0x07
 cc4:	8e 83       	std	Y+6, r24	; 0x06
 cc6:	81 2f       	mov	r24, r17
 cc8:	90 2f       	mov	r25, r16
 cca:	df 91       	pop	r29
 ccc:	cf 91       	pop	r28
 cce:	1f 91       	pop	r17
 cd0:	0f 91       	pop	r16
 cd2:	08 95       	ret

00000cd4 <__ultoa_invert>:
 cd4:	fa 01       	movw	r30, r20
 cd6:	aa 27       	eor	r26, r26
 cd8:	28 30       	cpi	r18, 0x08	; 8
 cda:	51 f1       	breq	.+84     	; 0xd30 <__ultoa_invert+0x5c>
 cdc:	20 31       	cpi	r18, 0x10	; 16
 cde:	81 f1       	breq	.+96     	; 0xd40 <__ultoa_invert+0x6c>
 ce0:	e8 94       	clt
 ce2:	6f 93       	push	r22
 ce4:	6e 7f       	andi	r22, 0xFE	; 254
 ce6:	6e 5f       	subi	r22, 0xFE	; 254
 ce8:	7f 4f       	sbci	r23, 0xFF	; 255
 cea:	8f 4f       	sbci	r24, 0xFF	; 255
 cec:	9f 4f       	sbci	r25, 0xFF	; 255
 cee:	af 4f       	sbci	r26, 0xFF	; 255
 cf0:	b1 e0       	ldi	r27, 0x01	; 1
 cf2:	3e d0       	rcall	.+124    	; 0xd70 <__ultoa_invert+0x9c>
 cf4:	b4 e0       	ldi	r27, 0x04	; 4
 cf6:	3c d0       	rcall	.+120    	; 0xd70 <__ultoa_invert+0x9c>
 cf8:	67 0f       	add	r22, r23
 cfa:	78 1f       	adc	r23, r24
 cfc:	89 1f       	adc	r24, r25
 cfe:	9a 1f       	adc	r25, r26
 d00:	a1 1d       	adc	r26, r1
 d02:	68 0f       	add	r22, r24
 d04:	79 1f       	adc	r23, r25
 d06:	8a 1f       	adc	r24, r26
 d08:	91 1d       	adc	r25, r1
 d0a:	a1 1d       	adc	r26, r1
 d0c:	6a 0f       	add	r22, r26
 d0e:	71 1d       	adc	r23, r1
 d10:	81 1d       	adc	r24, r1
 d12:	91 1d       	adc	r25, r1
 d14:	a1 1d       	adc	r26, r1
 d16:	20 d0       	rcall	.+64     	; 0xd58 <__ultoa_invert+0x84>
 d18:	09 f4       	brne	.+2      	; 0xd1c <__ultoa_invert+0x48>
 d1a:	68 94       	set
 d1c:	3f 91       	pop	r19
 d1e:	2a e0       	ldi	r18, 0x0A	; 10
 d20:	26 9f       	mul	r18, r22
 d22:	11 24       	eor	r1, r1
 d24:	30 19       	sub	r19, r0
 d26:	30 5d       	subi	r19, 0xD0	; 208
 d28:	31 93       	st	Z+, r19
 d2a:	de f6       	brtc	.-74     	; 0xce2 <__ultoa_invert+0xe>
 d2c:	cf 01       	movw	r24, r30
 d2e:	08 95       	ret
 d30:	46 2f       	mov	r20, r22
 d32:	47 70       	andi	r20, 0x07	; 7
 d34:	40 5d       	subi	r20, 0xD0	; 208
 d36:	41 93       	st	Z+, r20
 d38:	b3 e0       	ldi	r27, 0x03	; 3
 d3a:	0f d0       	rcall	.+30     	; 0xd5a <__ultoa_invert+0x86>
 d3c:	c9 f7       	brne	.-14     	; 0xd30 <__ultoa_invert+0x5c>
 d3e:	f6 cf       	rjmp	.-20     	; 0xd2c <__ultoa_invert+0x58>
 d40:	46 2f       	mov	r20, r22
 d42:	4f 70       	andi	r20, 0x0F	; 15
 d44:	40 5d       	subi	r20, 0xD0	; 208
 d46:	4a 33       	cpi	r20, 0x3A	; 58
 d48:	18 f0       	brcs	.+6      	; 0xd50 <__ultoa_invert+0x7c>
 d4a:	49 5d       	subi	r20, 0xD9	; 217
 d4c:	31 fd       	sbrc	r19, 1
 d4e:	40 52       	subi	r20, 0x20	; 32
 d50:	41 93       	st	Z+, r20
 d52:	02 d0       	rcall	.+4      	; 0xd58 <__ultoa_invert+0x84>
 d54:	a9 f7       	brne	.-22     	; 0xd40 <__ultoa_invert+0x6c>
 d56:	ea cf       	rjmp	.-44     	; 0xd2c <__ultoa_invert+0x58>
 d58:	b4 e0       	ldi	r27, 0x04	; 4
 d5a:	a6 95       	lsr	r26
 d5c:	97 95       	ror	r25
 d5e:	87 95       	ror	r24
 d60:	77 95       	ror	r23
 d62:	67 95       	ror	r22
 d64:	ba 95       	dec	r27
 d66:	c9 f7       	brne	.-14     	; 0xd5a <__ultoa_invert+0x86>
 d68:	00 97       	sbiw	r24, 0x00	; 0
 d6a:	61 05       	cpc	r22, r1
 d6c:	71 05       	cpc	r23, r1
 d6e:	08 95       	ret
 d70:	9b 01       	movw	r18, r22
 d72:	ac 01       	movw	r20, r24
 d74:	0a 2e       	mov	r0, r26
 d76:	06 94       	lsr	r0
 d78:	57 95       	ror	r21
 d7a:	47 95       	ror	r20
 d7c:	37 95       	ror	r19
 d7e:	27 95       	ror	r18
 d80:	ba 95       	dec	r27
 d82:	c9 f7       	brne	.-14     	; 0xd76 <__ultoa_invert+0xa2>
 d84:	62 0f       	add	r22, r18
 d86:	73 1f       	adc	r23, r19
 d88:	84 1f       	adc	r24, r20
 d8a:	95 1f       	adc	r25, r21
 d8c:	a0 1d       	adc	r26, r0
 d8e:	08 95       	ret

00000d90 <__prologue_saves__>:
 d90:	2f 92       	push	r2
 d92:	3f 92       	push	r3
 d94:	4f 92       	push	r4
 d96:	5f 92       	push	r5
 d98:	6f 92       	push	r6
 d9a:	7f 92       	push	r7
 d9c:	8f 92       	push	r8
 d9e:	9f 92       	push	r9
 da0:	af 92       	push	r10
 da2:	bf 92       	push	r11
 da4:	cf 92       	push	r12
 da6:	df 92       	push	r13
 da8:	ef 92       	push	r14
 daa:	ff 92       	push	r15
 dac:	0f 93       	push	r16
 dae:	1f 93       	push	r17
 db0:	cf 93       	push	r28
 db2:	df 93       	push	r29
 db4:	cd b7       	in	r28, 0x3d	; 61
 db6:	de b7       	in	r29, 0x3e	; 62
 db8:	ca 1b       	sub	r28, r26
 dba:	db 0b       	sbc	r29, r27
 dbc:	0f b6       	in	r0, 0x3f	; 63
 dbe:	f8 94       	cli
 dc0:	de bf       	out	0x3e, r29	; 62
 dc2:	0f be       	out	0x3f, r0	; 63
 dc4:	cd bf       	out	0x3d, r28	; 61
 dc6:	09 94       	ijmp

00000dc8 <__epilogue_restores__>:
 dc8:	2a 88       	ldd	r2, Y+18	; 0x12
 dca:	39 88       	ldd	r3, Y+17	; 0x11
 dcc:	48 88       	ldd	r4, Y+16	; 0x10
 dce:	5f 84       	ldd	r5, Y+15	; 0x0f
 dd0:	6e 84       	ldd	r6, Y+14	; 0x0e
 dd2:	7d 84       	ldd	r7, Y+13	; 0x0d
 dd4:	8c 84       	ldd	r8, Y+12	; 0x0c
 dd6:	9b 84       	ldd	r9, Y+11	; 0x0b
 dd8:	aa 84       	ldd	r10, Y+10	; 0x0a
 dda:	b9 84       	ldd	r11, Y+9	; 0x09
 ddc:	c8 84       	ldd	r12, Y+8	; 0x08
 dde:	df 80       	ldd	r13, Y+7	; 0x07
 de0:	ee 80       	ldd	r14, Y+6	; 0x06
 de2:	fd 80       	ldd	r15, Y+5	; 0x05
 de4:	0c 81       	ldd	r16, Y+4	; 0x04
 de6:	1b 81       	ldd	r17, Y+3	; 0x03
 de8:	aa 81       	ldd	r26, Y+2	; 0x02
 dea:	b9 81       	ldd	r27, Y+1	; 0x01
 dec:	ce 0f       	add	r28, r30
 dee:	d1 1d       	adc	r29, r1
 df0:	0f b6       	in	r0, 0x3f	; 63
 df2:	f8 94       	cli
 df4:	de bf       	out	0x3e, r29	; 62
 df6:	0f be       	out	0x3f, r0	; 63
 df8:	cd bf       	out	0x3d, r28	; 61
 dfa:	ed 01       	movw	r28, r26
 dfc:	08 95       	ret

00000dfe <_exit>:
 dfe:	f8 94       	cli

00000e00 <__stop_program>:
 e00:	ff cf       	rjmp	.-2      	; 0xe00 <__stop_program>
