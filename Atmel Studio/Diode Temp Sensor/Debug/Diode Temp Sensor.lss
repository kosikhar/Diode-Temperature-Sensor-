
Diode Temp Sensor.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000028  00800100  00000c98  00000d0c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000c98  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005c  00000000  00000000  00000d34  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000d90  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000e8  00000000  00000000  00000dcc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000012b8  00000000  00000000  00000eb4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000b4d  00000000  00000000  0000216c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000007ec  00000000  00000000  00002cb9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000208  00000000  00000000  000034a8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000055b  00000000  00000000  000036b0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000007c0  00000000  00000000  00003c0b  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000c0  00000000  00000000  000043cb  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   8:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  10:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  54:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e8 e9       	ldi	r30, 0x98	; 152
  7c:	fc e0       	ldi	r31, 0x0C	; 12
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a8 32       	cpi	r26, 0x28	; 40
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>
  8a:	0e 94 c1 01 	call	0x382	; 0x382 <main>
  8e:	0c 94 4a 06 	jmp	0xc94	; 0xc94 <_exit>

00000092 <__bad_interrupt>:
  92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <ADCRead>:
#include "ADCRead.h"

#define number_samples 64
#define sample_time_us 100

uint16_t ADCRead(uint8_t pin){
  96:	8f 92       	push	r8
  98:	9f 92       	push	r9
  9a:	af 92       	push	r10
  9c:	bf 92       	push	r11
  9e:	ef 92       	push	r14
  a0:	ff 92       	push	r15
  a2:	0f 93       	push	r16
  a4:	1f 93       	push	r17
  a6:	cf 93       	push	r28
  a8:	df 93       	push	r29

	uint16_t input; //We're going to sample and average from 16 readings. 
	double sum = 0; //The sum of all samples.
	double average = 0; // the average of all the samples.
	
	ADCSRB &= 0x00; //Auto Trigger = Free Running mode
  aa:	eb e7       	ldi	r30, 0x7B	; 123
  ac:	f0 e0       	ldi	r31, 0x00	; 0
  ae:	90 81       	ld	r25, Z
  b0:	10 82       	st	Z, r1
	ADCSRA |= (1 << ADEN);                // ADC Enable; Interupt Disable; Freq/1 
  b2:	ea e7       	ldi	r30, 0x7A	; 122
  b4:	f0 e0       	ldi	r31, 0x00	; 0
  b6:	90 81       	ld	r25, Z
  b8:	90 68       	ori	r25, 0x80	; 128
  ba:	90 83       	st	Z, r25
	//ADMUX |= (1 << REFS0); //Set reference, AVcc
	ADMUX |= ((1 << REFS0) | (1 << REFS1)) ; //Set Internal 1.1v reference		  
  bc:	ec e7       	ldi	r30, 0x7C	; 124
  be:	f0 e0       	ldi	r31, 0x00	; 0
  c0:	90 81       	ld	r25, Z
  c2:	90 6c       	ori	r25, 0xC0	; 192
  c4:	90 83       	st	Z, r25
	
	ADMUX &= 0b11110000;
  c6:	90 81       	ld	r25, Z
  c8:	90 7f       	andi	r25, 0xF0	; 240
  ca:	90 83       	st	Z, r25
	    
	ADMUX |= pin;  //Set input pin
  cc:	90 81       	ld	r25, Z
  ce:	89 2b       	or	r24, r25
  d0:	80 83       	st	Z, r24
  d2:	68 94       	set
  d4:	ee 24       	eor	r14, r14
  d6:	e6 f8       	bld	r14, 6
  d8:	f1 2c       	mov	r15, r1
#define sample_time_us 100

uint16_t ADCRead(uint8_t pin){

	uint16_t input; //We're going to sample and average from 16 readings. 
	double sum = 0; //The sum of all samples.
  da:	81 2c       	mov	r8, r1
  dc:	91 2c       	mov	r9, r1
  de:	54 01       	movw	r10, r8
	ADMUX |= pin;  //Set input pin
	
	uint16_t i;
	for(i = 0; i < number_samples; i++) {
	
		ADCSRA |= (1 << ADSC); //Start Conversation
  e0:	ca e7       	ldi	r28, 0x7A	; 122
  e2:	d0 e0       	ldi	r29, 0x00	; 0

		while( (ADCSRA & (1 << ADSC)) ); //Wait till conversation complete ( ADSC == 0 )

		ADCSRA |= (1 << ADIF);   // Clear ADC Interrupt Flag
		
		input = ADC; 
  e4:	08 e7       	ldi	r16, 0x78	; 120
  e6:	10 e0       	ldi	r17, 0x00	; 0
	ADMUX |= pin;  //Set input pin
	
	uint16_t i;
	for(i = 0; i < number_samples; i++) {
	
		ADCSRA |= (1 << ADSC); //Start Conversation
  e8:	88 81       	ld	r24, Y
  ea:	80 64       	ori	r24, 0x40	; 64
  ec:	88 83       	st	Y, r24

		while( (ADCSRA & (1 << ADSC)) ); //Wait till conversation complete ( ADSC == 0 )
  ee:	88 81       	ld	r24, Y
  f0:	86 fd       	sbrc	r24, 6
  f2:	fd cf       	rjmp	.-6      	; 0xee <ADCRead+0x58>

		ADCSRA |= (1 << ADIF);   // Clear ADC Interrupt Flag
  f4:	88 81       	ld	r24, Y
  f6:	80 61       	ori	r24, 0x10	; 16
  f8:	88 83       	st	Y, r24
		
		input = ADC; 
  fa:	f8 01       	movw	r30, r16
  fc:	80 81       	ld	r24, Z
  fe:	91 81       	ldd	r25, Z+1	; 0x01
		sum = sum + input;
 100:	bc 01       	movw	r22, r24
 102:	80 e0       	ldi	r24, 0x00	; 0
 104:	90 e0       	ldi	r25, 0x00	; 0
 106:	0e 94 77 02 	call	0x4ee	; 0x4ee <__floatunsisf>
 10a:	9b 01       	movw	r18, r22
 10c:	ac 01       	movw	r20, r24
 10e:	c5 01       	movw	r24, r10
 110:	b4 01       	movw	r22, r8
 112:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <__addsf3>
 116:	4b 01       	movw	r8, r22
 118:	5c 01       	movw	r10, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 11a:	87 ec       	ldi	r24, 0xC7	; 199
 11c:	90 e0       	ldi	r25, 0x00	; 0
 11e:	01 97       	sbiw	r24, 0x01	; 1
 120:	f1 f7       	brne	.-4      	; 0x11e <ADCRead+0x88>
 122:	00 c0       	rjmp	.+0      	; 0x124 <ADCRead+0x8e>
 124:	00 00       	nop
 126:	91 e0       	ldi	r25, 0x01	; 1
 128:	e9 1a       	sub	r14, r25
 12a:	f1 08       	sbc	r15, r1
	ADMUX &= 0b11110000;
	    
	ADMUX |= pin;  //Set input pin
	
	uint16_t i;
	for(i = 0; i < number_samples; i++) {
 12c:	e9 f6       	brne	.-70     	; 0xe8 <ADCRead+0x52>
		
		_delay_us(sample_time_us);
		
	}
	
	average = sum / number_samples;
 12e:	20 e0       	ldi	r18, 0x00	; 0
 130:	30 e0       	ldi	r19, 0x00	; 0
 132:	40 e8       	ldi	r20, 0x80	; 128
 134:	5c e3       	ldi	r21, 0x3C	; 60
 136:	c5 01       	movw	r24, r10
 138:	b4 01       	movw	r22, r8
 13a:	0e 94 05 03 	call	0x60a	; 0x60a <__mulsf3>
		
	return (uint16_t) average;
 13e:	0e 94 48 02 	call	0x490	; 0x490 <__fixunssfsi>
}
 142:	cb 01       	movw	r24, r22
 144:	df 91       	pop	r29
 146:	cf 91       	pop	r28
 148:	1f 91       	pop	r17
 14a:	0f 91       	pop	r16
 14c:	ff 90       	pop	r15
 14e:	ef 90       	pop	r14
 150:	bf 90       	pop	r11
 152:	af 90       	pop	r10
 154:	9f 90       	pop	r9
 156:	8f 90       	pop	r8
 158:	08 95       	ret

0000015a <toggle_e>:

    while ( (c = pgm_read_byte(progmem_s++)) ) {
        lcd_putc(c);
    }

}/* lcd_puts_p */
 15a:	5e 9a       	sbi	0x0b, 6	; 11
 15c:	00 00       	nop
 15e:	5e 98       	cbi	0x0b, 6	; 11
 160:	08 95       	ret

00000162 <lcd_write>:
 162:	cf 93       	push	r28
 164:	df 93       	push	r29
 166:	d8 2f       	mov	r29, r24
 168:	66 23       	and	r22, r22
 16a:	11 f0       	breq	.+4      	; 0x170 <lcd_write+0xe>
 16c:	5c 9a       	sbi	0x0b, 4	; 11
 16e:	01 c0       	rjmp	.+2      	; 0x172 <lcd_write+0x10>
 170:	5c 98       	cbi	0x0b, 4	; 11
 172:	5d 98       	cbi	0x0b, 5	; 11
 174:	8a b1       	in	r24, 0x0a	; 10
 176:	8f 60       	ori	r24, 0x0F	; 15
 178:	8a b9       	out	0x0a, r24	; 10
 17a:	cb b1       	in	r28, 0x0b	; 11
 17c:	c0 7f       	andi	r28, 0xF0	; 240
 17e:	8d 2f       	mov	r24, r29
 180:	82 95       	swap	r24
 182:	8f 70       	andi	r24, 0x0F	; 15
 184:	8c 2b       	or	r24, r28
 186:	8b b9       	out	0x0b, r24	; 11
 188:	0e 94 ad 00 	call	0x15a	; 0x15a <toggle_e>
 18c:	df 70       	andi	r29, 0x0F	; 15
 18e:	dc 2b       	or	r29, r28
 190:	db b9       	out	0x0b, r29	; 11
 192:	0e 94 ad 00 	call	0x15a	; 0x15a <toggle_e>
 196:	cf 60       	ori	r28, 0x0F	; 15
 198:	cb b9       	out	0x0b, r28	; 11
 19a:	df 91       	pop	r29
 19c:	cf 91       	pop	r28
 19e:	08 95       	ret

000001a0 <lcd_read>:
 1a0:	88 23       	and	r24, r24
 1a2:	11 f0       	breq	.+4      	; 0x1a8 <lcd_read+0x8>
 1a4:	5c 9a       	sbi	0x0b, 4	; 11
 1a6:	01 c0       	rjmp	.+2      	; 0x1aa <lcd_read+0xa>
 1a8:	5c 98       	cbi	0x0b, 4	; 11
 1aa:	5d 9a       	sbi	0x0b, 5	; 11
 1ac:	8a b1       	in	r24, 0x0a	; 10
 1ae:	80 7f       	andi	r24, 0xF0	; 240
 1b0:	8a b9       	out	0x0a, r24	; 10
 1b2:	5e 9a       	sbi	0x0b, 6	; 11
 1b4:	00 00       	nop
 1b6:	29 b1       	in	r18, 0x09	; 9
 1b8:	5e 98       	cbi	0x0b, 6	; 11
 1ba:	00 00       	nop
 1bc:	5e 9a       	sbi	0x0b, 6	; 11
 1be:	00 00       	nop
 1c0:	99 b1       	in	r25, 0x09	; 9
 1c2:	22 95       	swap	r18
 1c4:	20 7f       	andi	r18, 0xF0	; 240
 1c6:	89 2f       	mov	r24, r25
 1c8:	8f 70       	andi	r24, 0x0F	; 15
 1ca:	5e 98       	cbi	0x0b, 6	; 11
 1cc:	82 2b       	or	r24, r18
 1ce:	08 95       	ret

000001d0 <lcd_waitbusy>:
 1d0:	80 e0       	ldi	r24, 0x00	; 0
 1d2:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <lcd_read>
 1d6:	88 23       	and	r24, r24
 1d8:	dc f3       	brlt	.-10     	; 0x1d0 <lcd_waitbusy>
 1da:	00 c0       	rjmp	.+0      	; 0x1dc <lcd_waitbusy+0xc>
 1dc:	00 c0       	rjmp	.+0      	; 0x1de <lcd_waitbusy+0xe>
 1de:	80 e0       	ldi	r24, 0x00	; 0
 1e0:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <lcd_read>
 1e4:	08 95       	ret

000001e6 <lcd_command>:
 1e6:	cf 93       	push	r28
 1e8:	c8 2f       	mov	r28, r24
 1ea:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <lcd_waitbusy>
 1ee:	60 e0       	ldi	r22, 0x00	; 0
 1f0:	8c 2f       	mov	r24, r28
 1f2:	0e 94 b1 00 	call	0x162	; 0x162 <lcd_write>
 1f6:	cf 91       	pop	r28
 1f8:	08 95       	ret

000001fa <lcd_gotoxy>:
 1fa:	61 11       	cpse	r22, r1
 1fc:	04 c0       	rjmp	.+8      	; 0x206 <lcd_gotoxy+0xc>
 1fe:	80 58       	subi	r24, 0x80	; 128
 200:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <lcd_command>
 204:	08 95       	ret
 206:	80 54       	subi	r24, 0x40	; 64
 208:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <lcd_command>
 20c:	08 95       	ret

0000020e <lcd_clrscr>:
 20e:	81 e0       	ldi	r24, 0x01	; 1
 210:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <lcd_command>
 214:	08 95       	ret

00000216 <lcd_putc>:
 216:	cf 93       	push	r28
 218:	c8 2f       	mov	r28, r24
 21a:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <lcd_waitbusy>
 21e:	ca 30       	cpi	r28, 0x0A	; 10
 220:	49 f4       	brne	.+18     	; 0x234 <lcd_putc+0x1e>
 222:	80 34       	cpi	r24, 0x40	; 64
 224:	10 f0       	brcs	.+4      	; 0x22a <lcd_putc+0x14>
 226:	80 e0       	ldi	r24, 0x00	; 0
 228:	01 c0       	rjmp	.+2      	; 0x22c <lcd_putc+0x16>
 22a:	80 e4       	ldi	r24, 0x40	; 64
 22c:	80 58       	subi	r24, 0x80	; 128
 22e:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <lcd_command>
 232:	04 c0       	rjmp	.+8      	; 0x23c <lcd_putc+0x26>
 234:	61 e0       	ldi	r22, 0x01	; 1
 236:	8c 2f       	mov	r24, r28
 238:	0e 94 b1 00 	call	0x162	; 0x162 <lcd_write>
 23c:	cf 91       	pop	r28
 23e:	08 95       	ret

00000240 <lcd_puts>:
 240:	cf 93       	push	r28
 242:	df 93       	push	r29
 244:	ec 01       	movw	r28, r24
 246:	21 96       	adiw	r28, 0x01	; 1
 248:	fc 01       	movw	r30, r24
 24a:	80 81       	ld	r24, Z
 24c:	88 23       	and	r24, r24
 24e:	29 f0       	breq	.+10     	; 0x25a <lcd_puts+0x1a>
 250:	0e 94 0b 01 	call	0x216	; 0x216 <lcd_putc>
 254:	89 91       	ld	r24, Y+
 256:	81 11       	cpse	r24, r1
 258:	fb cf       	rjmp	.-10     	; 0x250 <lcd_puts+0x10>
 25a:	df 91       	pop	r29
 25c:	cf 91       	pop	r28
 25e:	08 95       	ret

00000260 <lcd_init>:
                   LCD_DISP_ON_CURSOR      display on, cursor on
                   LCD_DISP_CURSOR_BLINK   display on, cursor on flashing
Returns:  none
*************************************************************************/
void lcd_init(uint8_t dispAttr)
{
 260:	cf 93       	push	r28
 262:	c8 2f       	mov	r28, r24
      && ( &LCD_RS_PORT == &LCD_DATA0_PORT) && ( &LCD_RW_PORT == &LCD_DATA0_PORT) && (&LCD_E_PORT == &LCD_DATA0_PORT)
      && (LCD_DATA0_PIN == 0 ) && (LCD_DATA1_PIN == 1) && (LCD_DATA2_PIN == 2) && (LCD_DATA3_PIN == 3) 
      && (LCD_RS_PIN == 4 ) && (LCD_RW_PIN == 5) && (LCD_E_PIN == 6 ) )
    {
        /* configure all port bits as output (all LCD lines on same port) */
        DDR(LCD_DATA0_PORT) |= 0x7F;
 264:	9a b1       	in	r25, 0x0a	; 10
 266:	9f 67       	ori	r25, 0x7F	; 127
 268:	9a b9       	out	0x0a, r25	; 10
 26a:	8f e9       	ldi	r24, 0x9F	; 159
 26c:	9f e0       	ldi	r25, 0x0F	; 15
 26e:	01 97       	sbiw	r24, 0x01	; 1
 270:	f1 f7       	brne	.-4      	; 0x26e <lcd_init+0xe>
 272:	00 c0       	rjmp	.+0      	; 0x274 <lcd_init+0x14>
 274:	00 00       	nop
        DDR(LCD_DATA3_PORT) |= _BV(LCD_DATA3_PIN);
    }
    delay(LCD_DELAY_BOOTUP);             /* wait 16ms or more after power-on       */
    
    /* initial write to lcd is 8bit */
    LCD_DATA1_PORT |= _BV(LCD_DATA1_PIN);    // LCD_FUNCTION>>4;
 276:	59 9a       	sbi	0x0b, 1	; 11
    LCD_DATA0_PORT |= _BV(LCD_DATA0_PIN);    // LCD_FUNCTION_8BIT>>4;
 278:	58 9a       	sbi	0x0b, 0	; 11
    lcd_e_toggle();
 27a:	0e 94 ad 00 	call	0x15a	; 0x15a <toggle_e>
 27e:	81 ee       	ldi	r24, 0xE1	; 225
 280:	94 e0       	ldi	r25, 0x04	; 4
 282:	01 97       	sbiw	r24, 0x01	; 1
 284:	f1 f7       	brne	.-4      	; 0x282 <lcd_init+0x22>
 286:	00 c0       	rjmp	.+0      	; 0x288 <lcd_init+0x28>
 288:	00 00       	nop
    delay(LCD_DELAY_INIT);               /* delay, busy flag can't be checked here */
   
    /* repeat last command */ 
    lcd_e_toggle();      
 28a:	0e 94 ad 00 	call	0x15a	; 0x15a <toggle_e>
 28e:	95 e1       	ldi	r25, 0x15	; 21
 290:	9a 95       	dec	r25
 292:	f1 f7       	brne	.-4      	; 0x290 <lcd_init+0x30>
 294:	00 00       	nop
    delay(LCD_DELAY_INIT_REP);           /* delay, busy flag can't be checked here */
    
    /* repeat last command a third time */
    lcd_e_toggle();      
 296:	0e 94 ad 00 	call	0x15a	; 0x15a <toggle_e>
 29a:	85 e1       	ldi	r24, 0x15	; 21
 29c:	8a 95       	dec	r24
 29e:	f1 f7       	brne	.-4      	; 0x29c <lcd_init+0x3c>
 2a0:	00 00       	nop
    delay(LCD_DELAY_INIT_REP);           /* delay, busy flag can't be checked here */

    /* now configure for 4bit mode */
    LCD_DATA0_PORT &= ~_BV(LCD_DATA0_PIN);   // LCD_FUNCTION_4BIT_1LINE>>4
 2a2:	58 98       	cbi	0x0b, 0	; 11
    lcd_e_toggle();
 2a4:	0e 94 ad 00 	call	0x15a	; 0x15a <toggle_e>
 2a8:	95 e1       	ldi	r25, 0x15	; 21
 2aa:	9a 95       	dec	r25
 2ac:	f1 f7       	brne	.-4      	; 0x2aa <lcd_init+0x4a>
 2ae:	00 00       	nop
    /* Display with KS0073 controller requires special commands for enabling 4 line mode */
	lcd_command(KS0073_EXTENDED_FUNCTION_REGISTER_ON);
	lcd_command(KS0073_4LINES_MODE);
	lcd_command(KS0073_EXTENDED_FUNCTION_REGISTER_OFF);
#else
    lcd_command(LCD_FUNCTION_DEFAULT);      /* function set: display lines  */
 2b0:	88 e2       	ldi	r24, 0x28	; 40
 2b2:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <lcd_command>
#endif
    lcd_command(LCD_DISP_OFF);              /* display off                  */
 2b6:	88 e0       	ldi	r24, 0x08	; 8
 2b8:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <lcd_command>
    lcd_clrscr();                           /* display clear                */ 
 2bc:	0e 94 07 01 	call	0x20e	; 0x20e <lcd_clrscr>
    lcd_command(LCD_MODE_DEFAULT);          /* set entry mode               */
 2c0:	86 e0       	ldi	r24, 0x06	; 6
 2c2:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <lcd_command>
    lcd_command(dispAttr);                  /* display/cursor control       */
 2c6:	8c 2f       	mov	r24, r28
 2c8:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <lcd_command>

}/* lcd_init */
 2cc:	cf 91       	pop	r28
 2ce:	08 95       	ret

000002d0 <lcd_Write>:
  lcd_write takes in 4 values.  
  
 ***************************************
 */

 void lcd_Write( uint16_t adc_reading_lm35, uint16_t adc_reading_diode, uint8_t temperture_lm35, uint8_t temperture_diode ){  //Not Tested
 2d0:	cf 92       	push	r12
 2d2:	df 92       	push	r13
 2d4:	ef 92       	push	r14
 2d6:	ff 92       	push	r15
 2d8:	0f 93       	push	r16
 2da:	1f 93       	push	r17
 2dc:	cf 93       	push	r28
 2de:	df 93       	push	r29
 2e0:	cd b7       	in	r28, 0x3d	; 61
 2e2:	de b7       	in	r29, 0x3e	; 62
 2e4:	a2 97       	sbiw	r28, 0x22	; 34
 2e6:	0f b6       	in	r0, 0x3f	; 63
 2e8:	f8 94       	cli
 2ea:	de bf       	out	0x3e, r29	; 62
 2ec:	0f be       	out	0x3f, r0	; 63
 2ee:	cd bf       	out	0x3d, r28	; 61
 2f0:	f8 2e       	mov	r15, r24
 2f2:	e9 2e       	mov	r14, r25
 2f4:	16 2f       	mov	r17, r22
 2f6:	07 2f       	mov	r16, r23
 2f8:	c4 2e       	mov	r12, r20
 2fa:	d2 2e       	mov	r13, r18

	lcd_init( LCD_DISP_ON );   //Turn the LCD on, without cursor.
 2fc:	8c e0       	ldi	r24, 0x0C	; 12
 2fe:	0e 94 30 01 	call	0x260	; 0x260 <lcd_init>
	if ( (display_line1 == NULL) || (display_line2 == NULL) ){
		char * error = "error"; 
		lcd_puts(error);
	}
	
	sprintf(display_line1, "LM35 :%4.0d -%3.0dC", adc_reading_lm35, temperture_lm35);     //First line on the LCD
 302:	1f 92       	push	r1
 304:	cf 92       	push	r12
 306:	ef 92       	push	r14
 308:	ff 92       	push	r15
 30a:	80 e0       	ldi	r24, 0x00	; 0
 30c:	91 e0       	ldi	r25, 0x01	; 1
 30e:	9f 93       	push	r25
 310:	8f 93       	push	r24
 312:	ce 01       	movw	r24, r28
 314:	01 96       	adiw	r24, 0x01	; 1
 316:	7c 01       	movw	r14, r24
 318:	9f 93       	push	r25
 31a:	8f 93       	push	r24
 31c:	0e 94 72 03 	call	0x6e4	; 0x6e4 <sprintf>
	sprintf(display_line2, "DIODE:%4.0d -%3.0dC", adc_reading_diode, temperture_diode);   //Second line on the LCD
 320:	1f 92       	push	r1
 322:	df 92       	push	r13
 324:	0f 93       	push	r16
 326:	1f 93       	push	r17
 328:	84 e1       	ldi	r24, 0x14	; 20
 32a:	91 e0       	ldi	r25, 0x01	; 1
 32c:	9f 93       	push	r25
 32e:	8f 93       	push	r24
 330:	8e 01       	movw	r16, r28
 332:	0e 5e       	subi	r16, 0xEE	; 238
 334:	1f 4f       	sbci	r17, 0xFF	; 255
 336:	1f 93       	push	r17
 338:	0f 93       	push	r16
 33a:	0e 94 72 03 	call	0x6e4	; 0x6e4 <sprintf>

	lcd_gotoxy((uint8_t) 0x0, (uint8_t) 0x0);    //Move cursor to the first line
 33e:	60 e0       	ldi	r22, 0x00	; 0
 340:	80 e0       	ldi	r24, 0x00	; 0
 342:	0e 94 fd 00 	call	0x1fa	; 0x1fa <lcd_gotoxy>
	lcd_puts( display_line1 );               //display line 1
 346:	c7 01       	movw	r24, r14
 348:	0e 94 20 01 	call	0x240	; 0x240 <lcd_puts>
	lcd_gotoxy((uint8_t) 0x0, (uint8_t) 0x1);    //Move cursor to the second line
 34c:	61 e0       	ldi	r22, 0x01	; 1
 34e:	80 e0       	ldi	r24, 0x00	; 0
 350:	0e 94 fd 00 	call	0x1fa	; 0x1fa <lcd_gotoxy>
	lcd_puts( display_line2 );                //display line 2
 354:	c8 01       	movw	r24, r16
 356:	0e 94 20 01 	call	0x240	; 0x240 <lcd_puts>
 35a:	0f b6       	in	r0, 0x3f	; 63
 35c:	f8 94       	cli
 35e:	de bf       	out	0x3e, r29	; 62
 360:	0f be       	out	0x3f, r0	; 63
 362:	cd bf       	out	0x3d, r28	; 61
	
 }
 364:	a2 96       	adiw	r28, 0x22	; 34
 366:	0f b6       	in	r0, 0x3f	; 63
 368:	f8 94       	cli
 36a:	de bf       	out	0x3e, r29	; 62
 36c:	0f be       	out	0x3f, r0	; 63
 36e:	cd bf       	out	0x3d, r28	; 61
 370:	df 91       	pop	r29
 372:	cf 91       	pop	r28
 374:	1f 91       	pop	r17
 376:	0f 91       	pop	r16
 378:	ff 90       	pop	r15
 37a:	ef 90       	pop	r14
 37c:	df 90       	pop	r13
 37e:	cf 90       	pop	r12
 380:	08 95       	ret

00000382 <main>:



int main(void)
{
	CLKPR = 0b10000000; //Enable clock prescaler change
 382:	e1 e6       	ldi	r30, 0x61	; 97
 384:	f0 e0       	ldi	r31, 0x00	; 0
 386:	80 e8       	ldi	r24, 0x80	; 128
 388:	80 83       	st	Z, r24
	CLKPR |= 0x0; // Div 1 prescaller == 8MHz
 38a:	80 81       	ld	r24, Z
 38c:	80 83       	st	Z, r24
	uint16_t adc_reading_lm35 = 0x0;
	uint16_t adc_reading_diode = 0x0;
	uint8_t temperture_lm35 = 69;
	uint8_t temperture_diode = 0x0;

	adc_reading_lm35 = ADCRead(LM35_pin);  //Reads ADC, the input is the pin number of the ADC
 38e:	80 e0       	ldi	r24, 0x00	; 0
 390:	0e 94 4b 00 	call	0x96	; 0x96 <ADCRead>
 394:	ec 01       	movw	r28, r24
	adc_reading_diode = ADCRead(Diode_pin);
 396:	81 e0       	ldi	r24, 0x01	; 1
 398:	0e 94 4b 00 	call	0x96	; 0x96 <ADCRead>

	lcd_Write(adc_reading_lm35, adc_reading_diode, temperture_lm35, temperture_diode);
 39c:	20 e0       	ldi	r18, 0x00	; 0
 39e:	45 e4       	ldi	r20, 0x45	; 69
 3a0:	bc 01       	movw	r22, r24
 3a2:	ce 01       	movw	r24, r28
 3a4:	0e 94 68 01 	call	0x2d0	; 0x2d0 <lcd_Write>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 3a8:	8f e1       	ldi	r24, 0x1F	; 31
 3aa:	9e e4       	ldi	r25, 0x4E	; 78
 3ac:	01 97       	sbiw	r24, 0x01	; 1
 3ae:	f1 f7       	brne	.-4      	; 0x3ac <main+0x2a>
 3b0:	00 c0       	rjmp	.+0      	; 0x3b2 <main+0x30>
 3b2:	00 00       	nop
 3b4:	ec cf       	rjmp	.-40     	; 0x38e <main+0xc>

000003b6 <__subsf3>:
 3b6:	50 58       	subi	r21, 0x80	; 128

000003b8 <__addsf3>:
 3b8:	bb 27       	eor	r27, r27
 3ba:	aa 27       	eor	r26, r26
 3bc:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <__addsf3x>
 3c0:	0c 94 cb 02 	jmp	0x596	; 0x596 <__fp_round>
 3c4:	0e 94 bd 02 	call	0x57a	; 0x57a <__fp_pscA>
 3c8:	38 f0       	brcs	.+14     	; 0x3d8 <__addsf3+0x20>
 3ca:	0e 94 c4 02 	call	0x588	; 0x588 <__fp_pscB>
 3ce:	20 f0       	brcs	.+8      	; 0x3d8 <__addsf3+0x20>
 3d0:	39 f4       	brne	.+14     	; 0x3e0 <__addsf3+0x28>
 3d2:	9f 3f       	cpi	r25, 0xFF	; 255
 3d4:	19 f4       	brne	.+6      	; 0x3dc <__addsf3+0x24>
 3d6:	26 f4       	brtc	.+8      	; 0x3e0 <__addsf3+0x28>
 3d8:	0c 94 ba 02 	jmp	0x574	; 0x574 <__fp_nan>
 3dc:	0e f4       	brtc	.+2      	; 0x3e0 <__addsf3+0x28>
 3de:	e0 95       	com	r30
 3e0:	e7 fb       	bst	r30, 7
 3e2:	0c 94 b4 02 	jmp	0x568	; 0x568 <__fp_inf>

000003e6 <__addsf3x>:
 3e6:	e9 2f       	mov	r30, r25
 3e8:	0e 94 dc 02 	call	0x5b8	; 0x5b8 <__fp_split3>
 3ec:	58 f3       	brcs	.-42     	; 0x3c4 <__addsf3+0xc>
 3ee:	ba 17       	cp	r27, r26
 3f0:	62 07       	cpc	r22, r18
 3f2:	73 07       	cpc	r23, r19
 3f4:	84 07       	cpc	r24, r20
 3f6:	95 07       	cpc	r25, r21
 3f8:	20 f0       	brcs	.+8      	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 3fa:	79 f4       	brne	.+30     	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 3fc:	a6 f5       	brtc	.+104    	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
 3fe:	0c 94 fe 02 	jmp	0x5fc	; 0x5fc <__fp_zero>
 402:	0e f4       	brtc	.+2      	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 404:	e0 95       	com	r30
 406:	0b 2e       	mov	r0, r27
 408:	ba 2f       	mov	r27, r26
 40a:	a0 2d       	mov	r26, r0
 40c:	0b 01       	movw	r0, r22
 40e:	b9 01       	movw	r22, r18
 410:	90 01       	movw	r18, r0
 412:	0c 01       	movw	r0, r24
 414:	ca 01       	movw	r24, r20
 416:	a0 01       	movw	r20, r0
 418:	11 24       	eor	r1, r1
 41a:	ff 27       	eor	r31, r31
 41c:	59 1b       	sub	r21, r25
 41e:	99 f0       	breq	.+38     	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 420:	59 3f       	cpi	r21, 0xF9	; 249
 422:	50 f4       	brcc	.+20     	; 0x438 <__LOCK_REGION_LENGTH__+0x38>
 424:	50 3e       	cpi	r21, 0xE0	; 224
 426:	68 f1       	brcs	.+90     	; 0x482 <__LOCK_REGION_LENGTH__+0x82>
 428:	1a 16       	cp	r1, r26
 42a:	f0 40       	sbci	r31, 0x00	; 0
 42c:	a2 2f       	mov	r26, r18
 42e:	23 2f       	mov	r18, r19
 430:	34 2f       	mov	r19, r20
 432:	44 27       	eor	r20, r20
 434:	58 5f       	subi	r21, 0xF8	; 248
 436:	f3 cf       	rjmp	.-26     	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 438:	46 95       	lsr	r20
 43a:	37 95       	ror	r19
 43c:	27 95       	ror	r18
 43e:	a7 95       	ror	r26
 440:	f0 40       	sbci	r31, 0x00	; 0
 442:	53 95       	inc	r21
 444:	c9 f7       	brne	.-14     	; 0x438 <__LOCK_REGION_LENGTH__+0x38>
 446:	7e f4       	brtc	.+30     	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
 448:	1f 16       	cp	r1, r31
 44a:	ba 0b       	sbc	r27, r26
 44c:	62 0b       	sbc	r22, r18
 44e:	73 0b       	sbc	r23, r19
 450:	84 0b       	sbc	r24, r20
 452:	ba f0       	brmi	.+46     	; 0x482 <__LOCK_REGION_LENGTH__+0x82>
 454:	91 50       	subi	r25, 0x01	; 1
 456:	a1 f0       	breq	.+40     	; 0x480 <__LOCK_REGION_LENGTH__+0x80>
 458:	ff 0f       	add	r31, r31
 45a:	bb 1f       	adc	r27, r27
 45c:	66 1f       	adc	r22, r22
 45e:	77 1f       	adc	r23, r23
 460:	88 1f       	adc	r24, r24
 462:	c2 f7       	brpl	.-16     	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
 464:	0e c0       	rjmp	.+28     	; 0x482 <__LOCK_REGION_LENGTH__+0x82>
 466:	ba 0f       	add	r27, r26
 468:	62 1f       	adc	r22, r18
 46a:	73 1f       	adc	r23, r19
 46c:	84 1f       	adc	r24, r20
 46e:	48 f4       	brcc	.+18     	; 0x482 <__LOCK_REGION_LENGTH__+0x82>
 470:	87 95       	ror	r24
 472:	77 95       	ror	r23
 474:	67 95       	ror	r22
 476:	b7 95       	ror	r27
 478:	f7 95       	ror	r31
 47a:	9e 3f       	cpi	r25, 0xFE	; 254
 47c:	08 f0       	brcs	.+2      	; 0x480 <__LOCK_REGION_LENGTH__+0x80>
 47e:	b0 cf       	rjmp	.-160    	; 0x3e0 <__addsf3+0x28>
 480:	93 95       	inc	r25
 482:	88 0f       	add	r24, r24
 484:	08 f0       	brcs	.+2      	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
 486:	99 27       	eor	r25, r25
 488:	ee 0f       	add	r30, r30
 48a:	97 95       	ror	r25
 48c:	87 95       	ror	r24
 48e:	08 95       	ret

00000490 <__fixunssfsi>:
 490:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <__fp_splitA>
 494:	88 f0       	brcs	.+34     	; 0x4b8 <__fixunssfsi+0x28>
 496:	9f 57       	subi	r25, 0x7F	; 127
 498:	98 f0       	brcs	.+38     	; 0x4c0 <__fixunssfsi+0x30>
 49a:	b9 2f       	mov	r27, r25
 49c:	99 27       	eor	r25, r25
 49e:	b7 51       	subi	r27, 0x17	; 23
 4a0:	b0 f0       	brcs	.+44     	; 0x4ce <__fixunssfsi+0x3e>
 4a2:	e1 f0       	breq	.+56     	; 0x4dc <__fixunssfsi+0x4c>
 4a4:	66 0f       	add	r22, r22
 4a6:	77 1f       	adc	r23, r23
 4a8:	88 1f       	adc	r24, r24
 4aa:	99 1f       	adc	r25, r25
 4ac:	1a f0       	brmi	.+6      	; 0x4b4 <__fixunssfsi+0x24>
 4ae:	ba 95       	dec	r27
 4b0:	c9 f7       	brne	.-14     	; 0x4a4 <__fixunssfsi+0x14>
 4b2:	14 c0       	rjmp	.+40     	; 0x4dc <__fixunssfsi+0x4c>
 4b4:	b1 30       	cpi	r27, 0x01	; 1
 4b6:	91 f0       	breq	.+36     	; 0x4dc <__fixunssfsi+0x4c>
 4b8:	0e 94 fe 02 	call	0x5fc	; 0x5fc <__fp_zero>
 4bc:	b1 e0       	ldi	r27, 0x01	; 1
 4be:	08 95       	ret
 4c0:	0c 94 fe 02 	jmp	0x5fc	; 0x5fc <__fp_zero>
 4c4:	67 2f       	mov	r22, r23
 4c6:	78 2f       	mov	r23, r24
 4c8:	88 27       	eor	r24, r24
 4ca:	b8 5f       	subi	r27, 0xF8	; 248
 4cc:	39 f0       	breq	.+14     	; 0x4dc <__fixunssfsi+0x4c>
 4ce:	b9 3f       	cpi	r27, 0xF9	; 249
 4d0:	cc f3       	brlt	.-14     	; 0x4c4 <__fixunssfsi+0x34>
 4d2:	86 95       	lsr	r24
 4d4:	77 95       	ror	r23
 4d6:	67 95       	ror	r22
 4d8:	b3 95       	inc	r27
 4da:	d9 f7       	brne	.-10     	; 0x4d2 <__fixunssfsi+0x42>
 4dc:	3e f4       	brtc	.+14     	; 0x4ec <__fixunssfsi+0x5c>
 4de:	90 95       	com	r25
 4e0:	80 95       	com	r24
 4e2:	70 95       	com	r23
 4e4:	61 95       	neg	r22
 4e6:	7f 4f       	sbci	r23, 0xFF	; 255
 4e8:	8f 4f       	sbci	r24, 0xFF	; 255
 4ea:	9f 4f       	sbci	r25, 0xFF	; 255
 4ec:	08 95       	ret

000004ee <__floatunsisf>:
 4ee:	e8 94       	clt
 4f0:	09 c0       	rjmp	.+18     	; 0x504 <__floatsisf+0x12>

000004f2 <__floatsisf>:
 4f2:	97 fb       	bst	r25, 7
 4f4:	3e f4       	brtc	.+14     	; 0x504 <__floatsisf+0x12>
 4f6:	90 95       	com	r25
 4f8:	80 95       	com	r24
 4fa:	70 95       	com	r23
 4fc:	61 95       	neg	r22
 4fe:	7f 4f       	sbci	r23, 0xFF	; 255
 500:	8f 4f       	sbci	r24, 0xFF	; 255
 502:	9f 4f       	sbci	r25, 0xFF	; 255
 504:	99 23       	and	r25, r25
 506:	a9 f0       	breq	.+42     	; 0x532 <__floatsisf+0x40>
 508:	f9 2f       	mov	r31, r25
 50a:	96 e9       	ldi	r25, 0x96	; 150
 50c:	bb 27       	eor	r27, r27
 50e:	93 95       	inc	r25
 510:	f6 95       	lsr	r31
 512:	87 95       	ror	r24
 514:	77 95       	ror	r23
 516:	67 95       	ror	r22
 518:	b7 95       	ror	r27
 51a:	f1 11       	cpse	r31, r1
 51c:	f8 cf       	rjmp	.-16     	; 0x50e <__floatsisf+0x1c>
 51e:	fa f4       	brpl	.+62     	; 0x55e <__floatsisf+0x6c>
 520:	bb 0f       	add	r27, r27
 522:	11 f4       	brne	.+4      	; 0x528 <__floatsisf+0x36>
 524:	60 ff       	sbrs	r22, 0
 526:	1b c0       	rjmp	.+54     	; 0x55e <__floatsisf+0x6c>
 528:	6f 5f       	subi	r22, 0xFF	; 255
 52a:	7f 4f       	sbci	r23, 0xFF	; 255
 52c:	8f 4f       	sbci	r24, 0xFF	; 255
 52e:	9f 4f       	sbci	r25, 0xFF	; 255
 530:	16 c0       	rjmp	.+44     	; 0x55e <__floatsisf+0x6c>
 532:	88 23       	and	r24, r24
 534:	11 f0       	breq	.+4      	; 0x53a <__floatsisf+0x48>
 536:	96 e9       	ldi	r25, 0x96	; 150
 538:	11 c0       	rjmp	.+34     	; 0x55c <__floatsisf+0x6a>
 53a:	77 23       	and	r23, r23
 53c:	21 f0       	breq	.+8      	; 0x546 <__floatsisf+0x54>
 53e:	9e e8       	ldi	r25, 0x8E	; 142
 540:	87 2f       	mov	r24, r23
 542:	76 2f       	mov	r23, r22
 544:	05 c0       	rjmp	.+10     	; 0x550 <__floatsisf+0x5e>
 546:	66 23       	and	r22, r22
 548:	71 f0       	breq	.+28     	; 0x566 <__floatsisf+0x74>
 54a:	96 e8       	ldi	r25, 0x86	; 134
 54c:	86 2f       	mov	r24, r22
 54e:	70 e0       	ldi	r23, 0x00	; 0
 550:	60 e0       	ldi	r22, 0x00	; 0
 552:	2a f0       	brmi	.+10     	; 0x55e <__floatsisf+0x6c>
 554:	9a 95       	dec	r25
 556:	66 0f       	add	r22, r22
 558:	77 1f       	adc	r23, r23
 55a:	88 1f       	adc	r24, r24
 55c:	da f7       	brpl	.-10     	; 0x554 <__floatsisf+0x62>
 55e:	88 0f       	add	r24, r24
 560:	96 95       	lsr	r25
 562:	87 95       	ror	r24
 564:	97 f9       	bld	r25, 7
 566:	08 95       	ret

00000568 <__fp_inf>:
 568:	97 f9       	bld	r25, 7
 56a:	9f 67       	ori	r25, 0x7F	; 127
 56c:	80 e8       	ldi	r24, 0x80	; 128
 56e:	70 e0       	ldi	r23, 0x00	; 0
 570:	60 e0       	ldi	r22, 0x00	; 0
 572:	08 95       	ret

00000574 <__fp_nan>:
 574:	9f ef       	ldi	r25, 0xFF	; 255
 576:	80 ec       	ldi	r24, 0xC0	; 192
 578:	08 95       	ret

0000057a <__fp_pscA>:
 57a:	00 24       	eor	r0, r0
 57c:	0a 94       	dec	r0
 57e:	16 16       	cp	r1, r22
 580:	17 06       	cpc	r1, r23
 582:	18 06       	cpc	r1, r24
 584:	09 06       	cpc	r0, r25
 586:	08 95       	ret

00000588 <__fp_pscB>:
 588:	00 24       	eor	r0, r0
 58a:	0a 94       	dec	r0
 58c:	12 16       	cp	r1, r18
 58e:	13 06       	cpc	r1, r19
 590:	14 06       	cpc	r1, r20
 592:	05 06       	cpc	r0, r21
 594:	08 95       	ret

00000596 <__fp_round>:
 596:	09 2e       	mov	r0, r25
 598:	03 94       	inc	r0
 59a:	00 0c       	add	r0, r0
 59c:	11 f4       	brne	.+4      	; 0x5a2 <__fp_round+0xc>
 59e:	88 23       	and	r24, r24
 5a0:	52 f0       	brmi	.+20     	; 0x5b6 <__fp_round+0x20>
 5a2:	bb 0f       	add	r27, r27
 5a4:	40 f4       	brcc	.+16     	; 0x5b6 <__fp_round+0x20>
 5a6:	bf 2b       	or	r27, r31
 5a8:	11 f4       	brne	.+4      	; 0x5ae <__fp_round+0x18>
 5aa:	60 ff       	sbrs	r22, 0
 5ac:	04 c0       	rjmp	.+8      	; 0x5b6 <__fp_round+0x20>
 5ae:	6f 5f       	subi	r22, 0xFF	; 255
 5b0:	7f 4f       	sbci	r23, 0xFF	; 255
 5b2:	8f 4f       	sbci	r24, 0xFF	; 255
 5b4:	9f 4f       	sbci	r25, 0xFF	; 255
 5b6:	08 95       	ret

000005b8 <__fp_split3>:
 5b8:	57 fd       	sbrc	r21, 7
 5ba:	90 58       	subi	r25, 0x80	; 128
 5bc:	44 0f       	add	r20, r20
 5be:	55 1f       	adc	r21, r21
 5c0:	59 f0       	breq	.+22     	; 0x5d8 <__fp_splitA+0x10>
 5c2:	5f 3f       	cpi	r21, 0xFF	; 255
 5c4:	71 f0       	breq	.+28     	; 0x5e2 <__fp_splitA+0x1a>
 5c6:	47 95       	ror	r20

000005c8 <__fp_splitA>:
 5c8:	88 0f       	add	r24, r24
 5ca:	97 fb       	bst	r25, 7
 5cc:	99 1f       	adc	r25, r25
 5ce:	61 f0       	breq	.+24     	; 0x5e8 <__fp_splitA+0x20>
 5d0:	9f 3f       	cpi	r25, 0xFF	; 255
 5d2:	79 f0       	breq	.+30     	; 0x5f2 <__fp_splitA+0x2a>
 5d4:	87 95       	ror	r24
 5d6:	08 95       	ret
 5d8:	12 16       	cp	r1, r18
 5da:	13 06       	cpc	r1, r19
 5dc:	14 06       	cpc	r1, r20
 5de:	55 1f       	adc	r21, r21
 5e0:	f2 cf       	rjmp	.-28     	; 0x5c6 <__fp_split3+0xe>
 5e2:	46 95       	lsr	r20
 5e4:	f1 df       	rcall	.-30     	; 0x5c8 <__fp_splitA>
 5e6:	08 c0       	rjmp	.+16     	; 0x5f8 <__fp_splitA+0x30>
 5e8:	16 16       	cp	r1, r22
 5ea:	17 06       	cpc	r1, r23
 5ec:	18 06       	cpc	r1, r24
 5ee:	99 1f       	adc	r25, r25
 5f0:	f1 cf       	rjmp	.-30     	; 0x5d4 <__fp_splitA+0xc>
 5f2:	86 95       	lsr	r24
 5f4:	71 05       	cpc	r23, r1
 5f6:	61 05       	cpc	r22, r1
 5f8:	08 94       	sec
 5fa:	08 95       	ret

000005fc <__fp_zero>:
 5fc:	e8 94       	clt

000005fe <__fp_szero>:
 5fe:	bb 27       	eor	r27, r27
 600:	66 27       	eor	r22, r22
 602:	77 27       	eor	r23, r23
 604:	cb 01       	movw	r24, r22
 606:	97 f9       	bld	r25, 7
 608:	08 95       	ret

0000060a <__mulsf3>:
 60a:	0e 94 18 03 	call	0x630	; 0x630 <__mulsf3x>
 60e:	0c 94 cb 02 	jmp	0x596	; 0x596 <__fp_round>
 612:	0e 94 bd 02 	call	0x57a	; 0x57a <__fp_pscA>
 616:	38 f0       	brcs	.+14     	; 0x626 <__mulsf3+0x1c>
 618:	0e 94 c4 02 	call	0x588	; 0x588 <__fp_pscB>
 61c:	20 f0       	brcs	.+8      	; 0x626 <__mulsf3+0x1c>
 61e:	95 23       	and	r25, r21
 620:	11 f0       	breq	.+4      	; 0x626 <__mulsf3+0x1c>
 622:	0c 94 b4 02 	jmp	0x568	; 0x568 <__fp_inf>
 626:	0c 94 ba 02 	jmp	0x574	; 0x574 <__fp_nan>
 62a:	11 24       	eor	r1, r1
 62c:	0c 94 ff 02 	jmp	0x5fe	; 0x5fe <__fp_szero>

00000630 <__mulsf3x>:
 630:	0e 94 dc 02 	call	0x5b8	; 0x5b8 <__fp_split3>
 634:	70 f3       	brcs	.-36     	; 0x612 <__mulsf3+0x8>

00000636 <__mulsf3_pse>:
 636:	95 9f       	mul	r25, r21
 638:	c1 f3       	breq	.-16     	; 0x62a <__mulsf3+0x20>
 63a:	95 0f       	add	r25, r21
 63c:	50 e0       	ldi	r21, 0x00	; 0
 63e:	55 1f       	adc	r21, r21
 640:	62 9f       	mul	r22, r18
 642:	f0 01       	movw	r30, r0
 644:	72 9f       	mul	r23, r18
 646:	bb 27       	eor	r27, r27
 648:	f0 0d       	add	r31, r0
 64a:	b1 1d       	adc	r27, r1
 64c:	63 9f       	mul	r22, r19
 64e:	aa 27       	eor	r26, r26
 650:	f0 0d       	add	r31, r0
 652:	b1 1d       	adc	r27, r1
 654:	aa 1f       	adc	r26, r26
 656:	64 9f       	mul	r22, r20
 658:	66 27       	eor	r22, r22
 65a:	b0 0d       	add	r27, r0
 65c:	a1 1d       	adc	r26, r1
 65e:	66 1f       	adc	r22, r22
 660:	82 9f       	mul	r24, r18
 662:	22 27       	eor	r18, r18
 664:	b0 0d       	add	r27, r0
 666:	a1 1d       	adc	r26, r1
 668:	62 1f       	adc	r22, r18
 66a:	73 9f       	mul	r23, r19
 66c:	b0 0d       	add	r27, r0
 66e:	a1 1d       	adc	r26, r1
 670:	62 1f       	adc	r22, r18
 672:	83 9f       	mul	r24, r19
 674:	a0 0d       	add	r26, r0
 676:	61 1d       	adc	r22, r1
 678:	22 1f       	adc	r18, r18
 67a:	74 9f       	mul	r23, r20
 67c:	33 27       	eor	r19, r19
 67e:	a0 0d       	add	r26, r0
 680:	61 1d       	adc	r22, r1
 682:	23 1f       	adc	r18, r19
 684:	84 9f       	mul	r24, r20
 686:	60 0d       	add	r22, r0
 688:	21 1d       	adc	r18, r1
 68a:	82 2f       	mov	r24, r18
 68c:	76 2f       	mov	r23, r22
 68e:	6a 2f       	mov	r22, r26
 690:	11 24       	eor	r1, r1
 692:	9f 57       	subi	r25, 0x7F	; 127
 694:	50 40       	sbci	r21, 0x00	; 0
 696:	9a f0       	brmi	.+38     	; 0x6be <__mulsf3_pse+0x88>
 698:	f1 f0       	breq	.+60     	; 0x6d6 <__mulsf3_pse+0xa0>
 69a:	88 23       	and	r24, r24
 69c:	4a f0       	brmi	.+18     	; 0x6b0 <__mulsf3_pse+0x7a>
 69e:	ee 0f       	add	r30, r30
 6a0:	ff 1f       	adc	r31, r31
 6a2:	bb 1f       	adc	r27, r27
 6a4:	66 1f       	adc	r22, r22
 6a6:	77 1f       	adc	r23, r23
 6a8:	88 1f       	adc	r24, r24
 6aa:	91 50       	subi	r25, 0x01	; 1
 6ac:	50 40       	sbci	r21, 0x00	; 0
 6ae:	a9 f7       	brne	.-22     	; 0x69a <__mulsf3_pse+0x64>
 6b0:	9e 3f       	cpi	r25, 0xFE	; 254
 6b2:	51 05       	cpc	r21, r1
 6b4:	80 f0       	brcs	.+32     	; 0x6d6 <__mulsf3_pse+0xa0>
 6b6:	0c 94 b4 02 	jmp	0x568	; 0x568 <__fp_inf>
 6ba:	0c 94 ff 02 	jmp	0x5fe	; 0x5fe <__fp_szero>
 6be:	5f 3f       	cpi	r21, 0xFF	; 255
 6c0:	e4 f3       	brlt	.-8      	; 0x6ba <__mulsf3_pse+0x84>
 6c2:	98 3e       	cpi	r25, 0xE8	; 232
 6c4:	d4 f3       	brlt	.-12     	; 0x6ba <__mulsf3_pse+0x84>
 6c6:	86 95       	lsr	r24
 6c8:	77 95       	ror	r23
 6ca:	67 95       	ror	r22
 6cc:	b7 95       	ror	r27
 6ce:	f7 95       	ror	r31
 6d0:	e7 95       	ror	r30
 6d2:	9f 5f       	subi	r25, 0xFF	; 255
 6d4:	c1 f7       	brne	.-16     	; 0x6c6 <__mulsf3_pse+0x90>
 6d6:	fe 2b       	or	r31, r30
 6d8:	88 0f       	add	r24, r24
 6da:	91 1d       	adc	r25, r1
 6dc:	96 95       	lsr	r25
 6de:	87 95       	ror	r24
 6e0:	97 f9       	bld	r25, 7
 6e2:	08 95       	ret

000006e4 <sprintf>:
 6e4:	ae e0       	ldi	r26, 0x0E	; 14
 6e6:	b0 e0       	ldi	r27, 0x00	; 0
 6e8:	e8 e7       	ldi	r30, 0x78	; 120
 6ea:	f3 e0       	ldi	r31, 0x03	; 3
 6ec:	0c 94 21 06 	jmp	0xc42	; 0xc42 <__prologue_saves__+0x1c>
 6f0:	0d 89       	ldd	r16, Y+21	; 0x15
 6f2:	1e 89       	ldd	r17, Y+22	; 0x16
 6f4:	86 e0       	ldi	r24, 0x06	; 6
 6f6:	8c 83       	std	Y+4, r24	; 0x04
 6f8:	1a 83       	std	Y+2, r17	; 0x02
 6fa:	09 83       	std	Y+1, r16	; 0x01
 6fc:	8f ef       	ldi	r24, 0xFF	; 255
 6fe:	9f e7       	ldi	r25, 0x7F	; 127
 700:	9e 83       	std	Y+6, r25	; 0x06
 702:	8d 83       	std	Y+5, r24	; 0x05
 704:	ae 01       	movw	r20, r28
 706:	47 5e       	subi	r20, 0xE7	; 231
 708:	5f 4f       	sbci	r21, 0xFF	; 255
 70a:	6f 89       	ldd	r22, Y+23	; 0x17
 70c:	78 8d       	ldd	r23, Y+24	; 0x18
 70e:	ce 01       	movw	r24, r28
 710:	01 96       	adiw	r24, 0x01	; 1
 712:	0e 94 95 03 	call	0x72a	; 0x72a <vfprintf>
 716:	2f 81       	ldd	r18, Y+7	; 0x07
 718:	38 85       	ldd	r19, Y+8	; 0x08
 71a:	f8 01       	movw	r30, r16
 71c:	e2 0f       	add	r30, r18
 71e:	f3 1f       	adc	r31, r19
 720:	10 82       	st	Z, r1
 722:	2e 96       	adiw	r28, 0x0e	; 14
 724:	e4 e0       	ldi	r30, 0x04	; 4
 726:	0c 94 3d 06 	jmp	0xc7a	; 0xc7a <__epilogue_restores__+0x1c>

0000072a <vfprintf>:
 72a:	ac e0       	ldi	r26, 0x0C	; 12
 72c:	b0 e0       	ldi	r27, 0x00	; 0
 72e:	eb e9       	ldi	r30, 0x9B	; 155
 730:	f3 e0       	ldi	r31, 0x03	; 3
 732:	0c 94 13 06 	jmp	0xc26	; 0xc26 <__prologue_saves__>
 736:	7c 01       	movw	r14, r24
 738:	6b 01       	movw	r12, r22
 73a:	8a 01       	movw	r16, r20
 73c:	fc 01       	movw	r30, r24
 73e:	17 82       	std	Z+7, r1	; 0x07
 740:	16 82       	std	Z+6, r1	; 0x06
 742:	83 81       	ldd	r24, Z+3	; 0x03
 744:	81 ff       	sbrs	r24, 1
 746:	bd c1       	rjmp	.+890    	; 0xac2 <__stack+0x1c3>
 748:	ce 01       	movw	r24, r28
 74a:	01 96       	adiw	r24, 0x01	; 1
 74c:	4c 01       	movw	r8, r24
 74e:	f7 01       	movw	r30, r14
 750:	93 81       	ldd	r25, Z+3	; 0x03
 752:	f6 01       	movw	r30, r12
 754:	93 fd       	sbrc	r25, 3
 756:	85 91       	lpm	r24, Z+
 758:	93 ff       	sbrs	r25, 3
 75a:	81 91       	ld	r24, Z+
 75c:	6f 01       	movw	r12, r30
 75e:	88 23       	and	r24, r24
 760:	09 f4       	brne	.+2      	; 0x764 <vfprintf+0x3a>
 762:	ab c1       	rjmp	.+854    	; 0xaba <__stack+0x1bb>
 764:	85 32       	cpi	r24, 0x25	; 37
 766:	39 f4       	brne	.+14     	; 0x776 <vfprintf+0x4c>
 768:	93 fd       	sbrc	r25, 3
 76a:	85 91       	lpm	r24, Z+
 76c:	93 ff       	sbrs	r25, 3
 76e:	81 91       	ld	r24, Z+
 770:	6f 01       	movw	r12, r30
 772:	85 32       	cpi	r24, 0x25	; 37
 774:	29 f4       	brne	.+10     	; 0x780 <vfprintf+0x56>
 776:	b7 01       	movw	r22, r14
 778:	90 e0       	ldi	r25, 0x00	; 0
 77a:	0e 94 7d 05 	call	0xafa	; 0xafa <fputc>
 77e:	e7 cf       	rjmp	.-50     	; 0x74e <vfprintf+0x24>
 780:	51 2c       	mov	r5, r1
 782:	31 2c       	mov	r3, r1
 784:	20 e0       	ldi	r18, 0x00	; 0
 786:	20 32       	cpi	r18, 0x20	; 32
 788:	a0 f4       	brcc	.+40     	; 0x7b2 <vfprintf+0x88>
 78a:	8b 32       	cpi	r24, 0x2B	; 43
 78c:	69 f0       	breq	.+26     	; 0x7a8 <vfprintf+0x7e>
 78e:	30 f4       	brcc	.+12     	; 0x79c <vfprintf+0x72>
 790:	80 32       	cpi	r24, 0x20	; 32
 792:	59 f0       	breq	.+22     	; 0x7aa <vfprintf+0x80>
 794:	83 32       	cpi	r24, 0x23	; 35
 796:	69 f4       	brne	.+26     	; 0x7b2 <vfprintf+0x88>
 798:	20 61       	ori	r18, 0x10	; 16
 79a:	2c c0       	rjmp	.+88     	; 0x7f4 <vfprintf+0xca>
 79c:	8d 32       	cpi	r24, 0x2D	; 45
 79e:	39 f0       	breq	.+14     	; 0x7ae <vfprintf+0x84>
 7a0:	80 33       	cpi	r24, 0x30	; 48
 7a2:	39 f4       	brne	.+14     	; 0x7b2 <vfprintf+0x88>
 7a4:	21 60       	ori	r18, 0x01	; 1
 7a6:	26 c0       	rjmp	.+76     	; 0x7f4 <vfprintf+0xca>
 7a8:	22 60       	ori	r18, 0x02	; 2
 7aa:	24 60       	ori	r18, 0x04	; 4
 7ac:	23 c0       	rjmp	.+70     	; 0x7f4 <vfprintf+0xca>
 7ae:	28 60       	ori	r18, 0x08	; 8
 7b0:	21 c0       	rjmp	.+66     	; 0x7f4 <vfprintf+0xca>
 7b2:	27 fd       	sbrc	r18, 7
 7b4:	27 c0       	rjmp	.+78     	; 0x804 <vfprintf+0xda>
 7b6:	30 ed       	ldi	r19, 0xD0	; 208
 7b8:	38 0f       	add	r19, r24
 7ba:	3a 30       	cpi	r19, 0x0A	; 10
 7bc:	78 f4       	brcc	.+30     	; 0x7dc <vfprintf+0xb2>
 7be:	26 ff       	sbrs	r18, 6
 7c0:	06 c0       	rjmp	.+12     	; 0x7ce <vfprintf+0xa4>
 7c2:	fa e0       	ldi	r31, 0x0A	; 10
 7c4:	5f 9e       	mul	r5, r31
 7c6:	30 0d       	add	r19, r0
 7c8:	11 24       	eor	r1, r1
 7ca:	53 2e       	mov	r5, r19
 7cc:	13 c0       	rjmp	.+38     	; 0x7f4 <vfprintf+0xca>
 7ce:	8a e0       	ldi	r24, 0x0A	; 10
 7d0:	38 9e       	mul	r3, r24
 7d2:	30 0d       	add	r19, r0
 7d4:	11 24       	eor	r1, r1
 7d6:	33 2e       	mov	r3, r19
 7d8:	20 62       	ori	r18, 0x20	; 32
 7da:	0c c0       	rjmp	.+24     	; 0x7f4 <vfprintf+0xca>
 7dc:	8e 32       	cpi	r24, 0x2E	; 46
 7de:	21 f4       	brne	.+8      	; 0x7e8 <vfprintf+0xbe>
 7e0:	26 fd       	sbrc	r18, 6
 7e2:	6b c1       	rjmp	.+726    	; 0xaba <__stack+0x1bb>
 7e4:	20 64       	ori	r18, 0x40	; 64
 7e6:	06 c0       	rjmp	.+12     	; 0x7f4 <vfprintf+0xca>
 7e8:	8c 36       	cpi	r24, 0x6C	; 108
 7ea:	11 f4       	brne	.+4      	; 0x7f0 <vfprintf+0xc6>
 7ec:	20 68       	ori	r18, 0x80	; 128
 7ee:	02 c0       	rjmp	.+4      	; 0x7f4 <vfprintf+0xca>
 7f0:	88 36       	cpi	r24, 0x68	; 104
 7f2:	41 f4       	brne	.+16     	; 0x804 <vfprintf+0xda>
 7f4:	f6 01       	movw	r30, r12
 7f6:	93 fd       	sbrc	r25, 3
 7f8:	85 91       	lpm	r24, Z+
 7fa:	93 ff       	sbrs	r25, 3
 7fc:	81 91       	ld	r24, Z+
 7fe:	6f 01       	movw	r12, r30
 800:	81 11       	cpse	r24, r1
 802:	c1 cf       	rjmp	.-126    	; 0x786 <vfprintf+0x5c>
 804:	98 2f       	mov	r25, r24
 806:	9f 7d       	andi	r25, 0xDF	; 223
 808:	95 54       	subi	r25, 0x45	; 69
 80a:	93 30       	cpi	r25, 0x03	; 3
 80c:	28 f4       	brcc	.+10     	; 0x818 <vfprintf+0xee>
 80e:	0c 5f       	subi	r16, 0xFC	; 252
 810:	1f 4f       	sbci	r17, 0xFF	; 255
 812:	ff e3       	ldi	r31, 0x3F	; 63
 814:	f9 83       	std	Y+1, r31	; 0x01
 816:	0d c0       	rjmp	.+26     	; 0x832 <vfprintf+0x108>
 818:	83 36       	cpi	r24, 0x63	; 99
 81a:	31 f0       	breq	.+12     	; 0x828 <vfprintf+0xfe>
 81c:	83 37       	cpi	r24, 0x73	; 115
 81e:	71 f0       	breq	.+28     	; 0x83c <vfprintf+0x112>
 820:	83 35       	cpi	r24, 0x53	; 83
 822:	09 f0       	breq	.+2      	; 0x826 <vfprintf+0xfc>
 824:	5b c0       	rjmp	.+182    	; 0x8dc <vfprintf+0x1b2>
 826:	22 c0       	rjmp	.+68     	; 0x86c <vfprintf+0x142>
 828:	f8 01       	movw	r30, r16
 82a:	80 81       	ld	r24, Z
 82c:	89 83       	std	Y+1, r24	; 0x01
 82e:	0e 5f       	subi	r16, 0xFE	; 254
 830:	1f 4f       	sbci	r17, 0xFF	; 255
 832:	44 24       	eor	r4, r4
 834:	43 94       	inc	r4
 836:	51 2c       	mov	r5, r1
 838:	54 01       	movw	r10, r8
 83a:	15 c0       	rjmp	.+42     	; 0x866 <vfprintf+0x13c>
 83c:	38 01       	movw	r6, r16
 83e:	f2 e0       	ldi	r31, 0x02	; 2
 840:	6f 0e       	add	r6, r31
 842:	71 1c       	adc	r7, r1
 844:	f8 01       	movw	r30, r16
 846:	a0 80       	ld	r10, Z
 848:	b1 80       	ldd	r11, Z+1	; 0x01
 84a:	26 ff       	sbrs	r18, 6
 84c:	03 c0       	rjmp	.+6      	; 0x854 <vfprintf+0x12a>
 84e:	65 2d       	mov	r22, r5
 850:	70 e0       	ldi	r23, 0x00	; 0
 852:	02 c0       	rjmp	.+4      	; 0x858 <vfprintf+0x12e>
 854:	6f ef       	ldi	r22, 0xFF	; 255
 856:	7f ef       	ldi	r23, 0xFF	; 255
 858:	c5 01       	movw	r24, r10
 85a:	2c 87       	std	Y+12, r18	; 0x0c
 85c:	0e 94 72 05 	call	0xae4	; 0xae4 <strnlen>
 860:	2c 01       	movw	r4, r24
 862:	83 01       	movw	r16, r6
 864:	2c 85       	ldd	r18, Y+12	; 0x0c
 866:	2f 77       	andi	r18, 0x7F	; 127
 868:	22 2e       	mov	r2, r18
 86a:	17 c0       	rjmp	.+46     	; 0x89a <vfprintf+0x170>
 86c:	38 01       	movw	r6, r16
 86e:	f2 e0       	ldi	r31, 0x02	; 2
 870:	6f 0e       	add	r6, r31
 872:	71 1c       	adc	r7, r1
 874:	f8 01       	movw	r30, r16
 876:	a0 80       	ld	r10, Z
 878:	b1 80       	ldd	r11, Z+1	; 0x01
 87a:	26 ff       	sbrs	r18, 6
 87c:	03 c0       	rjmp	.+6      	; 0x884 <vfprintf+0x15a>
 87e:	65 2d       	mov	r22, r5
 880:	70 e0       	ldi	r23, 0x00	; 0
 882:	02 c0       	rjmp	.+4      	; 0x888 <vfprintf+0x15e>
 884:	6f ef       	ldi	r22, 0xFF	; 255
 886:	7f ef       	ldi	r23, 0xFF	; 255
 888:	c5 01       	movw	r24, r10
 88a:	2c 87       	std	Y+12, r18	; 0x0c
 88c:	0e 94 67 05 	call	0xace	; 0xace <strnlen_P>
 890:	2c 01       	movw	r4, r24
 892:	2c 85       	ldd	r18, Y+12	; 0x0c
 894:	20 68       	ori	r18, 0x80	; 128
 896:	22 2e       	mov	r2, r18
 898:	83 01       	movw	r16, r6
 89a:	23 fc       	sbrc	r2, 3
 89c:	1b c0       	rjmp	.+54     	; 0x8d4 <vfprintf+0x1aa>
 89e:	83 2d       	mov	r24, r3
 8a0:	90 e0       	ldi	r25, 0x00	; 0
 8a2:	48 16       	cp	r4, r24
 8a4:	59 06       	cpc	r5, r25
 8a6:	b0 f4       	brcc	.+44     	; 0x8d4 <vfprintf+0x1aa>
 8a8:	b7 01       	movw	r22, r14
 8aa:	80 e2       	ldi	r24, 0x20	; 32
 8ac:	90 e0       	ldi	r25, 0x00	; 0
 8ae:	0e 94 7d 05 	call	0xafa	; 0xafa <fputc>
 8b2:	3a 94       	dec	r3
 8b4:	f4 cf       	rjmp	.-24     	; 0x89e <vfprintf+0x174>
 8b6:	f5 01       	movw	r30, r10
 8b8:	27 fc       	sbrc	r2, 7
 8ba:	85 91       	lpm	r24, Z+
 8bc:	27 fe       	sbrs	r2, 7
 8be:	81 91       	ld	r24, Z+
 8c0:	5f 01       	movw	r10, r30
 8c2:	b7 01       	movw	r22, r14
 8c4:	90 e0       	ldi	r25, 0x00	; 0
 8c6:	0e 94 7d 05 	call	0xafa	; 0xafa <fputc>
 8ca:	31 10       	cpse	r3, r1
 8cc:	3a 94       	dec	r3
 8ce:	f1 e0       	ldi	r31, 0x01	; 1
 8d0:	4f 1a       	sub	r4, r31
 8d2:	51 08       	sbc	r5, r1
 8d4:	41 14       	cp	r4, r1
 8d6:	51 04       	cpc	r5, r1
 8d8:	71 f7       	brne	.-36     	; 0x8b6 <vfprintf+0x18c>
 8da:	e5 c0       	rjmp	.+458    	; 0xaa6 <__stack+0x1a7>
 8dc:	84 36       	cpi	r24, 0x64	; 100
 8de:	11 f0       	breq	.+4      	; 0x8e4 <vfprintf+0x1ba>
 8e0:	89 36       	cpi	r24, 0x69	; 105
 8e2:	39 f5       	brne	.+78     	; 0x932 <__stack+0x33>
 8e4:	f8 01       	movw	r30, r16
 8e6:	27 ff       	sbrs	r18, 7
 8e8:	07 c0       	rjmp	.+14     	; 0x8f8 <vfprintf+0x1ce>
 8ea:	60 81       	ld	r22, Z
 8ec:	71 81       	ldd	r23, Z+1	; 0x01
 8ee:	82 81       	ldd	r24, Z+2	; 0x02
 8f0:	93 81       	ldd	r25, Z+3	; 0x03
 8f2:	0c 5f       	subi	r16, 0xFC	; 252
 8f4:	1f 4f       	sbci	r17, 0xFF	; 255
 8f6:	08 c0       	rjmp	.+16     	; 0x908 <__stack+0x9>
 8f8:	60 81       	ld	r22, Z
 8fa:	71 81       	ldd	r23, Z+1	; 0x01
 8fc:	07 2e       	mov	r0, r23
 8fe:	00 0c       	add	r0, r0
 900:	88 0b       	sbc	r24, r24
 902:	99 0b       	sbc	r25, r25
 904:	0e 5f       	subi	r16, 0xFE	; 254
 906:	1f 4f       	sbci	r17, 0xFF	; 255
 908:	2f 76       	andi	r18, 0x6F	; 111
 90a:	72 2e       	mov	r7, r18
 90c:	97 ff       	sbrs	r25, 7
 90e:	09 c0       	rjmp	.+18     	; 0x922 <__stack+0x23>
 910:	90 95       	com	r25
 912:	80 95       	com	r24
 914:	70 95       	com	r23
 916:	61 95       	neg	r22
 918:	7f 4f       	sbci	r23, 0xFF	; 255
 91a:	8f 4f       	sbci	r24, 0xFF	; 255
 91c:	9f 4f       	sbci	r25, 0xFF	; 255
 91e:	20 68       	ori	r18, 0x80	; 128
 920:	72 2e       	mov	r7, r18
 922:	2a e0       	ldi	r18, 0x0A	; 10
 924:	30 e0       	ldi	r19, 0x00	; 0
 926:	a4 01       	movw	r20, r8
 928:	0e 94 b5 05 	call	0xb6a	; 0xb6a <__ultoa_invert>
 92c:	a8 2e       	mov	r10, r24
 92e:	a8 18       	sub	r10, r8
 930:	44 c0       	rjmp	.+136    	; 0x9ba <__stack+0xbb>
 932:	85 37       	cpi	r24, 0x75	; 117
 934:	29 f4       	brne	.+10     	; 0x940 <__stack+0x41>
 936:	2f 7e       	andi	r18, 0xEF	; 239
 938:	b2 2e       	mov	r11, r18
 93a:	2a e0       	ldi	r18, 0x0A	; 10
 93c:	30 e0       	ldi	r19, 0x00	; 0
 93e:	25 c0       	rjmp	.+74     	; 0x98a <__stack+0x8b>
 940:	f2 2f       	mov	r31, r18
 942:	f9 7f       	andi	r31, 0xF9	; 249
 944:	bf 2e       	mov	r11, r31
 946:	8f 36       	cpi	r24, 0x6F	; 111
 948:	c1 f0       	breq	.+48     	; 0x97a <__stack+0x7b>
 94a:	18 f4       	brcc	.+6      	; 0x952 <__stack+0x53>
 94c:	88 35       	cpi	r24, 0x58	; 88
 94e:	79 f0       	breq	.+30     	; 0x96e <__stack+0x6f>
 950:	b4 c0       	rjmp	.+360    	; 0xaba <__stack+0x1bb>
 952:	80 37       	cpi	r24, 0x70	; 112
 954:	19 f0       	breq	.+6      	; 0x95c <__stack+0x5d>
 956:	88 37       	cpi	r24, 0x78	; 120
 958:	21 f0       	breq	.+8      	; 0x962 <__stack+0x63>
 95a:	af c0       	rjmp	.+350    	; 0xaba <__stack+0x1bb>
 95c:	2f 2f       	mov	r18, r31
 95e:	20 61       	ori	r18, 0x10	; 16
 960:	b2 2e       	mov	r11, r18
 962:	b4 fe       	sbrs	r11, 4
 964:	0d c0       	rjmp	.+26     	; 0x980 <__stack+0x81>
 966:	8b 2d       	mov	r24, r11
 968:	84 60       	ori	r24, 0x04	; 4
 96a:	b8 2e       	mov	r11, r24
 96c:	09 c0       	rjmp	.+18     	; 0x980 <__stack+0x81>
 96e:	24 ff       	sbrs	r18, 4
 970:	0a c0       	rjmp	.+20     	; 0x986 <__stack+0x87>
 972:	9f 2f       	mov	r25, r31
 974:	96 60       	ori	r25, 0x06	; 6
 976:	b9 2e       	mov	r11, r25
 978:	06 c0       	rjmp	.+12     	; 0x986 <__stack+0x87>
 97a:	28 e0       	ldi	r18, 0x08	; 8
 97c:	30 e0       	ldi	r19, 0x00	; 0
 97e:	05 c0       	rjmp	.+10     	; 0x98a <__stack+0x8b>
 980:	20 e1       	ldi	r18, 0x10	; 16
 982:	30 e0       	ldi	r19, 0x00	; 0
 984:	02 c0       	rjmp	.+4      	; 0x98a <__stack+0x8b>
 986:	20 e1       	ldi	r18, 0x10	; 16
 988:	32 e0       	ldi	r19, 0x02	; 2
 98a:	f8 01       	movw	r30, r16
 98c:	b7 fe       	sbrs	r11, 7
 98e:	07 c0       	rjmp	.+14     	; 0x99e <__stack+0x9f>
 990:	60 81       	ld	r22, Z
 992:	71 81       	ldd	r23, Z+1	; 0x01
 994:	82 81       	ldd	r24, Z+2	; 0x02
 996:	93 81       	ldd	r25, Z+3	; 0x03
 998:	0c 5f       	subi	r16, 0xFC	; 252
 99a:	1f 4f       	sbci	r17, 0xFF	; 255
 99c:	06 c0       	rjmp	.+12     	; 0x9aa <__stack+0xab>
 99e:	60 81       	ld	r22, Z
 9a0:	71 81       	ldd	r23, Z+1	; 0x01
 9a2:	80 e0       	ldi	r24, 0x00	; 0
 9a4:	90 e0       	ldi	r25, 0x00	; 0
 9a6:	0e 5f       	subi	r16, 0xFE	; 254
 9a8:	1f 4f       	sbci	r17, 0xFF	; 255
 9aa:	a4 01       	movw	r20, r8
 9ac:	0e 94 b5 05 	call	0xb6a	; 0xb6a <__ultoa_invert>
 9b0:	a8 2e       	mov	r10, r24
 9b2:	a8 18       	sub	r10, r8
 9b4:	fb 2d       	mov	r31, r11
 9b6:	ff 77       	andi	r31, 0x7F	; 127
 9b8:	7f 2e       	mov	r7, r31
 9ba:	76 fe       	sbrs	r7, 6
 9bc:	0b c0       	rjmp	.+22     	; 0x9d4 <__stack+0xd5>
 9be:	37 2d       	mov	r19, r7
 9c0:	3e 7f       	andi	r19, 0xFE	; 254
 9c2:	a5 14       	cp	r10, r5
 9c4:	50 f4       	brcc	.+20     	; 0x9da <__stack+0xdb>
 9c6:	74 fe       	sbrs	r7, 4
 9c8:	0a c0       	rjmp	.+20     	; 0x9de <__stack+0xdf>
 9ca:	72 fc       	sbrc	r7, 2
 9cc:	08 c0       	rjmp	.+16     	; 0x9de <__stack+0xdf>
 9ce:	37 2d       	mov	r19, r7
 9d0:	3e 7e       	andi	r19, 0xEE	; 238
 9d2:	05 c0       	rjmp	.+10     	; 0x9de <__stack+0xdf>
 9d4:	ba 2c       	mov	r11, r10
 9d6:	37 2d       	mov	r19, r7
 9d8:	03 c0       	rjmp	.+6      	; 0x9e0 <__stack+0xe1>
 9da:	ba 2c       	mov	r11, r10
 9dc:	01 c0       	rjmp	.+2      	; 0x9e0 <__stack+0xe1>
 9de:	b5 2c       	mov	r11, r5
 9e0:	34 ff       	sbrs	r19, 4
 9e2:	0d c0       	rjmp	.+26     	; 0x9fe <__stack+0xff>
 9e4:	fe 01       	movw	r30, r28
 9e6:	ea 0d       	add	r30, r10
 9e8:	f1 1d       	adc	r31, r1
 9ea:	80 81       	ld	r24, Z
 9ec:	80 33       	cpi	r24, 0x30	; 48
 9ee:	11 f4       	brne	.+4      	; 0x9f4 <__stack+0xf5>
 9f0:	39 7e       	andi	r19, 0xE9	; 233
 9f2:	09 c0       	rjmp	.+18     	; 0xa06 <__stack+0x107>
 9f4:	32 ff       	sbrs	r19, 2
 9f6:	06 c0       	rjmp	.+12     	; 0xa04 <__stack+0x105>
 9f8:	b3 94       	inc	r11
 9fa:	b3 94       	inc	r11
 9fc:	04 c0       	rjmp	.+8      	; 0xa06 <__stack+0x107>
 9fe:	83 2f       	mov	r24, r19
 a00:	86 78       	andi	r24, 0x86	; 134
 a02:	09 f0       	breq	.+2      	; 0xa06 <__stack+0x107>
 a04:	b3 94       	inc	r11
 a06:	33 fd       	sbrc	r19, 3
 a08:	13 c0       	rjmp	.+38     	; 0xa30 <__stack+0x131>
 a0a:	30 ff       	sbrs	r19, 0
 a0c:	06 c0       	rjmp	.+12     	; 0xa1a <__stack+0x11b>
 a0e:	5a 2c       	mov	r5, r10
 a10:	b3 14       	cp	r11, r3
 a12:	18 f4       	brcc	.+6      	; 0xa1a <__stack+0x11b>
 a14:	53 0c       	add	r5, r3
 a16:	5b 18       	sub	r5, r11
 a18:	b3 2c       	mov	r11, r3
 a1a:	b3 14       	cp	r11, r3
 a1c:	68 f4       	brcc	.+26     	; 0xa38 <__stack+0x139>
 a1e:	b7 01       	movw	r22, r14
 a20:	80 e2       	ldi	r24, 0x20	; 32
 a22:	90 e0       	ldi	r25, 0x00	; 0
 a24:	3c 87       	std	Y+12, r19	; 0x0c
 a26:	0e 94 7d 05 	call	0xafa	; 0xafa <fputc>
 a2a:	b3 94       	inc	r11
 a2c:	3c 85       	ldd	r19, Y+12	; 0x0c
 a2e:	f5 cf       	rjmp	.-22     	; 0xa1a <__stack+0x11b>
 a30:	b3 14       	cp	r11, r3
 a32:	10 f4       	brcc	.+4      	; 0xa38 <__stack+0x139>
 a34:	3b 18       	sub	r3, r11
 a36:	01 c0       	rjmp	.+2      	; 0xa3a <__stack+0x13b>
 a38:	31 2c       	mov	r3, r1
 a3a:	34 ff       	sbrs	r19, 4
 a3c:	12 c0       	rjmp	.+36     	; 0xa62 <__stack+0x163>
 a3e:	b7 01       	movw	r22, r14
 a40:	80 e3       	ldi	r24, 0x30	; 48
 a42:	90 e0       	ldi	r25, 0x00	; 0
 a44:	3c 87       	std	Y+12, r19	; 0x0c
 a46:	0e 94 7d 05 	call	0xafa	; 0xafa <fputc>
 a4a:	3c 85       	ldd	r19, Y+12	; 0x0c
 a4c:	32 ff       	sbrs	r19, 2
 a4e:	17 c0       	rjmp	.+46     	; 0xa7e <__stack+0x17f>
 a50:	31 fd       	sbrc	r19, 1
 a52:	03 c0       	rjmp	.+6      	; 0xa5a <__stack+0x15b>
 a54:	88 e7       	ldi	r24, 0x78	; 120
 a56:	90 e0       	ldi	r25, 0x00	; 0
 a58:	02 c0       	rjmp	.+4      	; 0xa5e <__stack+0x15f>
 a5a:	88 e5       	ldi	r24, 0x58	; 88
 a5c:	90 e0       	ldi	r25, 0x00	; 0
 a5e:	b7 01       	movw	r22, r14
 a60:	0c c0       	rjmp	.+24     	; 0xa7a <__stack+0x17b>
 a62:	83 2f       	mov	r24, r19
 a64:	86 78       	andi	r24, 0x86	; 134
 a66:	59 f0       	breq	.+22     	; 0xa7e <__stack+0x17f>
 a68:	31 ff       	sbrs	r19, 1
 a6a:	02 c0       	rjmp	.+4      	; 0xa70 <__stack+0x171>
 a6c:	8b e2       	ldi	r24, 0x2B	; 43
 a6e:	01 c0       	rjmp	.+2      	; 0xa72 <__stack+0x173>
 a70:	80 e2       	ldi	r24, 0x20	; 32
 a72:	37 fd       	sbrc	r19, 7
 a74:	8d e2       	ldi	r24, 0x2D	; 45
 a76:	b7 01       	movw	r22, r14
 a78:	90 e0       	ldi	r25, 0x00	; 0
 a7a:	0e 94 7d 05 	call	0xafa	; 0xafa <fputc>
 a7e:	a5 14       	cp	r10, r5
 a80:	38 f4       	brcc	.+14     	; 0xa90 <__stack+0x191>
 a82:	b7 01       	movw	r22, r14
 a84:	80 e3       	ldi	r24, 0x30	; 48
 a86:	90 e0       	ldi	r25, 0x00	; 0
 a88:	0e 94 7d 05 	call	0xafa	; 0xafa <fputc>
 a8c:	5a 94       	dec	r5
 a8e:	f7 cf       	rjmp	.-18     	; 0xa7e <__stack+0x17f>
 a90:	aa 94       	dec	r10
 a92:	f4 01       	movw	r30, r8
 a94:	ea 0d       	add	r30, r10
 a96:	f1 1d       	adc	r31, r1
 a98:	80 81       	ld	r24, Z
 a9a:	b7 01       	movw	r22, r14
 a9c:	90 e0       	ldi	r25, 0x00	; 0
 a9e:	0e 94 7d 05 	call	0xafa	; 0xafa <fputc>
 aa2:	a1 10       	cpse	r10, r1
 aa4:	f5 cf       	rjmp	.-22     	; 0xa90 <__stack+0x191>
 aa6:	33 20       	and	r3, r3
 aa8:	09 f4       	brne	.+2      	; 0xaac <__stack+0x1ad>
 aaa:	51 ce       	rjmp	.-862    	; 0x74e <vfprintf+0x24>
 aac:	b7 01       	movw	r22, r14
 aae:	80 e2       	ldi	r24, 0x20	; 32
 ab0:	90 e0       	ldi	r25, 0x00	; 0
 ab2:	0e 94 7d 05 	call	0xafa	; 0xafa <fputc>
 ab6:	3a 94       	dec	r3
 ab8:	f6 cf       	rjmp	.-20     	; 0xaa6 <__stack+0x1a7>
 aba:	f7 01       	movw	r30, r14
 abc:	86 81       	ldd	r24, Z+6	; 0x06
 abe:	97 81       	ldd	r25, Z+7	; 0x07
 ac0:	02 c0       	rjmp	.+4      	; 0xac6 <__stack+0x1c7>
 ac2:	8f ef       	ldi	r24, 0xFF	; 255
 ac4:	9f ef       	ldi	r25, 0xFF	; 255
 ac6:	2c 96       	adiw	r28, 0x0c	; 12
 ac8:	e2 e1       	ldi	r30, 0x12	; 18
 aca:	0c 94 2f 06 	jmp	0xc5e	; 0xc5e <__epilogue_restores__>

00000ace <strnlen_P>:
 ace:	fc 01       	movw	r30, r24
 ad0:	05 90       	lpm	r0, Z+
 ad2:	61 50       	subi	r22, 0x01	; 1
 ad4:	70 40       	sbci	r23, 0x00	; 0
 ad6:	01 10       	cpse	r0, r1
 ad8:	d8 f7       	brcc	.-10     	; 0xad0 <strnlen_P+0x2>
 ada:	80 95       	com	r24
 adc:	90 95       	com	r25
 ade:	8e 0f       	add	r24, r30
 ae0:	9f 1f       	adc	r25, r31
 ae2:	08 95       	ret

00000ae4 <strnlen>:
 ae4:	fc 01       	movw	r30, r24
 ae6:	61 50       	subi	r22, 0x01	; 1
 ae8:	70 40       	sbci	r23, 0x00	; 0
 aea:	01 90       	ld	r0, Z+
 aec:	01 10       	cpse	r0, r1
 aee:	d8 f7       	brcc	.-10     	; 0xae6 <strnlen+0x2>
 af0:	80 95       	com	r24
 af2:	90 95       	com	r25
 af4:	8e 0f       	add	r24, r30
 af6:	9f 1f       	adc	r25, r31
 af8:	08 95       	ret

00000afa <fputc>:
 afa:	0f 93       	push	r16
 afc:	1f 93       	push	r17
 afe:	cf 93       	push	r28
 b00:	df 93       	push	r29
 b02:	fb 01       	movw	r30, r22
 b04:	23 81       	ldd	r18, Z+3	; 0x03
 b06:	21 fd       	sbrc	r18, 1
 b08:	03 c0       	rjmp	.+6      	; 0xb10 <fputc+0x16>
 b0a:	8f ef       	ldi	r24, 0xFF	; 255
 b0c:	9f ef       	ldi	r25, 0xFF	; 255
 b0e:	28 c0       	rjmp	.+80     	; 0xb60 <fputc+0x66>
 b10:	22 ff       	sbrs	r18, 2
 b12:	16 c0       	rjmp	.+44     	; 0xb40 <fputc+0x46>
 b14:	46 81       	ldd	r20, Z+6	; 0x06
 b16:	57 81       	ldd	r21, Z+7	; 0x07
 b18:	24 81       	ldd	r18, Z+4	; 0x04
 b1a:	35 81       	ldd	r19, Z+5	; 0x05
 b1c:	42 17       	cp	r20, r18
 b1e:	53 07       	cpc	r21, r19
 b20:	44 f4       	brge	.+16     	; 0xb32 <fputc+0x38>
 b22:	a0 81       	ld	r26, Z
 b24:	b1 81       	ldd	r27, Z+1	; 0x01
 b26:	9d 01       	movw	r18, r26
 b28:	2f 5f       	subi	r18, 0xFF	; 255
 b2a:	3f 4f       	sbci	r19, 0xFF	; 255
 b2c:	31 83       	std	Z+1, r19	; 0x01
 b2e:	20 83       	st	Z, r18
 b30:	8c 93       	st	X, r24
 b32:	26 81       	ldd	r18, Z+6	; 0x06
 b34:	37 81       	ldd	r19, Z+7	; 0x07
 b36:	2f 5f       	subi	r18, 0xFF	; 255
 b38:	3f 4f       	sbci	r19, 0xFF	; 255
 b3a:	37 83       	std	Z+7, r19	; 0x07
 b3c:	26 83       	std	Z+6, r18	; 0x06
 b3e:	10 c0       	rjmp	.+32     	; 0xb60 <fputc+0x66>
 b40:	eb 01       	movw	r28, r22
 b42:	09 2f       	mov	r16, r25
 b44:	18 2f       	mov	r17, r24
 b46:	00 84       	ldd	r0, Z+8	; 0x08
 b48:	f1 85       	ldd	r31, Z+9	; 0x09
 b4a:	e0 2d       	mov	r30, r0
 b4c:	09 95       	icall
 b4e:	89 2b       	or	r24, r25
 b50:	e1 f6       	brne	.-72     	; 0xb0a <fputc+0x10>
 b52:	8e 81       	ldd	r24, Y+6	; 0x06
 b54:	9f 81       	ldd	r25, Y+7	; 0x07
 b56:	01 96       	adiw	r24, 0x01	; 1
 b58:	9f 83       	std	Y+7, r25	; 0x07
 b5a:	8e 83       	std	Y+6, r24	; 0x06
 b5c:	81 2f       	mov	r24, r17
 b5e:	90 2f       	mov	r25, r16
 b60:	df 91       	pop	r29
 b62:	cf 91       	pop	r28
 b64:	1f 91       	pop	r17
 b66:	0f 91       	pop	r16
 b68:	08 95       	ret

00000b6a <__ultoa_invert>:
 b6a:	fa 01       	movw	r30, r20
 b6c:	aa 27       	eor	r26, r26
 b6e:	28 30       	cpi	r18, 0x08	; 8
 b70:	51 f1       	breq	.+84     	; 0xbc6 <__ultoa_invert+0x5c>
 b72:	20 31       	cpi	r18, 0x10	; 16
 b74:	81 f1       	breq	.+96     	; 0xbd6 <__ultoa_invert+0x6c>
 b76:	e8 94       	clt
 b78:	6f 93       	push	r22
 b7a:	6e 7f       	andi	r22, 0xFE	; 254
 b7c:	6e 5f       	subi	r22, 0xFE	; 254
 b7e:	7f 4f       	sbci	r23, 0xFF	; 255
 b80:	8f 4f       	sbci	r24, 0xFF	; 255
 b82:	9f 4f       	sbci	r25, 0xFF	; 255
 b84:	af 4f       	sbci	r26, 0xFF	; 255
 b86:	b1 e0       	ldi	r27, 0x01	; 1
 b88:	3e d0       	rcall	.+124    	; 0xc06 <__ultoa_invert+0x9c>
 b8a:	b4 e0       	ldi	r27, 0x04	; 4
 b8c:	3c d0       	rcall	.+120    	; 0xc06 <__ultoa_invert+0x9c>
 b8e:	67 0f       	add	r22, r23
 b90:	78 1f       	adc	r23, r24
 b92:	89 1f       	adc	r24, r25
 b94:	9a 1f       	adc	r25, r26
 b96:	a1 1d       	adc	r26, r1
 b98:	68 0f       	add	r22, r24
 b9a:	79 1f       	adc	r23, r25
 b9c:	8a 1f       	adc	r24, r26
 b9e:	91 1d       	adc	r25, r1
 ba0:	a1 1d       	adc	r26, r1
 ba2:	6a 0f       	add	r22, r26
 ba4:	71 1d       	adc	r23, r1
 ba6:	81 1d       	adc	r24, r1
 ba8:	91 1d       	adc	r25, r1
 baa:	a1 1d       	adc	r26, r1
 bac:	20 d0       	rcall	.+64     	; 0xbee <__ultoa_invert+0x84>
 bae:	09 f4       	brne	.+2      	; 0xbb2 <__ultoa_invert+0x48>
 bb0:	68 94       	set
 bb2:	3f 91       	pop	r19
 bb4:	2a e0       	ldi	r18, 0x0A	; 10
 bb6:	26 9f       	mul	r18, r22
 bb8:	11 24       	eor	r1, r1
 bba:	30 19       	sub	r19, r0
 bbc:	30 5d       	subi	r19, 0xD0	; 208
 bbe:	31 93       	st	Z+, r19
 bc0:	de f6       	brtc	.-74     	; 0xb78 <__ultoa_invert+0xe>
 bc2:	cf 01       	movw	r24, r30
 bc4:	08 95       	ret
 bc6:	46 2f       	mov	r20, r22
 bc8:	47 70       	andi	r20, 0x07	; 7
 bca:	40 5d       	subi	r20, 0xD0	; 208
 bcc:	41 93       	st	Z+, r20
 bce:	b3 e0       	ldi	r27, 0x03	; 3
 bd0:	0f d0       	rcall	.+30     	; 0xbf0 <__ultoa_invert+0x86>
 bd2:	c9 f7       	brne	.-14     	; 0xbc6 <__ultoa_invert+0x5c>
 bd4:	f6 cf       	rjmp	.-20     	; 0xbc2 <__ultoa_invert+0x58>
 bd6:	46 2f       	mov	r20, r22
 bd8:	4f 70       	andi	r20, 0x0F	; 15
 bda:	40 5d       	subi	r20, 0xD0	; 208
 bdc:	4a 33       	cpi	r20, 0x3A	; 58
 bde:	18 f0       	brcs	.+6      	; 0xbe6 <__ultoa_invert+0x7c>
 be0:	49 5d       	subi	r20, 0xD9	; 217
 be2:	31 fd       	sbrc	r19, 1
 be4:	40 52       	subi	r20, 0x20	; 32
 be6:	41 93       	st	Z+, r20
 be8:	02 d0       	rcall	.+4      	; 0xbee <__ultoa_invert+0x84>
 bea:	a9 f7       	brne	.-22     	; 0xbd6 <__ultoa_invert+0x6c>
 bec:	ea cf       	rjmp	.-44     	; 0xbc2 <__ultoa_invert+0x58>
 bee:	b4 e0       	ldi	r27, 0x04	; 4
 bf0:	a6 95       	lsr	r26
 bf2:	97 95       	ror	r25
 bf4:	87 95       	ror	r24
 bf6:	77 95       	ror	r23
 bf8:	67 95       	ror	r22
 bfa:	ba 95       	dec	r27
 bfc:	c9 f7       	brne	.-14     	; 0xbf0 <__ultoa_invert+0x86>
 bfe:	00 97       	sbiw	r24, 0x00	; 0
 c00:	61 05       	cpc	r22, r1
 c02:	71 05       	cpc	r23, r1
 c04:	08 95       	ret
 c06:	9b 01       	movw	r18, r22
 c08:	ac 01       	movw	r20, r24
 c0a:	0a 2e       	mov	r0, r26
 c0c:	06 94       	lsr	r0
 c0e:	57 95       	ror	r21
 c10:	47 95       	ror	r20
 c12:	37 95       	ror	r19
 c14:	27 95       	ror	r18
 c16:	ba 95       	dec	r27
 c18:	c9 f7       	brne	.-14     	; 0xc0c <__ultoa_invert+0xa2>
 c1a:	62 0f       	add	r22, r18
 c1c:	73 1f       	adc	r23, r19
 c1e:	84 1f       	adc	r24, r20
 c20:	95 1f       	adc	r25, r21
 c22:	a0 1d       	adc	r26, r0
 c24:	08 95       	ret

00000c26 <__prologue_saves__>:
 c26:	2f 92       	push	r2
 c28:	3f 92       	push	r3
 c2a:	4f 92       	push	r4
 c2c:	5f 92       	push	r5
 c2e:	6f 92       	push	r6
 c30:	7f 92       	push	r7
 c32:	8f 92       	push	r8
 c34:	9f 92       	push	r9
 c36:	af 92       	push	r10
 c38:	bf 92       	push	r11
 c3a:	cf 92       	push	r12
 c3c:	df 92       	push	r13
 c3e:	ef 92       	push	r14
 c40:	ff 92       	push	r15
 c42:	0f 93       	push	r16
 c44:	1f 93       	push	r17
 c46:	cf 93       	push	r28
 c48:	df 93       	push	r29
 c4a:	cd b7       	in	r28, 0x3d	; 61
 c4c:	de b7       	in	r29, 0x3e	; 62
 c4e:	ca 1b       	sub	r28, r26
 c50:	db 0b       	sbc	r29, r27
 c52:	0f b6       	in	r0, 0x3f	; 63
 c54:	f8 94       	cli
 c56:	de bf       	out	0x3e, r29	; 62
 c58:	0f be       	out	0x3f, r0	; 63
 c5a:	cd bf       	out	0x3d, r28	; 61
 c5c:	09 94       	ijmp

00000c5e <__epilogue_restores__>:
 c5e:	2a 88       	ldd	r2, Y+18	; 0x12
 c60:	39 88       	ldd	r3, Y+17	; 0x11
 c62:	48 88       	ldd	r4, Y+16	; 0x10
 c64:	5f 84       	ldd	r5, Y+15	; 0x0f
 c66:	6e 84       	ldd	r6, Y+14	; 0x0e
 c68:	7d 84       	ldd	r7, Y+13	; 0x0d
 c6a:	8c 84       	ldd	r8, Y+12	; 0x0c
 c6c:	9b 84       	ldd	r9, Y+11	; 0x0b
 c6e:	aa 84       	ldd	r10, Y+10	; 0x0a
 c70:	b9 84       	ldd	r11, Y+9	; 0x09
 c72:	c8 84       	ldd	r12, Y+8	; 0x08
 c74:	df 80       	ldd	r13, Y+7	; 0x07
 c76:	ee 80       	ldd	r14, Y+6	; 0x06
 c78:	fd 80       	ldd	r15, Y+5	; 0x05
 c7a:	0c 81       	ldd	r16, Y+4	; 0x04
 c7c:	1b 81       	ldd	r17, Y+3	; 0x03
 c7e:	aa 81       	ldd	r26, Y+2	; 0x02
 c80:	b9 81       	ldd	r27, Y+1	; 0x01
 c82:	ce 0f       	add	r28, r30
 c84:	d1 1d       	adc	r29, r1
 c86:	0f b6       	in	r0, 0x3f	; 63
 c88:	f8 94       	cli
 c8a:	de bf       	out	0x3e, r29	; 62
 c8c:	0f be       	out	0x3f, r0	; 63
 c8e:	cd bf       	out	0x3d, r28	; 61
 c90:	ed 01       	movw	r28, r26
 c92:	08 95       	ret

00000c94 <_exit>:
 c94:	f8 94       	cli

00000c96 <__stop_program>:
 c96:	ff cf       	rjmp	.-2      	; 0xc96 <__stop_program>
