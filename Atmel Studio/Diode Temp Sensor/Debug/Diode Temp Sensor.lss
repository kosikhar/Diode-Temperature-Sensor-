
Diode Temp Sensor.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
<<<<<<< HEAD
  0 .data         00000048  00800100  00000e20  00000e94  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000e20  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005c  00000000  00000000  00000edc  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000f38  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000110  00000000  00000000  00000f74  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000014b3  00000000  00000000  00001084  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000b90  00000000  00000000  00002537  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000009fc  00000000  00000000  000030c7  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000230  00000000  00000000  00003ac4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000064f  00000000  00000000  00003cf4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000009b0  00000000  00000000  00004343  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000d8  00000000  00000000  00004cf3  2**0
=======
  0 .data         0000005c  00800100  00000f02  00000f76  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000f02  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005c  00000000  00000000  00000fd2  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001030  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000108  00000000  00000000  0000106c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000014b3  00000000  00000000  00001174  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000be1  00000000  00000000  00002627  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000978  00000000  00000000  00003208  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000254  00000000  00000000  00003b80  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000062f  00000000  00000000  00003dd4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000009a5  00000000  00000000  00004403  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000d0  00000000  00000000  00004da8  2**0
>>>>>>> parent of ce7b5b7... Complete!
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   8:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  10:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  54:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
<<<<<<< HEAD
  7a:	e0 e2       	ldi	r30, 0x20	; 32
  7c:	fe e0       	ldi	r31, 0x0E	; 14
=======
  7a:	e2 e0       	ldi	r30, 0x02	; 2
  7c:	ff e0       	ldi	r31, 0x0F	; 15
>>>>>>> parent of ce7b5b7... Complete!
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a8 34       	cpi	r26, 0x48	; 72
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>
<<<<<<< HEAD
  8a:	0e 94 1a 02 	call	0x434	; 0x434 <main>
  8e:	0c 94 0e 07 	jmp	0xe1c	; 0xe1c <_exit>
=======
  8a:	0e 94 3b 02 	call	0x476	; 0x476 <main>
  8e:	0c 94 7f 07 	jmp	0xefe	; 0xefe <_exit>
>>>>>>> parent of ce7b5b7... Complete!

00000092 <__bad_interrupt>:
  92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <ADCRead>:
<<<<<<< HEAD
=======

//Adds a basic low pass filter to the ADC input
#define number_samples 128
#define sample_time_us 100

uint16_t ADCRead(uint8_t pin){
  96:	8f 92       	push	r8
  98:	9f 92       	push	r9
  9a:	af 92       	push	r10
  9c:	bf 92       	push	r11
  9e:	ef 92       	push	r14
  a0:	ff 92       	push	r15
  a2:	0f 93       	push	r16
  a4:	1f 93       	push	r17
  a6:	cf 93       	push	r28
  a8:	df 93       	push	r29
>>>>>>> parent of ce7b5b7... Complete!

	uint16_t input; //We're going to sample and average from 16 readings. 
	uint32_t sum = 0; //The sum of all samples.
	double average = 0; // the average of all the sample
	
	ADCSRB &= 0x00; //Auto Trigger = Free Running mode
  96:	eb e7       	ldi	r30, 0x7B	; 123
  98:	f0 e0       	ldi	r31, 0x00	; 0
  9a:	90 81       	ld	r25, Z
  9c:	10 82       	st	Z, r1
	ADCSRA |= (1 << ADEN);                // ADC Enable; Interupt Disable; Freq/1 
  9e:	ea e7       	ldi	r30, 0x7A	; 122
  a0:	f0 e0       	ldi	r31, 0x00	; 0
  a2:	90 81       	ld	r25, Z
  a4:	90 68       	ori	r25, 0x80	; 128
  a6:	90 83       	st	Z, r25
	ADMUX |= (1 << REFS0); //Set reference, AVcc
  a8:	ec e7       	ldi	r30, 0x7C	; 124
  aa:	f0 e0       	ldi	r31, 0x00	; 0
  ac:	90 81       	ld	r25, Z
  ae:	90 64       	ori	r25, 0x40	; 64
  b0:	90 83       	st	Z, r25
	//ADMUX |= ((1 << REFS0) | (1 << REFS1)) ; //Set Internal 1.1v reference		  
	
	ADMUX &= 0b11110000;
  b2:	90 81       	ld	r25, Z
  b4:	90 7f       	andi	r25, 0xF0	; 240
  b6:	90 83       	st	Z, r25
	    
	ADMUX |= pin;  //Set input pin
<<<<<<< HEAD
  b8:	90 81       	ld	r25, Z
  ba:	89 2b       	or	r24, r25
  bc:	80 83       	st	Z, r24
  be:	20 e0       	ldi	r18, 0x00	; 0
  c0:	30 e4       	ldi	r19, 0x40	; 64
#define number_samples 16384
=======
  cc:	90 81       	ld	r25, Z
  ce:	89 2b       	or	r24, r25
  d0:	80 83       	st	Z, r24
  d2:	68 94       	set
  d4:	ee 24       	eor	r14, r14
  d6:	e7 f8       	bld	r14, 7
  d8:	f1 2c       	mov	r15, r1
#define sample_time_us 100
>>>>>>> parent of ce7b5b7... Complete!

uint16_t ADCRead(uint8_t pin){

	uint16_t input; //We're going to sample and average from 16 readings. 
	uint32_t sum = 0; //The sum of all samples.
  c2:	40 e0       	ldi	r20, 0x00	; 0
  c4:	50 e0       	ldi	r21, 0x00	; 0
  c6:	ba 01       	movw	r22, r20
	ADMUX |= pin;  //Set input pin
	
	uint16_t i;
	for(i = 0; i < number_samples; i++) {
	
		ADCSRA |= (1 << ADSC); //Start Conversation
  c8:	ea e7       	ldi	r30, 0x7A	; 122
  ca:	f0 e0       	ldi	r31, 0x00	; 0

		while( (ADCSRA & (1 << ADSC)) ); //Wait till conversation complete ( ADSC == 0 )

		ADCSRA |= (1 << ADIF);   // Clear ADC Interrupt Flag
		
		input = ADC; 
  cc:	a8 e7       	ldi	r26, 0x78	; 120
  ce:	b0 e0       	ldi	r27, 0x00	; 0
	ADMUX |= pin;  //Set input pin
	
	uint16_t i;
	for(i = 0; i < number_samples; i++) {
	
		ADCSRA |= (1 << ADSC); //Start Conversation
  d0:	80 81       	ld	r24, Z
  d2:	80 64       	ori	r24, 0x40	; 64
  d4:	80 83       	st	Z, r24

		while( (ADCSRA & (1 << ADSC)) ); //Wait till conversation complete ( ADSC == 0 )
  d6:	80 81       	ld	r24, Z
  d8:	86 fd       	sbrc	r24, 6
  da:	fd cf       	rjmp	.-6      	; 0xd6 <ADCRead+0x40>

		ADCSRA |= (1 << ADIF);   // Clear ADC Interrupt Flag
  dc:	80 81       	ld	r24, Z
  de:	80 61       	ori	r24, 0x10	; 16
  e0:	80 83       	st	Z, r24
		
		input = ADC; 
  e2:	8d 91       	ld	r24, X+
  e4:	9c 91       	ld	r25, X
  e6:	11 97       	sbiw	r26, 0x01	; 1
		sum = sum + input;
<<<<<<< HEAD
  e8:	48 0f       	add	r20, r24
  ea:	59 1f       	adc	r21, r25
  ec:	61 1d       	adc	r22, r1
  ee:	71 1d       	adc	r23, r1
  f0:	21 50       	subi	r18, 0x01	; 1
  f2:	31 09       	sbc	r19, r1
=======
 100:	bc 01       	movw	r22, r24
 102:	80 e0       	ldi	r24, 0x00	; 0
 104:	90 e0       	ldi	r25, 0x00	; 0
 106:	0e 94 3d 03 	call	0x67a	; 0x67a <__floatunsisf>
 10a:	9b 01       	movw	r18, r22
 10c:	ac 01       	movw	r20, r24
 10e:	c5 01       	movw	r24, r10
 110:	b4 01       	movw	r22, r8
 112:	0e 94 a2 02 	call	0x544	; 0x544 <__addsf3>
 116:	4b 01       	movw	r8, r22
 118:	5c 01       	movw	r10, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 11a:	87 ec       	ldi	r24, 0xC7	; 199
 11c:	90 e0       	ldi	r25, 0x00	; 0
 11e:	01 97       	sbiw	r24, 0x01	; 1
 120:	f1 f7       	brne	.-4      	; 0x11e <ADCRead+0x88>
 122:	00 c0       	rjmp	.+0      	; 0x124 <ADCRead+0x8e>
 124:	00 00       	nop
 126:	91 e0       	ldi	r25, 0x01	; 1
 128:	e9 1a       	sub	r14, r25
 12a:	f1 08       	sbc	r15, r1
>>>>>>> parent of ce7b5b7... Complete!
	ADMUX &= 0b11110000;
	    
	ADMUX |= pin;  //Set input pin
	
	uint16_t i;
	for(i = 0; i < number_samples; i++) {
<<<<<<< HEAD
  f4:	69 f7       	brne	.-38     	; 0xd0 <ADCRead+0x3a>
		input = ADC; 
		sum = sum + input;
=======
 12c:	e9 f6       	brne	.-70     	; 0xe8 <ADCRead+0x52>
		
		_delay_us(sample_time_us);
>>>>>>> parent of ce7b5b7... Complete!
		
	}
	
	average = sum / number_samples;
<<<<<<< HEAD
  f6:	cb 01       	movw	r24, r22
  f8:	ba 01       	movw	r22, r20
  fa:	05 2e       	mov	r0, r21
  fc:	5e e0       	ldi	r21, 0x0E	; 14
  fe:	96 95       	lsr	r25
 100:	87 95       	ror	r24
 102:	77 95       	ror	r23
 104:	67 95       	ror	r22
 106:	5a 95       	dec	r21
 108:	d1 f7       	brne	.-12     	; 0xfe <ADCRead+0x68>
 10a:	50 2d       	mov	r21, r0
 10c:	0e 94 cc 02 	call	0x598	; 0x598 <__floatunsisf>
		
	return (uint16_t) average;
 110:	0e 94 9d 02 	call	0x53a	; 0x53a <__fixunssfsi>
}
 114:	cb 01       	movw	r24, r22
 116:	08 95       	ret

00000118 <toggle_e>:
=======
 12e:	20 e0       	ldi	r18, 0x00	; 0
 130:	30 e0       	ldi	r19, 0x00	; 0
 132:	40 e0       	ldi	r20, 0x00	; 0
 134:	5c e3       	ldi	r21, 0x3C	; 60
 136:	c5 01       	movw	r24, r10
 138:	b4 01       	movw	r22, r8
 13a:	0e 94 cb 03 	call	0x796	; 0x796 <__mulsf3>
		
	return (uint16_t) average;
 13e:	0e 94 0e 03 	call	0x61c	; 0x61c <__fixunssfsi>
}
 142:	cb 01       	movw	r24, r22
 144:	df 91       	pop	r29
 146:	cf 91       	pop	r28
 148:	1f 91       	pop	r17
 14a:	0f 91       	pop	r16
 14c:	ff 90       	pop	r15
 14e:	ef 90       	pop	r14
 150:	bf 90       	pop	r11
 152:	af 90       	pop	r10
 154:	9f 90       	pop	r9
 156:	8f 90       	pop	r8
 158:	08 95       	ret

0000015a <toggle_e>:
>>>>>>> parent of ce7b5b7... Complete!

    while ( (c = pgm_read_byte(progmem_s++)) ) {
        lcd_putc(c);
    }

}/* lcd_puts_p */
<<<<<<< HEAD
 118:	5e 9a       	sbi	0x0b, 6	; 11
 11a:	00 00       	nop
 11c:	5e 98       	cbi	0x0b, 6	; 11
 11e:	08 95       	ret

00000120 <lcd_write>:
 120:	cf 93       	push	r28
 122:	df 93       	push	r29
 124:	d8 2f       	mov	r29, r24
 126:	66 23       	and	r22, r22
 128:	11 f0       	breq	.+4      	; 0x12e <lcd_write+0xe>
 12a:	5c 9a       	sbi	0x0b, 4	; 11
 12c:	01 c0       	rjmp	.+2      	; 0x130 <lcd_write+0x10>
 12e:	5c 98       	cbi	0x0b, 4	; 11
 130:	5d 98       	cbi	0x0b, 5	; 11
 132:	8a b1       	in	r24, 0x0a	; 10
 134:	8f 60       	ori	r24, 0x0F	; 15
 136:	8a b9       	out	0x0a, r24	; 10
 138:	cb b1       	in	r28, 0x0b	; 11
 13a:	c0 7f       	andi	r28, 0xF0	; 240
 13c:	8d 2f       	mov	r24, r29
 13e:	82 95       	swap	r24
 140:	8f 70       	andi	r24, 0x0F	; 15
 142:	8c 2b       	or	r24, r28
 144:	8b b9       	out	0x0b, r24	; 11
 146:	0e 94 8c 00 	call	0x118	; 0x118 <toggle_e>
 14a:	df 70       	andi	r29, 0x0F	; 15
 14c:	dc 2b       	or	r29, r28
 14e:	db b9       	out	0x0b, r29	; 11
 150:	0e 94 8c 00 	call	0x118	; 0x118 <toggle_e>
 154:	cf 60       	ori	r28, 0x0F	; 15
 156:	cb b9       	out	0x0b, r28	; 11
 158:	df 91       	pop	r29
 15a:	cf 91       	pop	r28
 15c:	08 95       	ret

0000015e <lcd_read>:
 15e:	88 23       	and	r24, r24
 160:	11 f0       	breq	.+4      	; 0x166 <lcd_read+0x8>
 162:	5c 9a       	sbi	0x0b, 4	; 11
 164:	01 c0       	rjmp	.+2      	; 0x168 <lcd_read+0xa>
 166:	5c 98       	cbi	0x0b, 4	; 11
 168:	5d 9a       	sbi	0x0b, 5	; 11
 16a:	8a b1       	in	r24, 0x0a	; 10
 16c:	80 7f       	andi	r24, 0xF0	; 240
 16e:	8a b9       	out	0x0a, r24	; 10
 170:	5e 9a       	sbi	0x0b, 6	; 11
 172:	00 00       	nop
 174:	29 b1       	in	r18, 0x09	; 9
 176:	5e 98       	cbi	0x0b, 6	; 11
 178:	00 00       	nop
 17a:	5e 9a       	sbi	0x0b, 6	; 11
 17c:	00 00       	nop
 17e:	99 b1       	in	r25, 0x09	; 9
 180:	22 95       	swap	r18
 182:	20 7f       	andi	r18, 0xF0	; 240
 184:	89 2f       	mov	r24, r25
 186:	8f 70       	andi	r24, 0x0F	; 15
 188:	5e 98       	cbi	0x0b, 6	; 11
 18a:	82 2b       	or	r24, r18
 18c:	08 95       	ret

0000018e <lcd_waitbusy>:
 18e:	80 e0       	ldi	r24, 0x00	; 0
 190:	0e 94 af 00 	call	0x15e	; 0x15e <lcd_read>
 194:	88 23       	and	r24, r24
 196:	dc f3       	brlt	.-10     	; 0x18e <lcd_waitbusy>
 198:	00 c0       	rjmp	.+0      	; 0x19a <lcd_waitbusy+0xc>
 19a:	00 c0       	rjmp	.+0      	; 0x19c <lcd_waitbusy+0xe>
 19c:	80 e0       	ldi	r24, 0x00	; 0
 19e:	0e 94 af 00 	call	0x15e	; 0x15e <lcd_read>
 1a2:	08 95       	ret

000001a4 <lcd_command>:
 1a4:	cf 93       	push	r28
 1a6:	c8 2f       	mov	r28, r24
 1a8:	0e 94 c7 00 	call	0x18e	; 0x18e <lcd_waitbusy>
 1ac:	60 e0       	ldi	r22, 0x00	; 0
 1ae:	8c 2f       	mov	r24, r28
 1b0:	0e 94 90 00 	call	0x120	; 0x120 <lcd_write>
 1b4:	cf 91       	pop	r28
 1b6:	08 95       	ret

000001b8 <lcd_gotoxy>:
 1b8:	61 11       	cpse	r22, r1
 1ba:	04 c0       	rjmp	.+8      	; 0x1c4 <lcd_gotoxy+0xc>
 1bc:	80 58       	subi	r24, 0x80	; 128
 1be:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <lcd_command>
 1c2:	08 95       	ret
 1c4:	80 54       	subi	r24, 0x40	; 64
 1c6:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <lcd_command>
 1ca:	08 95       	ret

000001cc <lcd_clrscr>:
 1cc:	81 e0       	ldi	r24, 0x01	; 1
 1ce:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <lcd_command>
 1d2:	08 95       	ret

000001d4 <lcd_putc>:
 1d4:	cf 93       	push	r28
 1d6:	c8 2f       	mov	r28, r24
 1d8:	0e 94 c7 00 	call	0x18e	; 0x18e <lcd_waitbusy>
 1dc:	ca 30       	cpi	r28, 0x0A	; 10
 1de:	49 f4       	brne	.+18     	; 0x1f2 <lcd_putc+0x1e>
 1e0:	80 34       	cpi	r24, 0x40	; 64
 1e2:	10 f0       	brcs	.+4      	; 0x1e8 <lcd_putc+0x14>
 1e4:	80 e0       	ldi	r24, 0x00	; 0
 1e6:	01 c0       	rjmp	.+2      	; 0x1ea <lcd_putc+0x16>
 1e8:	80 e4       	ldi	r24, 0x40	; 64
 1ea:	80 58       	subi	r24, 0x80	; 128
 1ec:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <lcd_command>
 1f0:	04 c0       	rjmp	.+8      	; 0x1fa <lcd_putc+0x26>
 1f2:	61 e0       	ldi	r22, 0x01	; 1
 1f4:	8c 2f       	mov	r24, r28
 1f6:	0e 94 90 00 	call	0x120	; 0x120 <lcd_write>
 1fa:	cf 91       	pop	r28
 1fc:	08 95       	ret

000001fe <lcd_puts>:
 1fe:	cf 93       	push	r28
 200:	df 93       	push	r29
 202:	ec 01       	movw	r28, r24
 204:	21 96       	adiw	r28, 0x01	; 1
 206:	fc 01       	movw	r30, r24
 208:	80 81       	ld	r24, Z
 20a:	88 23       	and	r24, r24
 20c:	29 f0       	breq	.+10     	; 0x218 <lcd_puts+0x1a>
 20e:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <lcd_putc>
 212:	89 91       	ld	r24, Y+
 214:	81 11       	cpse	r24, r1
 216:	fb cf       	rjmp	.-10     	; 0x20e <lcd_puts+0x10>
 218:	df 91       	pop	r29
 21a:	cf 91       	pop	r28
 21c:	08 95       	ret

0000021e <lcd_init>:
=======
 15a:	5e 9a       	sbi	0x0b, 6	; 11
 15c:	00 00       	nop
 15e:	5e 98       	cbi	0x0b, 6	; 11
 160:	08 95       	ret

00000162 <lcd_write>:
 162:	cf 93       	push	r28
 164:	df 93       	push	r29
 166:	d8 2f       	mov	r29, r24
 168:	66 23       	and	r22, r22
 16a:	11 f0       	breq	.+4      	; 0x170 <lcd_write+0xe>
 16c:	5c 9a       	sbi	0x0b, 4	; 11
 16e:	01 c0       	rjmp	.+2      	; 0x172 <lcd_write+0x10>
 170:	5c 98       	cbi	0x0b, 4	; 11
 172:	5d 98       	cbi	0x0b, 5	; 11
 174:	8a b1       	in	r24, 0x0a	; 10
 176:	8f 60       	ori	r24, 0x0F	; 15
 178:	8a b9       	out	0x0a, r24	; 10
 17a:	cb b1       	in	r28, 0x0b	; 11
 17c:	c0 7f       	andi	r28, 0xF0	; 240
 17e:	8d 2f       	mov	r24, r29
 180:	82 95       	swap	r24
 182:	8f 70       	andi	r24, 0x0F	; 15
 184:	8c 2b       	or	r24, r28
 186:	8b b9       	out	0x0b, r24	; 11
 188:	0e 94 ad 00 	call	0x15a	; 0x15a <toggle_e>
 18c:	df 70       	andi	r29, 0x0F	; 15
 18e:	dc 2b       	or	r29, r28
 190:	db b9       	out	0x0b, r29	; 11
 192:	0e 94 ad 00 	call	0x15a	; 0x15a <toggle_e>
 196:	cf 60       	ori	r28, 0x0F	; 15
 198:	cb b9       	out	0x0b, r28	; 11
 19a:	df 91       	pop	r29
 19c:	cf 91       	pop	r28
 19e:	08 95       	ret

000001a0 <lcd_read>:
 1a0:	88 23       	and	r24, r24
 1a2:	11 f0       	breq	.+4      	; 0x1a8 <lcd_read+0x8>
 1a4:	5c 9a       	sbi	0x0b, 4	; 11
 1a6:	01 c0       	rjmp	.+2      	; 0x1aa <lcd_read+0xa>
 1a8:	5c 98       	cbi	0x0b, 4	; 11
 1aa:	5d 9a       	sbi	0x0b, 5	; 11
 1ac:	8a b1       	in	r24, 0x0a	; 10
 1ae:	80 7f       	andi	r24, 0xF0	; 240
 1b0:	8a b9       	out	0x0a, r24	; 10
 1b2:	5e 9a       	sbi	0x0b, 6	; 11
 1b4:	00 00       	nop
 1b6:	29 b1       	in	r18, 0x09	; 9
 1b8:	5e 98       	cbi	0x0b, 6	; 11
 1ba:	00 00       	nop
 1bc:	5e 9a       	sbi	0x0b, 6	; 11
 1be:	00 00       	nop
 1c0:	99 b1       	in	r25, 0x09	; 9
 1c2:	22 95       	swap	r18
 1c4:	20 7f       	andi	r18, 0xF0	; 240
 1c6:	89 2f       	mov	r24, r25
 1c8:	8f 70       	andi	r24, 0x0F	; 15
 1ca:	5e 98       	cbi	0x0b, 6	; 11
 1cc:	82 2b       	or	r24, r18
 1ce:	08 95       	ret

000001d0 <lcd_waitbusy>:
 1d0:	80 e0       	ldi	r24, 0x00	; 0
 1d2:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <lcd_read>
 1d6:	88 23       	and	r24, r24
 1d8:	dc f3       	brlt	.-10     	; 0x1d0 <lcd_waitbusy>
 1da:	00 c0       	rjmp	.+0      	; 0x1dc <lcd_waitbusy+0xc>
 1dc:	00 c0       	rjmp	.+0      	; 0x1de <lcd_waitbusy+0xe>
 1de:	80 e0       	ldi	r24, 0x00	; 0
 1e0:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <lcd_read>
 1e4:	08 95       	ret

000001e6 <lcd_command>:
 1e6:	cf 93       	push	r28
 1e8:	c8 2f       	mov	r28, r24
 1ea:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <lcd_waitbusy>
 1ee:	60 e0       	ldi	r22, 0x00	; 0
 1f0:	8c 2f       	mov	r24, r28
 1f2:	0e 94 b1 00 	call	0x162	; 0x162 <lcd_write>
 1f6:	cf 91       	pop	r28
 1f8:	08 95       	ret

000001fa <lcd_gotoxy>:
 1fa:	61 11       	cpse	r22, r1
 1fc:	04 c0       	rjmp	.+8      	; 0x206 <lcd_gotoxy+0xc>
 1fe:	80 58       	subi	r24, 0x80	; 128
 200:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <lcd_command>
 204:	08 95       	ret
 206:	80 54       	subi	r24, 0x40	; 64
 208:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <lcd_command>
 20c:	08 95       	ret

0000020e <lcd_clrscr>:
 20e:	81 e0       	ldi	r24, 0x01	; 1
 210:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <lcd_command>
 214:	08 95       	ret

00000216 <lcd_putc>:
 216:	cf 93       	push	r28
 218:	c8 2f       	mov	r28, r24
 21a:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <lcd_waitbusy>
 21e:	ca 30       	cpi	r28, 0x0A	; 10
 220:	49 f4       	brne	.+18     	; 0x234 <lcd_putc+0x1e>
 222:	80 34       	cpi	r24, 0x40	; 64
 224:	10 f0       	brcs	.+4      	; 0x22a <lcd_putc+0x14>
 226:	80 e0       	ldi	r24, 0x00	; 0
 228:	01 c0       	rjmp	.+2      	; 0x22c <lcd_putc+0x16>
 22a:	80 e4       	ldi	r24, 0x40	; 64
 22c:	80 58       	subi	r24, 0x80	; 128
 22e:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <lcd_command>
 232:	04 c0       	rjmp	.+8      	; 0x23c <lcd_putc+0x26>
 234:	61 e0       	ldi	r22, 0x01	; 1
 236:	8c 2f       	mov	r24, r28
 238:	0e 94 b1 00 	call	0x162	; 0x162 <lcd_write>
 23c:	cf 91       	pop	r28
 23e:	08 95       	ret

00000240 <lcd_puts>:
 240:	cf 93       	push	r28
 242:	df 93       	push	r29
 244:	ec 01       	movw	r28, r24
 246:	21 96       	adiw	r28, 0x01	; 1
 248:	fc 01       	movw	r30, r24
 24a:	80 81       	ld	r24, Z
 24c:	88 23       	and	r24, r24
 24e:	29 f0       	breq	.+10     	; 0x25a <lcd_puts+0x1a>
 250:	0e 94 0b 01 	call	0x216	; 0x216 <lcd_putc>
 254:	89 91       	ld	r24, Y+
 256:	81 11       	cpse	r24, r1
 258:	fb cf       	rjmp	.-10     	; 0x250 <lcd_puts+0x10>
 25a:	df 91       	pop	r29
 25c:	cf 91       	pop	r28
 25e:	08 95       	ret

00000260 <lcd_init>:
>>>>>>> parent of ce7b5b7... Complete!
                   LCD_DISP_ON_CURSOR      display on, cursor on
                   LCD_DISP_CURSOR_BLINK   display on, cursor on flashing
Returns:  none
*************************************************************************/
void lcd_init(uint8_t dispAttr)
{
<<<<<<< HEAD
 21e:	cf 93       	push	r28
 220:	c8 2f       	mov	r28, r24
=======
 260:	cf 93       	push	r28
 262:	c8 2f       	mov	r28, r24
>>>>>>> parent of ce7b5b7... Complete!
      && ( &LCD_RS_PORT == &LCD_DATA0_PORT) && ( &LCD_RW_PORT == &LCD_DATA0_PORT) && (&LCD_E_PORT == &LCD_DATA0_PORT)
      && (LCD_DATA0_PIN == 0 ) && (LCD_DATA1_PIN == 1) && (LCD_DATA2_PIN == 2) && (LCD_DATA3_PIN == 3) 
      && (LCD_RS_PIN == 4 ) && (LCD_RW_PIN == 5) && (LCD_E_PIN == 6 ) )
    {
        /* configure all port bits as output (all LCD lines on same port) */
        DDR(LCD_DATA0_PORT) |= 0x7F;
<<<<<<< HEAD
 222:	9a b1       	in	r25, 0x0a	; 10
 224:	9f 67       	ori	r25, 0x7F	; 127
 226:	9a b9       	out	0x0a, r25	; 10
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 228:	8f e9       	ldi	r24, 0x9F	; 159
 22a:	9f e0       	ldi	r25, 0x0F	; 15
 22c:	01 97       	sbiw	r24, 0x01	; 1
 22e:	f1 f7       	brne	.-4      	; 0x22c <lcd_init+0xe>
 230:	00 c0       	rjmp	.+0      	; 0x232 <lcd_init+0x14>
 232:	00 00       	nop
=======
 264:	9a b1       	in	r25, 0x0a	; 10
 266:	9f 67       	ori	r25, 0x7F	; 127
 268:	9a b9       	out	0x0a, r25	; 10
 26a:	8f e9       	ldi	r24, 0x9F	; 159
 26c:	9f e0       	ldi	r25, 0x0F	; 15
 26e:	01 97       	sbiw	r24, 0x01	; 1
 270:	f1 f7       	brne	.-4      	; 0x26e <lcd_init+0xe>
 272:	00 c0       	rjmp	.+0      	; 0x274 <lcd_init+0x14>
 274:	00 00       	nop
>>>>>>> parent of ce7b5b7... Complete!
        DDR(LCD_DATA3_PORT) |= _BV(LCD_DATA3_PIN);
    }
    delay(LCD_DELAY_BOOTUP);             /* wait 16ms or more after power-on       */
    
    /* initial write to lcd is 8bit */
    LCD_DATA1_PORT |= _BV(LCD_DATA1_PIN);    // LCD_FUNCTION>>4;
<<<<<<< HEAD
 234:	59 9a       	sbi	0x0b, 1	; 11
    LCD_DATA0_PORT |= _BV(LCD_DATA0_PIN);    // LCD_FUNCTION_8BIT>>4;
 236:	58 9a       	sbi	0x0b, 0	; 11
    lcd_e_toggle();
 238:	0e 94 8c 00 	call	0x118	; 0x118 <toggle_e>
 23c:	81 ee       	ldi	r24, 0xE1	; 225
 23e:	94 e0       	ldi	r25, 0x04	; 4
 240:	01 97       	sbiw	r24, 0x01	; 1
 242:	f1 f7       	brne	.-4      	; 0x240 <lcd_init+0x22>
 244:	00 c0       	rjmp	.+0      	; 0x246 <lcd_init+0x28>
 246:	00 00       	nop
=======
 276:	59 9a       	sbi	0x0b, 1	; 11
    LCD_DATA0_PORT |= _BV(LCD_DATA0_PIN);    // LCD_FUNCTION_8BIT>>4;
 278:	58 9a       	sbi	0x0b, 0	; 11
    lcd_e_toggle();
 27a:	0e 94 ad 00 	call	0x15a	; 0x15a <toggle_e>
 27e:	81 ee       	ldi	r24, 0xE1	; 225
 280:	94 e0       	ldi	r25, 0x04	; 4
 282:	01 97       	sbiw	r24, 0x01	; 1
 284:	f1 f7       	brne	.-4      	; 0x282 <lcd_init+0x22>
 286:	00 c0       	rjmp	.+0      	; 0x288 <lcd_init+0x28>
 288:	00 00       	nop
>>>>>>> parent of ce7b5b7... Complete!
    delay(LCD_DELAY_INIT);               /* delay, busy flag can't be checked here */
   
    /* repeat last command */ 
    lcd_e_toggle();      
<<<<<<< HEAD
 248:	0e 94 8c 00 	call	0x118	; 0x118 <toggle_e>
 24c:	95 e1       	ldi	r25, 0x15	; 21
 24e:	9a 95       	dec	r25
 250:	f1 f7       	brne	.-4      	; 0x24e <lcd_init+0x30>
 252:	00 00       	nop
=======
 28a:	0e 94 ad 00 	call	0x15a	; 0x15a <toggle_e>
 28e:	95 e1       	ldi	r25, 0x15	; 21
 290:	9a 95       	dec	r25
 292:	f1 f7       	brne	.-4      	; 0x290 <lcd_init+0x30>
 294:	00 00       	nop
>>>>>>> parent of ce7b5b7... Complete!
    delay(LCD_DELAY_INIT_REP);           /* delay, busy flag can't be checked here */
    
    /* repeat last command a third time */
    lcd_e_toggle();      
<<<<<<< HEAD
 254:	0e 94 8c 00 	call	0x118	; 0x118 <toggle_e>
 258:	85 e1       	ldi	r24, 0x15	; 21
 25a:	8a 95       	dec	r24
 25c:	f1 f7       	brne	.-4      	; 0x25a <lcd_init+0x3c>
 25e:	00 00       	nop
=======
 296:	0e 94 ad 00 	call	0x15a	; 0x15a <toggle_e>
 29a:	85 e1       	ldi	r24, 0x15	; 21
 29c:	8a 95       	dec	r24
 29e:	f1 f7       	brne	.-4      	; 0x29c <lcd_init+0x3c>
 2a0:	00 00       	nop
>>>>>>> parent of ce7b5b7... Complete!
    delay(LCD_DELAY_INIT_REP);           /* delay, busy flag can't be checked here */

    /* now configure for 4bit mode */
    LCD_DATA0_PORT &= ~_BV(LCD_DATA0_PIN);   // LCD_FUNCTION_4BIT_1LINE>>4
<<<<<<< HEAD
 260:	58 98       	cbi	0x0b, 0	; 11
    lcd_e_toggle();
 262:	0e 94 8c 00 	call	0x118	; 0x118 <toggle_e>
 266:	95 e1       	ldi	r25, 0x15	; 21
 268:	9a 95       	dec	r25
 26a:	f1 f7       	brne	.-4      	; 0x268 <lcd_init+0x4a>
 26c:	00 00       	nop
=======
 2a2:	58 98       	cbi	0x0b, 0	; 11
    lcd_e_toggle();
 2a4:	0e 94 ad 00 	call	0x15a	; 0x15a <toggle_e>
 2a8:	95 e1       	ldi	r25, 0x15	; 21
 2aa:	9a 95       	dec	r25
 2ac:	f1 f7       	brne	.-4      	; 0x2aa <lcd_init+0x4a>
 2ae:	00 00       	nop
>>>>>>> parent of ce7b5b7... Complete!
    /* Display with KS0073 controller requires special commands for enabling 4 line mode */
	lcd_command(KS0073_EXTENDED_FUNCTION_REGISTER_ON);
	lcd_command(KS0073_4LINES_MODE);
	lcd_command(KS0073_EXTENDED_FUNCTION_REGISTER_OFF);
#else
    lcd_command(LCD_FUNCTION_DEFAULT);      /* function set: display lines  */
<<<<<<< HEAD
 26e:	88 e2       	ldi	r24, 0x28	; 40
 270:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <lcd_command>
#endif
    lcd_command(LCD_DISP_OFF);              /* display off                  */
 274:	88 e0       	ldi	r24, 0x08	; 8
 276:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <lcd_command>
    lcd_clrscr();                           /* display clear                */ 
 27a:	0e 94 e6 00 	call	0x1cc	; 0x1cc <lcd_clrscr>
    lcd_command(LCD_MODE_DEFAULT);          /* set entry mode               */
 27e:	86 e0       	ldi	r24, 0x06	; 6
 280:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <lcd_command>
    lcd_command(dispAttr);                  /* display/cursor control       */
 284:	8c 2f       	mov	r24, r28
 286:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <lcd_command>

}/* lcd_init */
 28a:	cf 91       	pop	r28
 28c:	08 95       	ret

0000028e <lcd_Write>:

=======
 2b0:	88 e2       	ldi	r24, 0x28	; 40
 2b2:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <lcd_command>
#endif
    lcd_command(LCD_DISP_OFF);              /* display off                  */
 2b6:	88 e0       	ldi	r24, 0x08	; 8
 2b8:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <lcd_command>
    lcd_clrscr();                           /* display clear                */ 
 2bc:	0e 94 07 01 	call	0x20e	; 0x20e <lcd_clrscr>
    lcd_command(LCD_MODE_DEFAULT);          /* set entry mode               */
 2c0:	86 e0       	ldi	r24, 0x06	; 6
 2c2:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <lcd_command>
    lcd_command(dispAttr);                  /* display/cursor control       */
 2c6:	8c 2f       	mov	r24, r28
 2c8:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <lcd_command>

}/* lcd_init */
 2cc:	cf 91       	pop	r28
 2ce:	08 95       	ret

000002d0 <lcd_Write>:
  lcd_write takes in 4 values.  
>>>>>>> parent of ce7b5b7... Complete!
  
 ***************************************
 */

 void lcd_Write( uint16_t adc_reading_lm35, uint16_t adc_reading_diode, uint16_t temperture_lm35, uint16_t temperture_diode ){  //Not Tested
<<<<<<< HEAD
 28e:	af 92       	push	r10
 290:	bf 92       	push	r11
 292:	cf 92       	push	r12
 294:	df 92       	push	r13
 296:	ef 92       	push	r14
 298:	ff 92       	push	r15
 29a:	0f 93       	push	r16
 29c:	1f 93       	push	r17
 29e:	cf 93       	push	r28
 2a0:	df 93       	push	r29
 2a2:	cd b7       	in	r28, 0x3d	; 61
 2a4:	de b7       	in	r29, 0x3e	; 62
 2a6:	a2 97       	sbiw	r28, 0x22	; 34
 2a8:	0f b6       	in	r0, 0x3f	; 63
 2aa:	f8 94       	cli
 2ac:	de bf       	out	0x3e, r29	; 62
 2ae:	0f be       	out	0x3f, r0	; 63
 2b0:	cd bf       	out	0x3d, r28	; 61
 2b2:	d8 2e       	mov	r13, r24
 2b4:	c9 2e       	mov	r12, r25
 2b6:	b6 2e       	mov	r11, r22
 2b8:	a7 2e       	mov	r10, r23
 2ba:	8a 01       	movw	r16, r20
 2bc:	79 01       	movw	r14, r18

	lcd_init( LCD_DISP_ON );   //Turn the LCD on, without cursor.
 2be:	8c e0       	ldi	r24, 0x0C	; 12
 2c0:	0e 94 0f 01 	call	0x21e	; 0x21e <lcd_init>



	// The if statement is to prevent overloading the output since the model allows for 
	// such occurances. 
	if ( (temperture_lm35 < MAX_TEMP) && (temperture_diode < MAX_TEMP) ){
 2c4:	0e 36       	cpi	r16, 0x6E	; 110
 2c6:	11 05       	cpc	r17, r1
 2c8:	08 f0       	brcs	.+2      	; 0x2cc <lcd_Write+0x3e>
 2ca:	9e c0       	rjmp	.+316    	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 2cc:	8e e6       	ldi	r24, 0x6E	; 110
 2ce:	e8 16       	cp	r14, r24
 2d0:	f1 04       	cpc	r15, r1
 2d2:	08 f0       	brcs	.+2      	; 0x2d6 <lcd_Write+0x48>
 2d4:	47 c0       	rjmp	.+142    	; 0x364 <lcd_Write+0xd6>
	
		sprintf(display_line1, "LM35 :%4.0d - %dC", adc_reading_lm35, temperture_lm35);     //First line on the LCD
 2d6:	1f 93       	push	r17
 2d8:	0f 93       	push	r16
 2da:	cf 92       	push	r12
 2dc:	df 92       	push	r13
 2de:	80 e0       	ldi	r24, 0x00	; 0
 2e0:	91 e0       	ldi	r25, 0x01	; 1
 2e2:	9f 93       	push	r25
 2e4:	8f 93       	push	r24
 2e6:	ce 01       	movw	r24, r28
 2e8:	01 96       	adiw	r24, 0x01	; 1
 2ea:	9f 93       	push	r25
 2ec:	8f 93       	push	r24
 2ee:	0e 94 36 04 	call	0x86c	; 0x86c <sprintf>
		sprintf(display_line2, "DIODE:%4.0d - %dC", adc_reading_diode, temperture_diode);   //Second line on the LCD
 2f2:	ff 92       	push	r15
 2f4:	ef 92       	push	r14
 2f6:	af 92       	push	r10
 2f8:	bf 92       	push	r11
 2fa:	82 e1       	ldi	r24, 0x12	; 18
 2fc:	91 e0       	ldi	r25, 0x01	; 1
 2fe:	9f 93       	push	r25
 300:	8f 93       	push	r24
 302:	ce 01       	movw	r24, r28
 304:	42 96       	adiw	r24, 0x12	; 18
 306:	9f 93       	push	r25
 308:	8f 93       	push	r24
 30a:	0e 94 36 04 	call	0x86c	; 0x86c <sprintf>
 30e:	0f b6       	in	r0, 0x3f	; 63
 310:	f8 94       	cli
 312:	de bf       	out	0x3e, r29	; 62
 314:	0f be       	out	0x3f, r0	; 63
 316:	cd bf       	out	0x3d, r28	; 61
 318:	66 c0       	rjmp	.+204    	; 0x3e6 <lcd_Write+0x158>
		
	} else if ( (temperture_lm35 > MAX_TEMP) && (temperture_diode < MAX_TEMP) ) {
 31a:	9e e6       	ldi	r25, 0x6E	; 110
 31c:	e9 16       	cp	r14, r25
 31e:	f1 04       	cpc	r15, r1
 320:	08 f0       	brcs	.+2      	; 0x324 <lcd_Write+0x96>
 322:	44 c0       	rjmp	.+136    	; 0x3ac <lcd_Write+0x11e>
		
		sprintf(display_line1, "LM35 :%4.0d -  :(", adc_reading_lm35);     //First line on the LCD
 324:	cf 92       	push	r12
 326:	df 92       	push	r13
 328:	84 e2       	ldi	r24, 0x24	; 36
 32a:	91 e0       	ldi	r25, 0x01	; 1
 32c:	9f 93       	push	r25
 32e:	8f 93       	push	r24
 330:	ce 01       	movw	r24, r28
 332:	01 96       	adiw	r24, 0x01	; 1
 334:	9f 93       	push	r25
 336:	8f 93       	push	r24
 338:	0e 94 36 04 	call	0x86c	; 0x86c <sprintf>
		sprintf(display_line2, "DIODE:%4.0d - %dC", adc_reading_diode, temperture_diode);   //Second line on the LCD		
 33c:	ff 92       	push	r15
 33e:	ef 92       	push	r14
 340:	af 92       	push	r10
 342:	bf 92       	push	r11
 344:	82 e1       	ldi	r24, 0x12	; 18
 346:	91 e0       	ldi	r25, 0x01	; 1
 348:	9f 93       	push	r25
 34a:	8f 93       	push	r24
 34c:	ce 01       	movw	r24, r28
 34e:	42 96       	adiw	r24, 0x12	; 18
 350:	9f 93       	push	r25
 352:	8f 93       	push	r24
 354:	0e 94 36 04 	call	0x86c	; 0x86c <sprintf>
 358:	0f b6       	in	r0, 0x3f	; 63
 35a:	f8 94       	cli
 35c:	de bf       	out	0x3e, r29	; 62
 35e:	0f be       	out	0x3f, r0	; 63
 360:	cd bf       	out	0x3d, r28	; 61
 362:	41 c0       	rjmp	.+130    	; 0x3e6 <lcd_Write+0x158>
		
	} else if ( (temperture_lm35 < MAX_TEMP) && (temperture_diode > MAX_TEMP) ) {
 364:	9f e6       	ldi	r25, 0x6F	; 111
 366:	e9 16       	cp	r14, r25
 368:	f1 04       	cpc	r15, r1
 36a:	00 f1       	brcs	.+64     	; 0x3ac <lcd_Write+0x11e>
		
		sprintf(display_line1, "LM35 :%4.0d - %dC", adc_reading_lm35, temperture_lm35);     //First line on the LCD
 36c:	1f 93       	push	r17
 36e:	0f 93       	push	r16
 370:	cf 92       	push	r12
 372:	df 92       	push	r13
 374:	80 e0       	ldi	r24, 0x00	; 0
 376:	91 e0       	ldi	r25, 0x01	; 1
 378:	9f 93       	push	r25
 37a:	8f 93       	push	r24
 37c:	ce 01       	movw	r24, r28
 37e:	01 96       	adiw	r24, 0x01	; 1
 380:	9f 93       	push	r25
 382:	8f 93       	push	r24
 384:	0e 94 36 04 	call	0x86c	; 0x86c <sprintf>
		sprintf(display_line2, "DIODE:%4.0d -  :(", adc_reading_diode);   //Second line on the LCD
 388:	af 92       	push	r10
 38a:	bf 92       	push	r11
 38c:	86 e3       	ldi	r24, 0x36	; 54
 38e:	91 e0       	ldi	r25, 0x01	; 1
 390:	9f 93       	push	r25
 392:	8f 93       	push	r24
 394:	ce 01       	movw	r24, r28
 396:	42 96       	adiw	r24, 0x12	; 18
 398:	9f 93       	push	r25
 39a:	8f 93       	push	r24
 39c:	0e 94 36 04 	call	0x86c	; 0x86c <sprintf>
 3a0:	0f b6       	in	r0, 0x3f	; 63
 3a2:	f8 94       	cli
 3a4:	de bf       	out	0x3e, r29	; 62
 3a6:	0f be       	out	0x3f, r0	; 63
 3a8:	cd bf       	out	0x3d, r28	; 61
 3aa:	1d c0       	rjmp	.+58     	; 0x3e6 <lcd_Write+0x158>
		
	} else {
		
		sprintf(display_line1, "LM35 :%4.0d -  :(", adc_reading_lm35);     //First line on the LCD
 3ac:	cf 92       	push	r12
 3ae:	df 92       	push	r13
 3b0:	84 e2       	ldi	r24, 0x24	; 36
 3b2:	91 e0       	ldi	r25, 0x01	; 1
 3b4:	9f 93       	push	r25
 3b6:	8f 93       	push	r24
 3b8:	ce 01       	movw	r24, r28
 3ba:	01 96       	adiw	r24, 0x01	; 1
 3bc:	9f 93       	push	r25
 3be:	8f 93       	push	r24
 3c0:	0e 94 36 04 	call	0x86c	; 0x86c <sprintf>
		sprintf(display_line2, "DIODE:%4.0d -  :(", adc_reading_diode);   //Second line on the LCD		
 3c4:	af 92       	push	r10
 3c6:	bf 92       	push	r11
 3c8:	86 e3       	ldi	r24, 0x36	; 54
 3ca:	91 e0       	ldi	r25, 0x01	; 1
 3cc:	9f 93       	push	r25
 3ce:	8f 93       	push	r24
 3d0:	ce 01       	movw	r24, r28
 3d2:	42 96       	adiw	r24, 0x12	; 18
 3d4:	9f 93       	push	r25
 3d6:	8f 93       	push	r24
 3d8:	0e 94 36 04 	call	0x86c	; 0x86c <sprintf>
 3dc:	0f b6       	in	r0, 0x3f	; 63
 3de:	f8 94       	cli
 3e0:	de bf       	out	0x3e, r29	; 62
 3e2:	0f be       	out	0x3f, r0	; 63
 3e4:	cd bf       	out	0x3d, r28	; 61
=======
 2d0:	af 92       	push	r10
 2d2:	bf 92       	push	r11
 2d4:	cf 92       	push	r12
 2d6:	df 92       	push	r13
 2d8:	ef 92       	push	r14
 2da:	ff 92       	push	r15
 2dc:	0f 93       	push	r16
 2de:	1f 93       	push	r17
 2e0:	cf 93       	push	r28
 2e2:	df 93       	push	r29
 2e4:	cd b7       	in	r28, 0x3d	; 61
 2e6:	de b7       	in	r29, 0x3e	; 62
 2e8:	a2 97       	sbiw	r28, 0x22	; 34
 2ea:	0f b6       	in	r0, 0x3f	; 63
 2ec:	f8 94       	cli
 2ee:	de bf       	out	0x3e, r29	; 62
 2f0:	0f be       	out	0x3f, r0	; 63
 2f2:	cd bf       	out	0x3d, r28	; 61
 2f4:	d8 2e       	mov	r13, r24
 2f6:	c9 2e       	mov	r12, r25
 2f8:	b6 2e       	mov	r11, r22
 2fa:	a7 2e       	mov	r10, r23
 2fc:	8a 01       	movw	r16, r20
 2fe:	79 01       	movw	r14, r18

	lcd_init( LCD_DISP_ON );   //Turn the LCD on, without cursor.
 300:	8c e0       	ldi	r24, 0x0C	; 12
 302:	0e 94 30 01 	call	0x260	; 0x260 <lcd_init>

	char display_line1[17];   //Allocate memory for each line. char = 1B and theres a max of 16 char.
	char display_line2[17];   // 1B for the NULL character produced by sprintf.
	
	if ( (temperture_lm35 < 99) && (temperture_diode < 99) ){
 306:	03 36       	cpi	r16, 0x63	; 99
 308:	11 05       	cpc	r17, r1
 30a:	08 f0       	brcs	.+2      	; 0x30e <lcd_Write+0x3e>
 30c:	9e c0       	rjmp	.+316    	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 30e:	83 e6       	ldi	r24, 0x63	; 99
 310:	e8 16       	cp	r14, r24
 312:	f1 04       	cpc	r15, r1
 314:	08 f0       	brcs	.+2      	; 0x318 <lcd_Write+0x48>
 316:	47 c0       	rjmp	.+142    	; 0x3a6 <lcd_Write+0xd6>
	
		sprintf(display_line1, "LM35 :%4.0d - %2dC", adc_reading_lm35, temperture_lm35);     //First line on the LCD
 318:	1f 93       	push	r17
 31a:	0f 93       	push	r16
 31c:	cf 92       	push	r12
 31e:	df 92       	push	r13
 320:	80 e0       	ldi	r24, 0x00	; 0
 322:	91 e0       	ldi	r25, 0x01	; 1
 324:	9f 93       	push	r25
 326:	8f 93       	push	r24
 328:	ce 01       	movw	r24, r28
 32a:	01 96       	adiw	r24, 0x01	; 1
 32c:	9f 93       	push	r25
 32e:	8f 93       	push	r24
 330:	0e 94 a7 04 	call	0x94e	; 0x94e <sprintf>
		sprintf(display_line2, "DIODE:%4.0d - %2dC", adc_reading_diode, temperture_diode);   //Second line on the LCD
 334:	ff 92       	push	r15
 336:	ef 92       	push	r14
 338:	af 92       	push	r10
 33a:	bf 92       	push	r11
 33c:	83 e1       	ldi	r24, 0x13	; 19
 33e:	91 e0       	ldi	r25, 0x01	; 1
 340:	9f 93       	push	r25
 342:	8f 93       	push	r24
 344:	ce 01       	movw	r24, r28
 346:	42 96       	adiw	r24, 0x12	; 18
 348:	9f 93       	push	r25
 34a:	8f 93       	push	r24
 34c:	0e 94 a7 04 	call	0x94e	; 0x94e <sprintf>
 350:	0f b6       	in	r0, 0x3f	; 63
 352:	f8 94       	cli
 354:	de bf       	out	0x3e, r29	; 62
 356:	0f be       	out	0x3f, r0	; 63
 358:	cd bf       	out	0x3d, r28	; 61
 35a:	66 c0       	rjmp	.+204    	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
		
	} else if ( (temperture_lm35 > 99) && (temperture_diode < 99) ) {
 35c:	93 e6       	ldi	r25, 0x63	; 99
 35e:	e9 16       	cp	r14, r25
 360:	f1 04       	cpc	r15, r1
 362:	08 f0       	brcs	.+2      	; 0x366 <lcd_Write+0x96>
 364:	44 c0       	rjmp	.+136    	; 0x3ee <lcd_Write+0x11e>
		
		sprintf(display_line1, "LM35 :%4.0d - :,C", adc_reading_lm35);     //First line on the LCD
 366:	cf 92       	push	r12
 368:	df 92       	push	r13
 36a:	86 e2       	ldi	r24, 0x26	; 38
 36c:	91 e0       	ldi	r25, 0x01	; 1
 36e:	9f 93       	push	r25
 370:	8f 93       	push	r24
 372:	ce 01       	movw	r24, r28
 374:	01 96       	adiw	r24, 0x01	; 1
 376:	9f 93       	push	r25
 378:	8f 93       	push	r24
 37a:	0e 94 a7 04 	call	0x94e	; 0x94e <sprintf>
		sprintf(display_line2, "DIODE:%4.0d - %2dC", adc_reading_diode, temperture_diode);   //Second line on the LCD		
 37e:	ff 92       	push	r15
 380:	ef 92       	push	r14
 382:	af 92       	push	r10
 384:	bf 92       	push	r11
 386:	83 e1       	ldi	r24, 0x13	; 19
 388:	91 e0       	ldi	r25, 0x01	; 1
 38a:	9f 93       	push	r25
 38c:	8f 93       	push	r24
 38e:	ce 01       	movw	r24, r28
 390:	42 96       	adiw	r24, 0x12	; 18
 392:	9f 93       	push	r25
 394:	8f 93       	push	r24
 396:	0e 94 a7 04 	call	0x94e	; 0x94e <sprintf>
 39a:	0f b6       	in	r0, 0x3f	; 63
 39c:	f8 94       	cli
 39e:	de bf       	out	0x3e, r29	; 62
 3a0:	0f be       	out	0x3f, r0	; 63
 3a2:	cd bf       	out	0x3d, r28	; 61
 3a4:	41 c0       	rjmp	.+130    	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
		
	} else if ( (temperture_lm35 < 99) && (temperture_diode > 99) ) {
 3a6:	94 e6       	ldi	r25, 0x64	; 100
 3a8:	e9 16       	cp	r14, r25
 3aa:	f1 04       	cpc	r15, r1
 3ac:	00 f1       	brcs	.+64     	; 0x3ee <lcd_Write+0x11e>
		
		sprintf(display_line1, "LM35 :%4.0d - %dC", adc_reading_lm35, temperture_lm35);     //First line on the LCD
 3ae:	1f 93       	push	r17
 3b0:	0f 93       	push	r16
 3b2:	cf 92       	push	r12
 3b4:	df 92       	push	r13
 3b6:	88 e3       	ldi	r24, 0x38	; 56
 3b8:	91 e0       	ldi	r25, 0x01	; 1
 3ba:	9f 93       	push	r25
 3bc:	8f 93       	push	r24
 3be:	ce 01       	movw	r24, r28
 3c0:	01 96       	adiw	r24, 0x01	; 1
 3c2:	9f 93       	push	r25
 3c4:	8f 93       	push	r24
 3c6:	0e 94 a7 04 	call	0x94e	; 0x94e <sprintf>
		sprintf(display_line2, "DIODE:%4.0d - :'C", adc_reading_diode);   //Second line on the LCD
 3ca:	af 92       	push	r10
 3cc:	bf 92       	push	r11
 3ce:	8a e4       	ldi	r24, 0x4A	; 74
 3d0:	91 e0       	ldi	r25, 0x01	; 1
 3d2:	9f 93       	push	r25
 3d4:	8f 93       	push	r24
 3d6:	ce 01       	movw	r24, r28
 3d8:	42 96       	adiw	r24, 0x12	; 18
 3da:	9f 93       	push	r25
 3dc:	8f 93       	push	r24
 3de:	0e 94 a7 04 	call	0x94e	; 0x94e <sprintf>
 3e2:	0f b6       	in	r0, 0x3f	; 63
 3e4:	f8 94       	cli
 3e6:	de bf       	out	0x3e, r29	; 62
 3e8:	0f be       	out	0x3f, r0	; 63
 3ea:	cd bf       	out	0x3d, r28	; 61
 3ec:	1d c0       	rjmp	.+58     	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
		
	} else {
		
		sprintf(display_line1, "LM35 :%4.0d - :,C", adc_reading_lm35);     //First line on the LCD
 3ee:	cf 92       	push	r12
 3f0:	df 92       	push	r13
 3f2:	86 e2       	ldi	r24, 0x26	; 38
 3f4:	91 e0       	ldi	r25, 0x01	; 1
 3f6:	9f 93       	push	r25
 3f8:	8f 93       	push	r24
 3fa:	ce 01       	movw	r24, r28
 3fc:	01 96       	adiw	r24, 0x01	; 1
 3fe:	9f 93       	push	r25
 400:	8f 93       	push	r24
 402:	0e 94 a7 04 	call	0x94e	; 0x94e <sprintf>
		sprintf(display_line2, "DIODE:%4.0d - :'C", adc_reading_diode);   //Second line on the LCD		
 406:	af 92       	push	r10
 408:	bf 92       	push	r11
 40a:	8a e4       	ldi	r24, 0x4A	; 74
 40c:	91 e0       	ldi	r25, 0x01	; 1
 40e:	9f 93       	push	r25
 410:	8f 93       	push	r24
 412:	ce 01       	movw	r24, r28
 414:	42 96       	adiw	r24, 0x12	; 18
 416:	9f 93       	push	r25
 418:	8f 93       	push	r24
 41a:	0e 94 a7 04 	call	0x94e	; 0x94e <sprintf>
 41e:	0f b6       	in	r0, 0x3f	; 63
 420:	f8 94       	cli
 422:	de bf       	out	0x3e, r29	; 62
 424:	0f be       	out	0x3f, r0	; 63
 426:	cd bf       	out	0x3d, r28	; 61
>>>>>>> parent of ce7b5b7... Complete!
		
	}

	lcd_gotoxy((uint8_t) 0x0, (uint8_t) 0x0);    //Move cursor to the first line
<<<<<<< HEAD
 3e6:	60 e0       	ldi	r22, 0x00	; 0
 3e8:	80 e0       	ldi	r24, 0x00	; 0
 3ea:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <lcd_gotoxy>
	lcd_puts( display_line1 );               //display line 1
 3ee:	ce 01       	movw	r24, r28
 3f0:	01 96       	adiw	r24, 0x01	; 1
 3f2:	0e 94 ff 00 	call	0x1fe	; 0x1fe <lcd_puts>
	lcd_gotoxy((uint8_t) 0x0, (uint8_t) 0x1);    //Move cursor to the second line
 3f6:	61 e0       	ldi	r22, 0x01	; 1
 3f8:	80 e0       	ldi	r24, 0x00	; 0
 3fa:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <lcd_gotoxy>
	lcd_puts( display_line2 );                //display line 2
 3fe:	ce 01       	movw	r24, r28
 400:	42 96       	adiw	r24, 0x12	; 18
 402:	0e 94 ff 00 	call	0x1fe	; 0x1fe <lcd_puts>
 406:	05 c0       	rjmp	.+10     	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
	if ( (temperture_lm35 < MAX_TEMP) && (temperture_diode < MAX_TEMP) ){
=======
 428:	60 e0       	ldi	r22, 0x00	; 0
 42a:	80 e0       	ldi	r24, 0x00	; 0
 42c:	0e 94 fd 00 	call	0x1fa	; 0x1fa <lcd_gotoxy>
	lcd_puts( display_line1 );               //display line 1
 430:	ce 01       	movw	r24, r28
 432:	01 96       	adiw	r24, 0x01	; 1
 434:	0e 94 20 01 	call	0x240	; 0x240 <lcd_puts>
	lcd_gotoxy((uint8_t) 0x0, (uint8_t) 0x1);    //Move cursor to the second line
 438:	61 e0       	ldi	r22, 0x01	; 1
 43a:	80 e0       	ldi	r24, 0x00	; 0
 43c:	0e 94 fd 00 	call	0x1fa	; 0x1fa <lcd_gotoxy>
	lcd_puts( display_line2 );                //display line 2
 440:	ce 01       	movw	r24, r28
 442:	42 96       	adiw	r24, 0x12	; 18
 444:	0e 94 20 01 	call	0x240	; 0x240 <lcd_puts>
 448:	05 c0       	rjmp	.+10     	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
	if ( (temperture_lm35 < 99) && (temperture_diode < 99) ){
>>>>>>> parent of ce7b5b7... Complete!
	
		sprintf(display_line1, "LM35 :%4.0d - %dC", adc_reading_lm35, temperture_lm35);     //First line on the LCD
		sprintf(display_line2, "DIODE:%4.0d - %dC", adc_reading_diode, temperture_diode);   //Second line on the LCD
		
<<<<<<< HEAD
	} else if ( (temperture_lm35 > MAX_TEMP) && (temperture_diode < MAX_TEMP) ) {
 408:	0f 36       	cpi	r16, 0x6F	; 111
 40a:	11 05       	cpc	r17, r1
 40c:	08 f0       	brcs	.+2      	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
 40e:	85 cf       	rjmp	.-246    	; 0x31a <lcd_Write+0x8c>
 410:	cd cf       	rjmp	.-102    	; 0x3ac <lcd_Write+0x11e>
=======
	} else if ( (temperture_lm35 > 99) && (temperture_diode < 99) ) {
 44a:	04 36       	cpi	r16, 0x64	; 100
 44c:	11 05       	cpc	r17, r1
 44e:	08 f0       	brcs	.+2      	; 0x452 <__LOCK_REGION_LENGTH__+0x52>
 450:	85 cf       	rjmp	.-246    	; 0x35c <lcd_Write+0x8c>
 452:	cd cf       	rjmp	.-102    	; 0x3ee <lcd_Write+0x11e>
>>>>>>> parent of ce7b5b7... Complete!
	lcd_gotoxy((uint8_t) 0x0, (uint8_t) 0x0);    //Move cursor to the first line
	lcd_puts( display_line1 );               //display line 1
	lcd_gotoxy((uint8_t) 0x0, (uint8_t) 0x1);    //Move cursor to the second line
	lcd_puts( display_line2 );                //display line 2
	
 }
<<<<<<< HEAD
 412:	a2 96       	adiw	r28, 0x22	; 34
 414:	0f b6       	in	r0, 0x3f	; 63
 416:	f8 94       	cli
 418:	de bf       	out	0x3e, r29	; 62
 41a:	0f be       	out	0x3f, r0	; 63
 41c:	cd bf       	out	0x3d, r28	; 61
 41e:	df 91       	pop	r29
 420:	cf 91       	pop	r28
 422:	1f 91       	pop	r17
 424:	0f 91       	pop	r16
 426:	ff 90       	pop	r15
 428:	ef 90       	pop	r14
 42a:	df 90       	pop	r13
 42c:	cf 90       	pop	r12
 42e:	bf 90       	pop	r11
 430:	af 90       	pop	r10
 432:	08 95       	ret

00000434 <main>:
=======
 454:	a2 96       	adiw	r28, 0x22	; 34
 456:	0f b6       	in	r0, 0x3f	; 63
 458:	f8 94       	cli
 45a:	de bf       	out	0x3e, r29	; 62
 45c:	0f be       	out	0x3f, r0	; 63
 45e:	cd bf       	out	0x3d, r28	; 61
 460:	df 91       	pop	r29
 462:	cf 91       	pop	r28
 464:	1f 91       	pop	r17
 466:	0f 91       	pop	r16
 468:	ff 90       	pop	r15
 46a:	ef 90       	pop	r14
 46c:	df 90       	pop	r13
 46e:	cf 90       	pop	r12
 470:	bf 90       	pop	r11
 472:	af 90       	pop	r10
 474:	08 95       	ret

00000476 <main>:
>>>>>>> parent of ce7b5b7... Complete!
from 1 to 129. Thus, one does not need to use \c clock_div_t type as argument.
*/
void clock_prescale_set(clock_div_t __x)
{
    uint8_t __tmp = _BV(CLKPCE);
<<<<<<< HEAD
    __asm__ __volatile__ (
 434:	90 e0       	ldi	r25, 0x00	; 0
 436:	80 e8       	ldi	r24, 0x80	; 128
 438:	0f b6       	in	r0, 0x3f	; 63
 43a:	f8 94       	cli
 43c:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
 440:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
 444:	0f be       	out	0x3f, r0	; 63
 446:	c0 e8       	ldi	r28, 0x80	; 128
 448:	f1 2c       	mov	r15, r1
 44a:	2f 2d       	mov	r18, r15
 44c:	0f b6       	in	r0, 0x3f	; 63
 44e:	f8 94       	cli
 450:	c0 93 61 00 	sts	0x0061, r28	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
 454:	20 93 61 00 	sts	0x0061, r18	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
 458:	0f be       	out	0x3f, r0	; 63
=======
     __asm__ __volatile__ (
 476:	90 e0       	ldi	r25, 0x00	; 0
 478:	80 e8       	ldi	r24, 0x80	; 128
 47a:	0f b6       	in	r0, 0x3f	; 63
 47c:	f8 94       	cli
 47e:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
 482:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
 486:	0f be       	out	0x3f, r0	; 63
 488:	c0 e8       	ldi	r28, 0x80	; 128
 48a:	f1 2c       	mov	r15, r1
 48c:	2f 2d       	mov	r18, r15
 48e:	0f b6       	in	r0, 0x3f	; 63
 490:	f8 94       	cli
 492:	c0 93 61 00 	sts	0x0061, r28	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
 496:	20 93 61 00 	sts	0x0061, r18	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
 49a:	0f be       	out	0x3f, r0	; 63
>>>>>>> parent of ce7b5b7... Complete!

	while(1){

		clock_prescale_set(clock_div_1); //Set freq to 8MHZ

		adc_reading_lm35 = ADCRead(LM35_pin);  //Reads ADC, the input is the pin number of the ADC
<<<<<<< HEAD
 45a:	8f 2d       	mov	r24, r15
 45c:	0e 94 4b 00 	call	0x96	; 0x96 <ADCRead>
 460:	5c 01       	movw	r10, r24
		adc_reading_diode = ADCRead(Diode_pin);
 462:	81 e0       	ldi	r24, 0x01	; 1
 464:	0e 94 4b 00 	call	0x96	; 0x96 <ADCRead>
 468:	8c 01       	movw	r16, r24
		
		temperture_lm35 = temperture_model_lm35(adc_reading_lm35);
 46a:	c5 01       	movw	r24, r10
 46c:	0e 94 80 02 	call	0x500	; 0x500 <temperture_model_lm35>
 470:	6c 01       	movw	r12, r24
		temperture_diode = temperture_model_diode(adc_reading_diode);
 472:	c8 01       	movw	r24, r16
 474:	0e 94 4b 02 	call	0x496	; 0x496 <temperture_model_diode>
 478:	23 e0       	ldi	r18, 0x03	; 3
 47a:	0f b6       	in	r0, 0x3f	; 63
 47c:	f8 94       	cli
 47e:	c0 93 61 00 	sts	0x0061, r28	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
 482:	20 93 61 00 	sts	0x0061, r18	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
 486:	0f be       	out	0x3f, r0	; 63
		
		clock_prescale_set(clock_div_8);  //For some reason the display doesnt like 8MHz, but works fine with 1MHZ
		lcd_Write(adc_reading_lm35, adc_reading_diode, temperture_lm35, temperture_diode);
 488:	9c 01       	movw	r18, r24
 48a:	a6 01       	movw	r20, r12
 48c:	b8 01       	movw	r22, r16
 48e:	c5 01       	movw	r24, r10
 490:	0e 94 47 01 	call	0x28e	; 0x28e <lcd_Write>
	}
 494:	da cf       	rjmp	.-76     	; 0x44a <main+0x16>

00000496 <temperture_model_diode>:
#include "TempModel.h"


uint16_t temperture_model_diode( uint16_t adc_value ){     //Assuming the ADC output is less than 1024
 496:	cf 92       	push	r12
 498:	df 92       	push	r13
 49a:	ef 92       	push	r14
 49c:	ff 92       	push	r15
 49e:	0f 93       	push	r16
 4a0:	1f 93       	push	r17

=======
 49c:	8f 2d       	mov	r24, r15
 49e:	0e 94 4b 00 	call	0x96	; 0x96 <ADCRead>
 4a2:	5c 01       	movw	r10, r24
		adc_reading_diode = ADCRead(Diode_pin);
 4a4:	81 e0       	ldi	r24, 0x01	; 1
 4a6:	0e 94 4b 00 	call	0x96	; 0x96 <ADCRead>
 4aa:	8c 01       	movw	r16, r24
		
		temperture_lm35 = temperture_model(adc_reading_lm35);
 4ac:	c5 01       	movw	r24, r10
 4ae:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <temperture_model>
 4b2:	6c 01       	movw	r12, r24
		temperture_diode = temperture_model(adc_reading_diode);
 4b4:	c8 01       	movw	r24, r16
 4b6:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <temperture_model>
 4ba:	23 e0       	ldi	r18, 0x03	; 3
 4bc:	0f b6       	in	r0, 0x3f	; 63
 4be:	f8 94       	cli
 4c0:	c0 93 61 00 	sts	0x0061, r28	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
 4c4:	20 93 61 00 	sts	0x0061, r18	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
 4c8:	0f be       	out	0x3f, r0	; 63
		
		clock_prescale_set(clock_div_8);  //For some reason the display doesnt like 8MHz, but works fine with 1MHZ
		lcd_Write(adc_reading_lm35, adc_reading_diode, temperture_lm35, temperture_diode);
 4ca:	9c 01       	movw	r18, r24
 4cc:	a6 01       	movw	r20, r12
 4ce:	b8 01       	movw	r22, r16
 4d0:	c5 01       	movw	r24, r10
 4d2:	0e 94 68 01 	call	0x2d0	; 0x2d0 <lcd_Write>
	}
 4d6:	da cf       	rjmp	.-76     	; 0x48c <main+0x16>

000004d8 <temperture_model>:
#include "TempModel.h"


uint16_t temperture_model( uint16_t adc_value ){     //Assuming the ADC output is less than 1024
 4d8:	cf 92       	push	r12
 4da:	df 92       	push	r13
 4dc:	ef 92       	push	r14
 4de:	ff 92       	push	r15
 4e0:	0f 93       	push	r16
 4e2:	1f 93       	push	r17
	
>>>>>>> parent of ce7b5b7... Complete!
	uint32_t buffer = 0;
	uint16_t temperture = 0;
	uint32_t buf_adc;
	
	buf_adc = adc_value * (60.481);
<<<<<<< HEAD
 4a2:	bc 01       	movw	r22, r24
 4a4:	80 e0       	ldi	r24, 0x00	; 0
 4a6:	90 e0       	ldi	r25, 0x00	; 0
 4a8:	0e 94 cc 02 	call	0x598	; 0x598 <__floatunsisf>
 4ac:	2b e8       	ldi	r18, 0x8B	; 139
 4ae:	3c ee       	ldi	r19, 0xEC	; 236
 4b0:	41 e7       	ldi	r20, 0x71	; 113
 4b2:	52 e4       	ldi	r21, 0x42	; 66
 4b4:	0e 94 32 03 	call	0x664	; 0x664 <__mulsf3>
 4b8:	0e 94 9d 02 	call	0x53a	; 0x53a <__fixunssfsi>
	buffer = 28755;
	buffer = buffer - buf_adc;
 4bc:	03 e5       	ldi	r16, 0x53	; 83
 4be:	10 e7       	ldi	r17, 0x70	; 112
 4c0:	20 e0       	ldi	r18, 0x00	; 0
 4c2:	30 e0       	ldi	r19, 0x00	; 0
 4c4:	68 01       	movw	r12, r16
 4c6:	79 01       	movw	r14, r18
 4c8:	c6 1a       	sub	r12, r22
 4ca:	d7 0a       	sbc	r13, r23
 4cc:	e8 0a       	sbc	r14, r24
 4ce:	f9 0a       	sbc	r15, r25
 4d0:	c7 01       	movw	r24, r14
 4d2:	b6 01       	movw	r22, r12

	temperture = (uint16_t) round(buffer / 100);
 4d4:	24 e6       	ldi	r18, 0x64	; 100
 4d6:	30 e0       	ldi	r19, 0x00	; 0
 4d8:	40 e0       	ldi	r20, 0x00	; 0
 4da:	50 e0       	ldi	r21, 0x00	; 0
 4dc:	0e 94 14 04 	call	0x828	; 0x828 <__udivmodsi4>
 4e0:	ca 01       	movw	r24, r20
 4e2:	b9 01       	movw	r22, r18
 4e4:	0e 94 cc 02 	call	0x598	; 0x598 <__floatunsisf>
 4e8:	0e 94 9f 03 	call	0x73e	; 0x73e <round>
 4ec:	0e 94 9d 02 	call	0x53a	; 0x53a <__fixunssfsi>
	
	return temperture;
	
}
 4f0:	cb 01       	movw	r24, r22
 4f2:	1f 91       	pop	r17
 4f4:	0f 91       	pop	r16
 4f6:	ff 90       	pop	r15
 4f8:	ef 90       	pop	r14
 4fa:	df 90       	pop	r13
 4fc:	cf 90       	pop	r12
 4fe:	08 95       	ret

00000500 <temperture_model_lm35>:
uint16_t temperture_model_lm35( uint16_t adc_value ){
	
	uint32_t buffer = 0;
	uint16_t temperture = 0;
	
	buffer = adc_value * (10.753);
 500:	bc 01       	movw	r22, r24
 502:	80 e0       	ldi	r24, 0x00	; 0
 504:	90 e0       	ldi	r25, 0x00	; 0
 506:	0e 94 cc 02 	call	0x598	; 0x598 <__floatunsisf>
 50a:	2a e4       	ldi	r18, 0x4A	; 74
 50c:	3c e0       	ldi	r19, 0x0C	; 12
 50e:	4c e2       	ldi	r20, 0x2C	; 44
 510:	51 e4       	ldi	r21, 0x41	; 65
 512:	0e 94 32 03 	call	0x664	; 0x664 <__mulsf3>
 516:	0e 94 9d 02 	call	0x53a	; 0x53a <__fixunssfsi>
	
	temperture = (uint16_t) round(buffer / 100);
 51a:	24 e6       	ldi	r18, 0x64	; 100
 51c:	30 e0       	ldi	r19, 0x00	; 0
 51e:	40 e0       	ldi	r20, 0x00	; 0
 520:	50 e0       	ldi	r21, 0x00	; 0
 522:	0e 94 14 04 	call	0x828	; 0x828 <__udivmodsi4>
 526:	ca 01       	movw	r24, r20
 528:	b9 01       	movw	r22, r18
 52a:	0e 94 cc 02 	call	0x598	; 0x598 <__floatunsisf>
 52e:	0e 94 9f 03 	call	0x73e	; 0x73e <round>
 532:	0e 94 9d 02 	call	0x53a	; 0x53a <__fixunssfsi>
	
	return temperture;	
	
	
 536:	cb 01       	movw	r24, r22
 538:	08 95       	ret

0000053a <__fixunssfsi>:
 53a:	0e 94 11 03 	call	0x622	; 0x622 <__fp_splitA>
 53e:	88 f0       	brcs	.+34     	; 0x562 <__fixunssfsi+0x28>
 540:	9f 57       	subi	r25, 0x7F	; 127
 542:	98 f0       	brcs	.+38     	; 0x56a <__fixunssfsi+0x30>
 544:	b9 2f       	mov	r27, r25
 546:	99 27       	eor	r25, r25
 548:	b7 51       	subi	r27, 0x17	; 23
 54a:	b0 f0       	brcs	.+44     	; 0x578 <__fixunssfsi+0x3e>
 54c:	e1 f0       	breq	.+56     	; 0x586 <__fixunssfsi+0x4c>
 54e:	66 0f       	add	r22, r22
 550:	77 1f       	adc	r23, r23
 552:	88 1f       	adc	r24, r24
 554:	99 1f       	adc	r25, r25
 556:	1a f0       	brmi	.+6      	; 0x55e <__fixunssfsi+0x24>
 558:	ba 95       	dec	r27
 55a:	c9 f7       	brne	.-14     	; 0x54e <__fixunssfsi+0x14>
 55c:	14 c0       	rjmp	.+40     	; 0x586 <__fixunssfsi+0x4c>
 55e:	b1 30       	cpi	r27, 0x01	; 1
 560:	91 f0       	breq	.+36     	; 0x586 <__fixunssfsi+0x4c>
 562:	0e 94 2b 03 	call	0x656	; 0x656 <__fp_zero>
 566:	b1 e0       	ldi	r27, 0x01	; 1
 568:	08 95       	ret
 56a:	0c 94 2b 03 	jmp	0x656	; 0x656 <__fp_zero>
 56e:	67 2f       	mov	r22, r23
 570:	78 2f       	mov	r23, r24
 572:	88 27       	eor	r24, r24
 574:	b8 5f       	subi	r27, 0xF8	; 248
 576:	39 f0       	breq	.+14     	; 0x586 <__fixunssfsi+0x4c>
 578:	b9 3f       	cpi	r27, 0xF9	; 249
 57a:	cc f3       	brlt	.-14     	; 0x56e <__fixunssfsi+0x34>
 57c:	86 95       	lsr	r24
 57e:	77 95       	ror	r23
 580:	67 95       	ror	r22
 582:	b3 95       	inc	r27
 584:	d9 f7       	brne	.-10     	; 0x57c <__fixunssfsi+0x42>
 586:	3e f4       	brtc	.+14     	; 0x596 <__fixunssfsi+0x5c>
 588:	90 95       	com	r25
 58a:	80 95       	com	r24
 58c:	70 95       	com	r23
 58e:	61 95       	neg	r22
 590:	7f 4f       	sbci	r23, 0xFF	; 255
 592:	8f 4f       	sbci	r24, 0xFF	; 255
 594:	9f 4f       	sbci	r25, 0xFF	; 255
 596:	08 95       	ret

00000598 <__floatunsisf>:
 598:	e8 94       	clt
 59a:	09 c0       	rjmp	.+18     	; 0x5ae <__floatsisf+0x12>

0000059c <__floatsisf>:
 59c:	97 fb       	bst	r25, 7
 59e:	3e f4       	brtc	.+14     	; 0x5ae <__floatsisf+0x12>
 5a0:	90 95       	com	r25
 5a2:	80 95       	com	r24
 5a4:	70 95       	com	r23
 5a6:	61 95       	neg	r22
 5a8:	7f 4f       	sbci	r23, 0xFF	; 255
 5aa:	8f 4f       	sbci	r24, 0xFF	; 255
 5ac:	9f 4f       	sbci	r25, 0xFF	; 255
 5ae:	99 23       	and	r25, r25
 5b0:	a9 f0       	breq	.+42     	; 0x5dc <__floatsisf+0x40>
 5b2:	f9 2f       	mov	r31, r25
 5b4:	96 e9       	ldi	r25, 0x96	; 150
 5b6:	bb 27       	eor	r27, r27
 5b8:	93 95       	inc	r25
 5ba:	f6 95       	lsr	r31
 5bc:	87 95       	ror	r24
 5be:	77 95       	ror	r23
 5c0:	67 95       	ror	r22
 5c2:	b7 95       	ror	r27
 5c4:	f1 11       	cpse	r31, r1
 5c6:	f8 cf       	rjmp	.-16     	; 0x5b8 <__floatsisf+0x1c>
 5c8:	fa f4       	brpl	.+62     	; 0x608 <__floatsisf+0x6c>
 5ca:	bb 0f       	add	r27, r27
 5cc:	11 f4       	brne	.+4      	; 0x5d2 <__floatsisf+0x36>
 5ce:	60 ff       	sbrs	r22, 0
 5d0:	1b c0       	rjmp	.+54     	; 0x608 <__floatsisf+0x6c>
 5d2:	6f 5f       	subi	r22, 0xFF	; 255
 5d4:	7f 4f       	sbci	r23, 0xFF	; 255
 5d6:	8f 4f       	sbci	r24, 0xFF	; 255
 5d8:	9f 4f       	sbci	r25, 0xFF	; 255
 5da:	16 c0       	rjmp	.+44     	; 0x608 <__floatsisf+0x6c>
 5dc:	88 23       	and	r24, r24
 5de:	11 f0       	breq	.+4      	; 0x5e4 <__floatsisf+0x48>
 5e0:	96 e9       	ldi	r25, 0x96	; 150
 5e2:	11 c0       	rjmp	.+34     	; 0x606 <__floatsisf+0x6a>
 5e4:	77 23       	and	r23, r23
 5e6:	21 f0       	breq	.+8      	; 0x5f0 <__floatsisf+0x54>
 5e8:	9e e8       	ldi	r25, 0x8E	; 142
 5ea:	87 2f       	mov	r24, r23
 5ec:	76 2f       	mov	r23, r22
 5ee:	05 c0       	rjmp	.+10     	; 0x5fa <__floatsisf+0x5e>
 5f0:	66 23       	and	r22, r22
 5f2:	71 f0       	breq	.+28     	; 0x610 <__floatsisf+0x74>
 5f4:	96 e8       	ldi	r25, 0x86	; 134
 5f6:	86 2f       	mov	r24, r22
 5f8:	70 e0       	ldi	r23, 0x00	; 0
 5fa:	60 e0       	ldi	r22, 0x00	; 0
 5fc:	2a f0       	brmi	.+10     	; 0x608 <__floatsisf+0x6c>
 5fe:	9a 95       	dec	r25
 600:	66 0f       	add	r22, r22
 602:	77 1f       	adc	r23, r23
 604:	88 1f       	adc	r24, r24
 606:	da f7       	brpl	.-10     	; 0x5fe <__floatsisf+0x62>
 608:	88 0f       	add	r24, r24
 60a:	96 95       	lsr	r25
 60c:	87 95       	ror	r24
 60e:	97 f9       	bld	r25, 7
 610:	08 95       	ret

00000612 <__fp_split3>:
 612:	57 fd       	sbrc	r21, 7
 614:	90 58       	subi	r25, 0x80	; 128
 616:	44 0f       	add	r20, r20
 618:	55 1f       	adc	r21, r21
 61a:	59 f0       	breq	.+22     	; 0x632 <__fp_splitA+0x10>
 61c:	5f 3f       	cpi	r21, 0xFF	; 255
 61e:	71 f0       	breq	.+28     	; 0x63c <__fp_splitA+0x1a>
 620:	47 95       	ror	r20

00000622 <__fp_splitA>:
 622:	88 0f       	add	r24, r24
 624:	97 fb       	bst	r25, 7
 626:	99 1f       	adc	r25, r25
 628:	61 f0       	breq	.+24     	; 0x642 <__fp_splitA+0x20>
 62a:	9f 3f       	cpi	r25, 0xFF	; 255
 62c:	79 f0       	breq	.+30     	; 0x64c <__fp_splitA+0x2a>
 62e:	87 95       	ror	r24
 630:	08 95       	ret
 632:	12 16       	cp	r1, r18
 634:	13 06       	cpc	r1, r19
 636:	14 06       	cpc	r1, r20
 638:	55 1f       	adc	r21, r21
 63a:	f2 cf       	rjmp	.-28     	; 0x620 <__fp_split3+0xe>
 63c:	46 95       	lsr	r20
 63e:	f1 df       	rcall	.-30     	; 0x622 <__fp_splitA>
 640:	08 c0       	rjmp	.+16     	; 0x652 <__fp_splitA+0x30>
 642:	16 16       	cp	r1, r22
 644:	17 06       	cpc	r1, r23
 646:	18 06       	cpc	r1, r24
 648:	99 1f       	adc	r25, r25
 64a:	f1 cf       	rjmp	.-30     	; 0x62e <__fp_splitA+0xc>
 64c:	86 95       	lsr	r24
 64e:	71 05       	cpc	r23, r1
 650:	61 05       	cpc	r22, r1
 652:	08 94       	sec
 654:	08 95       	ret

00000656 <__fp_zero>:
 656:	e8 94       	clt

00000658 <__fp_szero>:
 658:	bb 27       	eor	r27, r27
 65a:	66 27       	eor	r22, r22
 65c:	77 27       	eor	r23, r23
 65e:	cb 01       	movw	r24, r22
 660:	97 f9       	bld	r25, 7
 662:	08 95       	ret

00000664 <__mulsf3>:
 664:	0e 94 45 03 	call	0x68a	; 0x68a <__mulsf3x>
 668:	0c 94 03 04 	jmp	0x806	; 0x806 <__fp_round>
 66c:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__fp_pscA>
 670:	38 f0       	brcs	.+14     	; 0x680 <__mulsf3+0x1c>
 672:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <__fp_pscB>
 676:	20 f0       	brcs	.+8      	; 0x680 <__mulsf3+0x1c>
 678:	95 23       	and	r25, r21
 67a:	11 f0       	breq	.+4      	; 0x680 <__mulsf3+0x1c>
 67c:	0c 94 c3 03 	jmp	0x786	; 0x786 <__fp_inf>
 680:	0c 94 f2 03 	jmp	0x7e4	; 0x7e4 <__fp_nan>
 684:	11 24       	eor	r1, r1
 686:	0c 94 2c 03 	jmp	0x658	; 0x658 <__fp_szero>

0000068a <__mulsf3x>:
 68a:	0e 94 09 03 	call	0x612	; 0x612 <__fp_split3>
 68e:	70 f3       	brcs	.-36     	; 0x66c <__mulsf3+0x8>

00000690 <__mulsf3_pse>:
 690:	95 9f       	mul	r25, r21
 692:	c1 f3       	breq	.-16     	; 0x684 <__mulsf3+0x20>
 694:	95 0f       	add	r25, r21
 696:	50 e0       	ldi	r21, 0x00	; 0
 698:	55 1f       	adc	r21, r21
 69a:	62 9f       	mul	r22, r18
 69c:	f0 01       	movw	r30, r0
 69e:	72 9f       	mul	r23, r18
 6a0:	bb 27       	eor	r27, r27
 6a2:	f0 0d       	add	r31, r0
 6a4:	b1 1d       	adc	r27, r1
 6a6:	63 9f       	mul	r22, r19
 6a8:	aa 27       	eor	r26, r26
 6aa:	f0 0d       	add	r31, r0
 6ac:	b1 1d       	adc	r27, r1
 6ae:	aa 1f       	adc	r26, r26
 6b0:	64 9f       	mul	r22, r20
 6b2:	66 27       	eor	r22, r22
 6b4:	b0 0d       	add	r27, r0
 6b6:	a1 1d       	adc	r26, r1
 6b8:	66 1f       	adc	r22, r22
 6ba:	82 9f       	mul	r24, r18
 6bc:	22 27       	eor	r18, r18
 6be:	b0 0d       	add	r27, r0
 6c0:	a1 1d       	adc	r26, r1
 6c2:	62 1f       	adc	r22, r18
 6c4:	73 9f       	mul	r23, r19
 6c6:	b0 0d       	add	r27, r0
 6c8:	a1 1d       	adc	r26, r1
 6ca:	62 1f       	adc	r22, r18
 6cc:	83 9f       	mul	r24, r19
 6ce:	a0 0d       	add	r26, r0
 6d0:	61 1d       	adc	r22, r1
 6d2:	22 1f       	adc	r18, r18
 6d4:	74 9f       	mul	r23, r20
 6d6:	33 27       	eor	r19, r19
 6d8:	a0 0d       	add	r26, r0
 6da:	61 1d       	adc	r22, r1
 6dc:	23 1f       	adc	r18, r19
 6de:	84 9f       	mul	r24, r20
 6e0:	60 0d       	add	r22, r0
 6e2:	21 1d       	adc	r18, r1
 6e4:	82 2f       	mov	r24, r18
 6e6:	76 2f       	mov	r23, r22
 6e8:	6a 2f       	mov	r22, r26
 6ea:	11 24       	eor	r1, r1
 6ec:	9f 57       	subi	r25, 0x7F	; 127
 6ee:	50 40       	sbci	r21, 0x00	; 0
 6f0:	9a f0       	brmi	.+38     	; 0x718 <__mulsf3_pse+0x88>
 6f2:	f1 f0       	breq	.+60     	; 0x730 <__mulsf3_pse+0xa0>
 6f4:	88 23       	and	r24, r24
 6f6:	4a f0       	brmi	.+18     	; 0x70a <__mulsf3_pse+0x7a>
 6f8:	ee 0f       	add	r30, r30
 6fa:	ff 1f       	adc	r31, r31
 6fc:	bb 1f       	adc	r27, r27
 6fe:	66 1f       	adc	r22, r22
 700:	77 1f       	adc	r23, r23
 702:	88 1f       	adc	r24, r24
 704:	91 50       	subi	r25, 0x01	; 1
 706:	50 40       	sbci	r21, 0x00	; 0
 708:	a9 f7       	brne	.-22     	; 0x6f4 <__mulsf3_pse+0x64>
 70a:	9e 3f       	cpi	r25, 0xFE	; 254
 70c:	51 05       	cpc	r21, r1
 70e:	80 f0       	brcs	.+32     	; 0x730 <__mulsf3_pse+0xa0>
 710:	0c 94 c3 03 	jmp	0x786	; 0x786 <__fp_inf>
 714:	0c 94 2c 03 	jmp	0x658	; 0x658 <__fp_szero>
 718:	5f 3f       	cpi	r21, 0xFF	; 255
 71a:	e4 f3       	brlt	.-8      	; 0x714 <__mulsf3_pse+0x84>
 71c:	98 3e       	cpi	r25, 0xE8	; 232
 71e:	d4 f3       	brlt	.-12     	; 0x714 <__mulsf3_pse+0x84>
 720:	86 95       	lsr	r24
 722:	77 95       	ror	r23
 724:	67 95       	ror	r22
 726:	b7 95       	ror	r27
 728:	f7 95       	ror	r31
 72a:	e7 95       	ror	r30
 72c:	9f 5f       	subi	r25, 0xFF	; 255
 72e:	c1 f7       	brne	.-16     	; 0x720 <__mulsf3_pse+0x90>
 730:	fe 2b       	or	r31, r30
 732:	88 0f       	add	r24, r24
 734:	91 1d       	adc	r25, r1
 736:	96 95       	lsr	r25
 738:	87 95       	ror	r24
 73a:	97 f9       	bld	r25, 7
 73c:	08 95       	ret

0000073e <round>:
 73e:	0e 94 11 03 	call	0x622	; 0x622 <__fp_splitA>
 742:	e8 f0       	brcs	.+58     	; 0x77e <round+0x40>
 744:	9e 37       	cpi	r25, 0x7E	; 126
 746:	e8 f0       	brcs	.+58     	; 0x782 <round+0x44>
 748:	96 39       	cpi	r25, 0x96	; 150
 74a:	b8 f4       	brcc	.+46     	; 0x77a <round+0x3c>
 74c:	9e 38       	cpi	r25, 0x8E	; 142
 74e:	48 f4       	brcc	.+18     	; 0x762 <round+0x24>
 750:	67 2f       	mov	r22, r23
 752:	78 2f       	mov	r23, r24
 754:	88 27       	eor	r24, r24
 756:	98 5f       	subi	r25, 0xF8	; 248
 758:	f9 cf       	rjmp	.-14     	; 0x74c <round+0xe>
 75a:	86 95       	lsr	r24
 75c:	77 95       	ror	r23
 75e:	67 95       	ror	r22
 760:	93 95       	inc	r25
 762:	95 39       	cpi	r25, 0x95	; 149
 764:	d0 f3       	brcs	.-12     	; 0x75a <round+0x1c>
 766:	b6 2f       	mov	r27, r22
 768:	b1 70       	andi	r27, 0x01	; 1
 76a:	6b 0f       	add	r22, r27
 76c:	71 1d       	adc	r23, r1
 76e:	81 1d       	adc	r24, r1
 770:	20 f4       	brcc	.+8      	; 0x77a <round+0x3c>
 772:	87 95       	ror	r24
 774:	77 95       	ror	r23
 776:	67 95       	ror	r22
 778:	93 95       	inc	r25
 77a:	0c 94 c9 03 	jmp	0x792	; 0x792 <__fp_mintl>
 77e:	0c 94 e4 03 	jmp	0x7c8	; 0x7c8 <__fp_mpack>
 782:	0c 94 2c 03 	jmp	0x658	; 0x658 <__fp_szero>

00000786 <__fp_inf>:
 786:	97 f9       	bld	r25, 7
 788:	9f 67       	ori	r25, 0x7F	; 127
 78a:	80 e8       	ldi	r24, 0x80	; 128
 78c:	70 e0       	ldi	r23, 0x00	; 0
 78e:	60 e0       	ldi	r22, 0x00	; 0
 790:	08 95       	ret

00000792 <__fp_mintl>:
 792:	88 23       	and	r24, r24
 794:	71 f4       	brne	.+28     	; 0x7b2 <__fp_mintl+0x20>
 796:	77 23       	and	r23, r23
 798:	21 f0       	breq	.+8      	; 0x7a2 <__fp_mintl+0x10>
 79a:	98 50       	subi	r25, 0x08	; 8
 79c:	87 2b       	or	r24, r23
 79e:	76 2f       	mov	r23, r22
 7a0:	07 c0       	rjmp	.+14     	; 0x7b0 <__fp_mintl+0x1e>
 7a2:	66 23       	and	r22, r22
 7a4:	11 f4       	brne	.+4      	; 0x7aa <__fp_mintl+0x18>
 7a6:	99 27       	eor	r25, r25
 7a8:	0d c0       	rjmp	.+26     	; 0x7c4 <__fp_mintl+0x32>
 7aa:	90 51       	subi	r25, 0x10	; 16
 7ac:	86 2b       	or	r24, r22
 7ae:	70 e0       	ldi	r23, 0x00	; 0
 7b0:	60 e0       	ldi	r22, 0x00	; 0
 7b2:	2a f0       	brmi	.+10     	; 0x7be <__fp_mintl+0x2c>
 7b4:	9a 95       	dec	r25
 7b6:	66 0f       	add	r22, r22
 7b8:	77 1f       	adc	r23, r23
 7ba:	88 1f       	adc	r24, r24
 7bc:	da f7       	brpl	.-10     	; 0x7b4 <__fp_mintl+0x22>
 7be:	88 0f       	add	r24, r24
 7c0:	96 95       	lsr	r25
 7c2:	87 95       	ror	r24
 7c4:	97 f9       	bld	r25, 7
 7c6:	08 95       	ret

000007c8 <__fp_mpack>:
 7c8:	9f 3f       	cpi	r25, 0xFF	; 255
 7ca:	31 f0       	breq	.+12     	; 0x7d8 <__fp_mpack_finite+0xc>

000007cc <__fp_mpack_finite>:
 7cc:	91 50       	subi	r25, 0x01	; 1
 7ce:	20 f4       	brcc	.+8      	; 0x7d8 <__fp_mpack_finite+0xc>
 7d0:	87 95       	ror	r24
 7d2:	77 95       	ror	r23
 7d4:	67 95       	ror	r22
 7d6:	b7 95       	ror	r27
 7d8:	88 0f       	add	r24, r24
 7da:	91 1d       	adc	r25, r1
 7dc:	96 95       	lsr	r25
 7de:	87 95       	ror	r24
 7e0:	97 f9       	bld	r25, 7
 7e2:	08 95       	ret

000007e4 <__fp_nan>:
 7e4:	9f ef       	ldi	r25, 0xFF	; 255
 7e6:	80 ec       	ldi	r24, 0xC0	; 192
 7e8:	08 95       	ret

000007ea <__fp_pscA>:
 7ea:	00 24       	eor	r0, r0
 7ec:	0a 94       	dec	r0
 7ee:	16 16       	cp	r1, r22
 7f0:	17 06       	cpc	r1, r23
 7f2:	18 06       	cpc	r1, r24
 7f4:	09 06       	cpc	r0, r25
 7f6:	08 95       	ret

000007f8 <__fp_pscB>:
 7f8:	00 24       	eor	r0, r0
 7fa:	0a 94       	dec	r0
 7fc:	12 16       	cp	r1, r18
 7fe:	13 06       	cpc	r1, r19
 800:	14 06       	cpc	r1, r20
 802:	05 06       	cpc	r0, r21
 804:	08 95       	ret

00000806 <__fp_round>:
 806:	09 2e       	mov	r0, r25
 808:	03 94       	inc	r0
 80a:	00 0c       	add	r0, r0
 80c:	11 f4       	brne	.+4      	; 0x812 <__fp_round+0xc>
 80e:	88 23       	and	r24, r24
 810:	52 f0       	brmi	.+20     	; 0x826 <__fp_round+0x20>
 812:	bb 0f       	add	r27, r27
 814:	40 f4       	brcc	.+16     	; 0x826 <__fp_round+0x20>
 816:	bf 2b       	or	r27, r31
 818:	11 f4       	brne	.+4      	; 0x81e <__fp_round+0x18>
 81a:	60 ff       	sbrs	r22, 0
 81c:	04 c0       	rjmp	.+8      	; 0x826 <__fp_round+0x20>
 81e:	6f 5f       	subi	r22, 0xFF	; 255
 820:	7f 4f       	sbci	r23, 0xFF	; 255
 822:	8f 4f       	sbci	r24, 0xFF	; 255
 824:	9f 4f       	sbci	r25, 0xFF	; 255
 826:	08 95       	ret

00000828 <__udivmodsi4>:
 828:	a1 e2       	ldi	r26, 0x21	; 33
 82a:	1a 2e       	mov	r1, r26
 82c:	aa 1b       	sub	r26, r26
 82e:	bb 1b       	sub	r27, r27
 830:	fd 01       	movw	r30, r26
 832:	0d c0       	rjmp	.+26     	; 0x84e <__udivmodsi4_ep>

00000834 <__udivmodsi4_loop>:
 834:	aa 1f       	adc	r26, r26
 836:	bb 1f       	adc	r27, r27
 838:	ee 1f       	adc	r30, r30
 83a:	ff 1f       	adc	r31, r31
 83c:	a2 17       	cp	r26, r18
 83e:	b3 07       	cpc	r27, r19
 840:	e4 07       	cpc	r30, r20
 842:	f5 07       	cpc	r31, r21
 844:	20 f0       	brcs	.+8      	; 0x84e <__udivmodsi4_ep>
 846:	a2 1b       	sub	r26, r18
 848:	b3 0b       	sbc	r27, r19
 84a:	e4 0b       	sbc	r30, r20
 84c:	f5 0b       	sbc	r31, r21

0000084e <__udivmodsi4_ep>:
 84e:	66 1f       	adc	r22, r22
 850:	77 1f       	adc	r23, r23
 852:	88 1f       	adc	r24, r24
 854:	99 1f       	adc	r25, r25
 856:	1a 94       	dec	r1
 858:	69 f7       	brne	.-38     	; 0x834 <__udivmodsi4_loop>
 85a:	60 95       	com	r22
 85c:	70 95       	com	r23
 85e:	80 95       	com	r24
 860:	90 95       	com	r25
 862:	9b 01       	movw	r18, r22
 864:	ac 01       	movw	r20, r24
 866:	bd 01       	movw	r22, r26
 868:	cf 01       	movw	r24, r30
 86a:	08 95       	ret

0000086c <sprintf>:
 86c:	ae e0       	ldi	r26, 0x0E	; 14
 86e:	b0 e0       	ldi	r27, 0x00	; 0
 870:	ec e3       	ldi	r30, 0x3C	; 60
 872:	f4 e0       	ldi	r31, 0x04	; 4
 874:	0c 94 e5 06 	jmp	0xdca	; 0xdca <__prologue_saves__+0x1c>
 878:	0d 89       	ldd	r16, Y+21	; 0x15
 87a:	1e 89       	ldd	r17, Y+22	; 0x16
 87c:	86 e0       	ldi	r24, 0x06	; 6
 87e:	8c 83       	std	Y+4, r24	; 0x04
 880:	1a 83       	std	Y+2, r17	; 0x02
 882:	09 83       	std	Y+1, r16	; 0x01
 884:	8f ef       	ldi	r24, 0xFF	; 255
 886:	9f e7       	ldi	r25, 0x7F	; 127
 888:	9e 83       	std	Y+6, r25	; 0x06
 88a:	8d 83       	std	Y+5, r24	; 0x05
 88c:	ae 01       	movw	r20, r28
 88e:	47 5e       	subi	r20, 0xE7	; 231
 890:	5f 4f       	sbci	r21, 0xFF	; 255
 892:	6f 89       	ldd	r22, Y+23	; 0x17
 894:	78 8d       	ldd	r23, Y+24	; 0x18
 896:	ce 01       	movw	r24, r28
 898:	01 96       	adiw	r24, 0x01	; 1
 89a:	0e 94 59 04 	call	0x8b2	; 0x8b2 <vfprintf>
 89e:	2f 81       	ldd	r18, Y+7	; 0x07
 8a0:	38 85       	ldd	r19, Y+8	; 0x08
 8a2:	f8 01       	movw	r30, r16
 8a4:	e2 0f       	add	r30, r18
 8a6:	f3 1f       	adc	r31, r19
 8a8:	10 82       	st	Z, r1
 8aa:	2e 96       	adiw	r28, 0x0e	; 14
 8ac:	e4 e0       	ldi	r30, 0x04	; 4
 8ae:	0c 94 01 07 	jmp	0xe02	; 0xe02 <__epilogue_restores__+0x1c>

000008b2 <vfprintf>:
 8b2:	ac e0       	ldi	r26, 0x0C	; 12
 8b4:	b0 e0       	ldi	r27, 0x00	; 0
 8b6:	ef e5       	ldi	r30, 0x5F	; 95
 8b8:	f4 e0       	ldi	r31, 0x04	; 4
 8ba:	0c 94 d7 06 	jmp	0xdae	; 0xdae <__prologue_saves__>
 8be:	7c 01       	movw	r14, r24
 8c0:	6b 01       	movw	r12, r22
 8c2:	8a 01       	movw	r16, r20
 8c4:	fc 01       	movw	r30, r24
 8c6:	17 82       	std	Z+7, r1	; 0x07
 8c8:	16 82       	std	Z+6, r1	; 0x06
 8ca:	83 81       	ldd	r24, Z+3	; 0x03
 8cc:	81 ff       	sbrs	r24, 1
 8ce:	bd c1       	rjmp	.+890    	; 0xc4a <__stack+0x34b>
 8d0:	ce 01       	movw	r24, r28
 8d2:	01 96       	adiw	r24, 0x01	; 1
 8d4:	4c 01       	movw	r8, r24
 8d6:	f7 01       	movw	r30, r14
 8d8:	93 81       	ldd	r25, Z+3	; 0x03
 8da:	f6 01       	movw	r30, r12
 8dc:	93 fd       	sbrc	r25, 3
 8de:	85 91       	lpm	r24, Z+
 8e0:	93 ff       	sbrs	r25, 3
 8e2:	81 91       	ld	r24, Z+
 8e4:	6f 01       	movw	r12, r30
 8e6:	88 23       	and	r24, r24
 8e8:	09 f4       	brne	.+2      	; 0x8ec <vfprintf+0x3a>
 8ea:	ab c1       	rjmp	.+854    	; 0xc42 <__stack+0x343>
 8ec:	85 32       	cpi	r24, 0x25	; 37
 8ee:	39 f4       	brne	.+14     	; 0x8fe <vfprintf+0x4c>
 8f0:	93 fd       	sbrc	r25, 3
 8f2:	85 91       	lpm	r24, Z+
 8f4:	93 ff       	sbrs	r25, 3
 8f6:	81 91       	ld	r24, Z+
 8f8:	6f 01       	movw	r12, r30
 8fa:	85 32       	cpi	r24, 0x25	; 37
 8fc:	29 f4       	brne	.+10     	; 0x908 <__stack+0x9>
 8fe:	b7 01       	movw	r22, r14
 900:	90 e0       	ldi	r25, 0x00	; 0
 902:	0e 94 41 06 	call	0xc82	; 0xc82 <fputc>
 906:	e7 cf       	rjmp	.-50     	; 0x8d6 <vfprintf+0x24>
 908:	51 2c       	mov	r5, r1
 90a:	31 2c       	mov	r3, r1
 90c:	20 e0       	ldi	r18, 0x00	; 0
 90e:	20 32       	cpi	r18, 0x20	; 32
 910:	a0 f4       	brcc	.+40     	; 0x93a <__stack+0x3b>
 912:	8b 32       	cpi	r24, 0x2B	; 43
 914:	69 f0       	breq	.+26     	; 0x930 <__stack+0x31>
 916:	30 f4       	brcc	.+12     	; 0x924 <__stack+0x25>
 918:	80 32       	cpi	r24, 0x20	; 32
 91a:	59 f0       	breq	.+22     	; 0x932 <__stack+0x33>
 91c:	83 32       	cpi	r24, 0x23	; 35
 91e:	69 f4       	brne	.+26     	; 0x93a <__stack+0x3b>
 920:	20 61       	ori	r18, 0x10	; 16
 922:	2c c0       	rjmp	.+88     	; 0x97c <__stack+0x7d>
 924:	8d 32       	cpi	r24, 0x2D	; 45
 926:	39 f0       	breq	.+14     	; 0x936 <__stack+0x37>
 928:	80 33       	cpi	r24, 0x30	; 48
 92a:	39 f4       	brne	.+14     	; 0x93a <__stack+0x3b>
 92c:	21 60       	ori	r18, 0x01	; 1
 92e:	26 c0       	rjmp	.+76     	; 0x97c <__stack+0x7d>
 930:	22 60       	ori	r18, 0x02	; 2
 932:	24 60       	ori	r18, 0x04	; 4
 934:	23 c0       	rjmp	.+70     	; 0x97c <__stack+0x7d>
 936:	28 60       	ori	r18, 0x08	; 8
 938:	21 c0       	rjmp	.+66     	; 0x97c <__stack+0x7d>
 93a:	27 fd       	sbrc	r18, 7
 93c:	27 c0       	rjmp	.+78     	; 0x98c <__stack+0x8d>
 93e:	30 ed       	ldi	r19, 0xD0	; 208
 940:	38 0f       	add	r19, r24
 942:	3a 30       	cpi	r19, 0x0A	; 10
 944:	78 f4       	brcc	.+30     	; 0x964 <__stack+0x65>
 946:	26 ff       	sbrs	r18, 6
 948:	06 c0       	rjmp	.+12     	; 0x956 <__stack+0x57>
 94a:	fa e0       	ldi	r31, 0x0A	; 10
 94c:	5f 9e       	mul	r5, r31
 94e:	30 0d       	add	r19, r0
 950:	11 24       	eor	r1, r1
 952:	53 2e       	mov	r5, r19
 954:	13 c0       	rjmp	.+38     	; 0x97c <__stack+0x7d>
 956:	8a e0       	ldi	r24, 0x0A	; 10
 958:	38 9e       	mul	r3, r24
 95a:	30 0d       	add	r19, r0
 95c:	11 24       	eor	r1, r1
 95e:	33 2e       	mov	r3, r19
 960:	20 62       	ori	r18, 0x20	; 32
 962:	0c c0       	rjmp	.+24     	; 0x97c <__stack+0x7d>
 964:	8e 32       	cpi	r24, 0x2E	; 46
 966:	21 f4       	brne	.+8      	; 0x970 <__stack+0x71>
 968:	26 fd       	sbrc	r18, 6
 96a:	6b c1       	rjmp	.+726    	; 0xc42 <__stack+0x343>
 96c:	20 64       	ori	r18, 0x40	; 64
 96e:	06 c0       	rjmp	.+12     	; 0x97c <__stack+0x7d>
 970:	8c 36       	cpi	r24, 0x6C	; 108
 972:	11 f4       	brne	.+4      	; 0x978 <__stack+0x79>
 974:	20 68       	ori	r18, 0x80	; 128
 976:	02 c0       	rjmp	.+4      	; 0x97c <__stack+0x7d>
 978:	88 36       	cpi	r24, 0x68	; 104
 97a:	41 f4       	brne	.+16     	; 0x98c <__stack+0x8d>
 97c:	f6 01       	movw	r30, r12
 97e:	93 fd       	sbrc	r25, 3
 980:	85 91       	lpm	r24, Z+
 982:	93 ff       	sbrs	r25, 3
 984:	81 91       	ld	r24, Z+
 986:	6f 01       	movw	r12, r30
 988:	81 11       	cpse	r24, r1
 98a:	c1 cf       	rjmp	.-126    	; 0x90e <__stack+0xf>
 98c:	98 2f       	mov	r25, r24
 98e:	9f 7d       	andi	r25, 0xDF	; 223
 990:	95 54       	subi	r25, 0x45	; 69
 992:	93 30       	cpi	r25, 0x03	; 3
 994:	28 f4       	brcc	.+10     	; 0x9a0 <__stack+0xa1>
 996:	0c 5f       	subi	r16, 0xFC	; 252
 998:	1f 4f       	sbci	r17, 0xFF	; 255
 99a:	ff e3       	ldi	r31, 0x3F	; 63
 99c:	f9 83       	std	Y+1, r31	; 0x01
 99e:	0d c0       	rjmp	.+26     	; 0x9ba <__stack+0xbb>
 9a0:	83 36       	cpi	r24, 0x63	; 99
 9a2:	31 f0       	breq	.+12     	; 0x9b0 <__stack+0xb1>
 9a4:	83 37       	cpi	r24, 0x73	; 115
 9a6:	71 f0       	breq	.+28     	; 0x9c4 <__stack+0xc5>
 9a8:	83 35       	cpi	r24, 0x53	; 83
 9aa:	09 f0       	breq	.+2      	; 0x9ae <__stack+0xaf>
 9ac:	5b c0       	rjmp	.+182    	; 0xa64 <__stack+0x165>
 9ae:	22 c0       	rjmp	.+68     	; 0x9f4 <__stack+0xf5>
 9b0:	f8 01       	movw	r30, r16
 9b2:	80 81       	ld	r24, Z
 9b4:	89 83       	std	Y+1, r24	; 0x01
 9b6:	0e 5f       	subi	r16, 0xFE	; 254
 9b8:	1f 4f       	sbci	r17, 0xFF	; 255
 9ba:	44 24       	eor	r4, r4
 9bc:	43 94       	inc	r4
 9be:	51 2c       	mov	r5, r1
 9c0:	54 01       	movw	r10, r8
 9c2:	15 c0       	rjmp	.+42     	; 0x9ee <__stack+0xef>
 9c4:	38 01       	movw	r6, r16
 9c6:	f2 e0       	ldi	r31, 0x02	; 2
 9c8:	6f 0e       	add	r6, r31
 9ca:	71 1c       	adc	r7, r1
 9cc:	f8 01       	movw	r30, r16
 9ce:	a0 80       	ld	r10, Z
 9d0:	b1 80       	ldd	r11, Z+1	; 0x01
 9d2:	26 ff       	sbrs	r18, 6
 9d4:	03 c0       	rjmp	.+6      	; 0x9dc <__stack+0xdd>
 9d6:	65 2d       	mov	r22, r5
 9d8:	70 e0       	ldi	r23, 0x00	; 0
 9da:	02 c0       	rjmp	.+4      	; 0x9e0 <__stack+0xe1>
 9dc:	6f ef       	ldi	r22, 0xFF	; 255
 9de:	7f ef       	ldi	r23, 0xFF	; 255
 9e0:	c5 01       	movw	r24, r10
 9e2:	2c 87       	std	Y+12, r18	; 0x0c
 9e4:	0e 94 36 06 	call	0xc6c	; 0xc6c <strnlen>
 9e8:	2c 01       	movw	r4, r24
 9ea:	83 01       	movw	r16, r6
 9ec:	2c 85       	ldd	r18, Y+12	; 0x0c
 9ee:	2f 77       	andi	r18, 0x7F	; 127
 9f0:	22 2e       	mov	r2, r18
 9f2:	17 c0       	rjmp	.+46     	; 0xa22 <__stack+0x123>
 9f4:	38 01       	movw	r6, r16
 9f6:	f2 e0       	ldi	r31, 0x02	; 2
 9f8:	6f 0e       	add	r6, r31
 9fa:	71 1c       	adc	r7, r1
 9fc:	f8 01       	movw	r30, r16
 9fe:	a0 80       	ld	r10, Z
 a00:	b1 80       	ldd	r11, Z+1	; 0x01
 a02:	26 ff       	sbrs	r18, 6
 a04:	03 c0       	rjmp	.+6      	; 0xa0c <__stack+0x10d>
 a06:	65 2d       	mov	r22, r5
 a08:	70 e0       	ldi	r23, 0x00	; 0
 a0a:	02 c0       	rjmp	.+4      	; 0xa10 <__stack+0x111>
 a0c:	6f ef       	ldi	r22, 0xFF	; 255
 a0e:	7f ef       	ldi	r23, 0xFF	; 255
 a10:	c5 01       	movw	r24, r10
 a12:	2c 87       	std	Y+12, r18	; 0x0c
 a14:	0e 94 2b 06 	call	0xc56	; 0xc56 <strnlen_P>
 a18:	2c 01       	movw	r4, r24
 a1a:	2c 85       	ldd	r18, Y+12	; 0x0c
 a1c:	20 68       	ori	r18, 0x80	; 128
 a1e:	22 2e       	mov	r2, r18
 a20:	83 01       	movw	r16, r6
 a22:	23 fc       	sbrc	r2, 3
 a24:	1b c0       	rjmp	.+54     	; 0xa5c <__stack+0x15d>
 a26:	83 2d       	mov	r24, r3
 a28:	90 e0       	ldi	r25, 0x00	; 0
 a2a:	48 16       	cp	r4, r24
 a2c:	59 06       	cpc	r5, r25
 a2e:	b0 f4       	brcc	.+44     	; 0xa5c <__stack+0x15d>
 a30:	b7 01       	movw	r22, r14
 a32:	80 e2       	ldi	r24, 0x20	; 32
 a34:	90 e0       	ldi	r25, 0x00	; 0
 a36:	0e 94 41 06 	call	0xc82	; 0xc82 <fputc>
 a3a:	3a 94       	dec	r3
 a3c:	f4 cf       	rjmp	.-24     	; 0xa26 <__stack+0x127>
 a3e:	f5 01       	movw	r30, r10
 a40:	27 fc       	sbrc	r2, 7
 a42:	85 91       	lpm	r24, Z+
 a44:	27 fe       	sbrs	r2, 7
 a46:	81 91       	ld	r24, Z+
 a48:	5f 01       	movw	r10, r30
 a4a:	b7 01       	movw	r22, r14
 a4c:	90 e0       	ldi	r25, 0x00	; 0
 a4e:	0e 94 41 06 	call	0xc82	; 0xc82 <fputc>
 a52:	31 10       	cpse	r3, r1
 a54:	3a 94       	dec	r3
 a56:	f1 e0       	ldi	r31, 0x01	; 1
 a58:	4f 1a       	sub	r4, r31
 a5a:	51 08       	sbc	r5, r1
 a5c:	41 14       	cp	r4, r1
 a5e:	51 04       	cpc	r5, r1
 a60:	71 f7       	brne	.-36     	; 0xa3e <__stack+0x13f>
 a62:	e5 c0       	rjmp	.+458    	; 0xc2e <__stack+0x32f>
 a64:	84 36       	cpi	r24, 0x64	; 100
 a66:	11 f0       	breq	.+4      	; 0xa6c <__stack+0x16d>
 a68:	89 36       	cpi	r24, 0x69	; 105
 a6a:	39 f5       	brne	.+78     	; 0xaba <__stack+0x1bb>
 a6c:	f8 01       	movw	r30, r16
 a6e:	27 ff       	sbrs	r18, 7
 a70:	07 c0       	rjmp	.+14     	; 0xa80 <__stack+0x181>
 a72:	60 81       	ld	r22, Z
 a74:	71 81       	ldd	r23, Z+1	; 0x01
 a76:	82 81       	ldd	r24, Z+2	; 0x02
 a78:	93 81       	ldd	r25, Z+3	; 0x03
 a7a:	0c 5f       	subi	r16, 0xFC	; 252
 a7c:	1f 4f       	sbci	r17, 0xFF	; 255
 a7e:	08 c0       	rjmp	.+16     	; 0xa90 <__stack+0x191>
 a80:	60 81       	ld	r22, Z
 a82:	71 81       	ldd	r23, Z+1	; 0x01
 a84:	07 2e       	mov	r0, r23
 a86:	00 0c       	add	r0, r0
 a88:	88 0b       	sbc	r24, r24
 a8a:	99 0b       	sbc	r25, r25
 a8c:	0e 5f       	subi	r16, 0xFE	; 254
 a8e:	1f 4f       	sbci	r17, 0xFF	; 255
 a90:	2f 76       	andi	r18, 0x6F	; 111
 a92:	72 2e       	mov	r7, r18
 a94:	97 ff       	sbrs	r25, 7
 a96:	09 c0       	rjmp	.+18     	; 0xaaa <__stack+0x1ab>
 a98:	90 95       	com	r25
 a9a:	80 95       	com	r24
 a9c:	70 95       	com	r23
 a9e:	61 95       	neg	r22
 aa0:	7f 4f       	sbci	r23, 0xFF	; 255
 aa2:	8f 4f       	sbci	r24, 0xFF	; 255
 aa4:	9f 4f       	sbci	r25, 0xFF	; 255
 aa6:	20 68       	ori	r18, 0x80	; 128
 aa8:	72 2e       	mov	r7, r18
 aaa:	2a e0       	ldi	r18, 0x0A	; 10
 aac:	30 e0       	ldi	r19, 0x00	; 0
 aae:	a4 01       	movw	r20, r8
 ab0:	0e 94 79 06 	call	0xcf2	; 0xcf2 <__ultoa_invert>
 ab4:	a8 2e       	mov	r10, r24
 ab6:	a8 18       	sub	r10, r8
 ab8:	44 c0       	rjmp	.+136    	; 0xb42 <__stack+0x243>
 aba:	85 37       	cpi	r24, 0x75	; 117
 abc:	29 f4       	brne	.+10     	; 0xac8 <__stack+0x1c9>
 abe:	2f 7e       	andi	r18, 0xEF	; 239
 ac0:	b2 2e       	mov	r11, r18
 ac2:	2a e0       	ldi	r18, 0x0A	; 10
 ac4:	30 e0       	ldi	r19, 0x00	; 0
 ac6:	25 c0       	rjmp	.+74     	; 0xb12 <__stack+0x213>
 ac8:	f2 2f       	mov	r31, r18
 aca:	f9 7f       	andi	r31, 0xF9	; 249
 acc:	bf 2e       	mov	r11, r31
 ace:	8f 36       	cpi	r24, 0x6F	; 111
 ad0:	c1 f0       	breq	.+48     	; 0xb02 <__stack+0x203>
 ad2:	18 f4       	brcc	.+6      	; 0xada <__stack+0x1db>
 ad4:	88 35       	cpi	r24, 0x58	; 88
 ad6:	79 f0       	breq	.+30     	; 0xaf6 <__stack+0x1f7>
 ad8:	b4 c0       	rjmp	.+360    	; 0xc42 <__stack+0x343>
 ada:	80 37       	cpi	r24, 0x70	; 112
 adc:	19 f0       	breq	.+6      	; 0xae4 <__stack+0x1e5>
 ade:	88 37       	cpi	r24, 0x78	; 120
 ae0:	21 f0       	breq	.+8      	; 0xaea <__stack+0x1eb>
 ae2:	af c0       	rjmp	.+350    	; 0xc42 <__stack+0x343>
 ae4:	2f 2f       	mov	r18, r31
 ae6:	20 61       	ori	r18, 0x10	; 16
 ae8:	b2 2e       	mov	r11, r18
 aea:	b4 fe       	sbrs	r11, 4
 aec:	0d c0       	rjmp	.+26     	; 0xb08 <__stack+0x209>
 aee:	8b 2d       	mov	r24, r11
 af0:	84 60       	ori	r24, 0x04	; 4
 af2:	b8 2e       	mov	r11, r24
 af4:	09 c0       	rjmp	.+18     	; 0xb08 <__stack+0x209>
 af6:	24 ff       	sbrs	r18, 4
 af8:	0a c0       	rjmp	.+20     	; 0xb0e <__stack+0x20f>
 afa:	9f 2f       	mov	r25, r31
 afc:	96 60       	ori	r25, 0x06	; 6
 afe:	b9 2e       	mov	r11, r25
 b00:	06 c0       	rjmp	.+12     	; 0xb0e <__stack+0x20f>
 b02:	28 e0       	ldi	r18, 0x08	; 8
 b04:	30 e0       	ldi	r19, 0x00	; 0
 b06:	05 c0       	rjmp	.+10     	; 0xb12 <__stack+0x213>
 b08:	20 e1       	ldi	r18, 0x10	; 16
 b0a:	30 e0       	ldi	r19, 0x00	; 0
 b0c:	02 c0       	rjmp	.+4      	; 0xb12 <__stack+0x213>
 b0e:	20 e1       	ldi	r18, 0x10	; 16
 b10:	32 e0       	ldi	r19, 0x02	; 2
 b12:	f8 01       	movw	r30, r16
 b14:	b7 fe       	sbrs	r11, 7
 b16:	07 c0       	rjmp	.+14     	; 0xb26 <__stack+0x227>
 b18:	60 81       	ld	r22, Z
 b1a:	71 81       	ldd	r23, Z+1	; 0x01
 b1c:	82 81       	ldd	r24, Z+2	; 0x02
 b1e:	93 81       	ldd	r25, Z+3	; 0x03
 b20:	0c 5f       	subi	r16, 0xFC	; 252
 b22:	1f 4f       	sbci	r17, 0xFF	; 255
 b24:	06 c0       	rjmp	.+12     	; 0xb32 <__stack+0x233>
 b26:	60 81       	ld	r22, Z
 b28:	71 81       	ldd	r23, Z+1	; 0x01
 b2a:	80 e0       	ldi	r24, 0x00	; 0
 b2c:	90 e0       	ldi	r25, 0x00	; 0
 b2e:	0e 5f       	subi	r16, 0xFE	; 254
 b30:	1f 4f       	sbci	r17, 0xFF	; 255
 b32:	a4 01       	movw	r20, r8
 b34:	0e 94 79 06 	call	0xcf2	; 0xcf2 <__ultoa_invert>
 b38:	a8 2e       	mov	r10, r24
 b3a:	a8 18       	sub	r10, r8
 b3c:	fb 2d       	mov	r31, r11
 b3e:	ff 77       	andi	r31, 0x7F	; 127
 b40:	7f 2e       	mov	r7, r31
 b42:	76 fe       	sbrs	r7, 6
 b44:	0b c0       	rjmp	.+22     	; 0xb5c <__stack+0x25d>
 b46:	37 2d       	mov	r19, r7
 b48:	3e 7f       	andi	r19, 0xFE	; 254
 b4a:	a5 14       	cp	r10, r5
 b4c:	50 f4       	brcc	.+20     	; 0xb62 <__stack+0x263>
 b4e:	74 fe       	sbrs	r7, 4
 b50:	0a c0       	rjmp	.+20     	; 0xb66 <__stack+0x267>
 b52:	72 fc       	sbrc	r7, 2
 b54:	08 c0       	rjmp	.+16     	; 0xb66 <__stack+0x267>
 b56:	37 2d       	mov	r19, r7
 b58:	3e 7e       	andi	r19, 0xEE	; 238
 b5a:	05 c0       	rjmp	.+10     	; 0xb66 <__stack+0x267>
 b5c:	ba 2c       	mov	r11, r10
 b5e:	37 2d       	mov	r19, r7
 b60:	03 c0       	rjmp	.+6      	; 0xb68 <__stack+0x269>
 b62:	ba 2c       	mov	r11, r10
 b64:	01 c0       	rjmp	.+2      	; 0xb68 <__stack+0x269>
 b66:	b5 2c       	mov	r11, r5
 b68:	34 ff       	sbrs	r19, 4
 b6a:	0d c0       	rjmp	.+26     	; 0xb86 <__stack+0x287>
 b6c:	fe 01       	movw	r30, r28
 b6e:	ea 0d       	add	r30, r10
 b70:	f1 1d       	adc	r31, r1
 b72:	80 81       	ld	r24, Z
 b74:	80 33       	cpi	r24, 0x30	; 48
 b76:	11 f4       	brne	.+4      	; 0xb7c <__stack+0x27d>
 b78:	39 7e       	andi	r19, 0xE9	; 233
 b7a:	09 c0       	rjmp	.+18     	; 0xb8e <__stack+0x28f>
 b7c:	32 ff       	sbrs	r19, 2
 b7e:	06 c0       	rjmp	.+12     	; 0xb8c <__stack+0x28d>
 b80:	b3 94       	inc	r11
 b82:	b3 94       	inc	r11
 b84:	04 c0       	rjmp	.+8      	; 0xb8e <__stack+0x28f>
 b86:	83 2f       	mov	r24, r19
 b88:	86 78       	andi	r24, 0x86	; 134
 b8a:	09 f0       	breq	.+2      	; 0xb8e <__stack+0x28f>
 b8c:	b3 94       	inc	r11
 b8e:	33 fd       	sbrc	r19, 3
 b90:	13 c0       	rjmp	.+38     	; 0xbb8 <__stack+0x2b9>
 b92:	30 ff       	sbrs	r19, 0
 b94:	06 c0       	rjmp	.+12     	; 0xba2 <__stack+0x2a3>
 b96:	5a 2c       	mov	r5, r10
 b98:	b3 14       	cp	r11, r3
 b9a:	18 f4       	brcc	.+6      	; 0xba2 <__stack+0x2a3>
 b9c:	53 0c       	add	r5, r3
 b9e:	5b 18       	sub	r5, r11
 ba0:	b3 2c       	mov	r11, r3
 ba2:	b3 14       	cp	r11, r3
 ba4:	68 f4       	brcc	.+26     	; 0xbc0 <__stack+0x2c1>
 ba6:	b7 01       	movw	r22, r14
 ba8:	80 e2       	ldi	r24, 0x20	; 32
 baa:	90 e0       	ldi	r25, 0x00	; 0
 bac:	3c 87       	std	Y+12, r19	; 0x0c
 bae:	0e 94 41 06 	call	0xc82	; 0xc82 <fputc>
 bb2:	b3 94       	inc	r11
 bb4:	3c 85       	ldd	r19, Y+12	; 0x0c
 bb6:	f5 cf       	rjmp	.-22     	; 0xba2 <__stack+0x2a3>
 bb8:	b3 14       	cp	r11, r3
 bba:	10 f4       	brcc	.+4      	; 0xbc0 <__stack+0x2c1>
 bbc:	3b 18       	sub	r3, r11
 bbe:	01 c0       	rjmp	.+2      	; 0xbc2 <__stack+0x2c3>
 bc0:	31 2c       	mov	r3, r1
 bc2:	34 ff       	sbrs	r19, 4
 bc4:	12 c0       	rjmp	.+36     	; 0xbea <__stack+0x2eb>
 bc6:	b7 01       	movw	r22, r14
 bc8:	80 e3       	ldi	r24, 0x30	; 48
 bca:	90 e0       	ldi	r25, 0x00	; 0
 bcc:	3c 87       	std	Y+12, r19	; 0x0c
 bce:	0e 94 41 06 	call	0xc82	; 0xc82 <fputc>
 bd2:	3c 85       	ldd	r19, Y+12	; 0x0c
 bd4:	32 ff       	sbrs	r19, 2
 bd6:	17 c0       	rjmp	.+46     	; 0xc06 <__stack+0x307>
 bd8:	31 fd       	sbrc	r19, 1
 bda:	03 c0       	rjmp	.+6      	; 0xbe2 <__stack+0x2e3>
 bdc:	88 e7       	ldi	r24, 0x78	; 120
 bde:	90 e0       	ldi	r25, 0x00	; 0
 be0:	02 c0       	rjmp	.+4      	; 0xbe6 <__stack+0x2e7>
 be2:	88 e5       	ldi	r24, 0x58	; 88
 be4:	90 e0       	ldi	r25, 0x00	; 0
 be6:	b7 01       	movw	r22, r14
 be8:	0c c0       	rjmp	.+24     	; 0xc02 <__stack+0x303>
 bea:	83 2f       	mov	r24, r19
 bec:	86 78       	andi	r24, 0x86	; 134
 bee:	59 f0       	breq	.+22     	; 0xc06 <__stack+0x307>
 bf0:	31 ff       	sbrs	r19, 1
 bf2:	02 c0       	rjmp	.+4      	; 0xbf8 <__stack+0x2f9>
 bf4:	8b e2       	ldi	r24, 0x2B	; 43
 bf6:	01 c0       	rjmp	.+2      	; 0xbfa <__stack+0x2fb>
 bf8:	80 e2       	ldi	r24, 0x20	; 32
 bfa:	37 fd       	sbrc	r19, 7
 bfc:	8d e2       	ldi	r24, 0x2D	; 45
 bfe:	b7 01       	movw	r22, r14
 c00:	90 e0       	ldi	r25, 0x00	; 0
 c02:	0e 94 41 06 	call	0xc82	; 0xc82 <fputc>
 c06:	a5 14       	cp	r10, r5
 c08:	38 f4       	brcc	.+14     	; 0xc18 <__stack+0x319>
 c0a:	b7 01       	movw	r22, r14
 c0c:	80 e3       	ldi	r24, 0x30	; 48
 c0e:	90 e0       	ldi	r25, 0x00	; 0
 c10:	0e 94 41 06 	call	0xc82	; 0xc82 <fputc>
 c14:	5a 94       	dec	r5
 c16:	f7 cf       	rjmp	.-18     	; 0xc06 <__stack+0x307>
 c18:	aa 94       	dec	r10
 c1a:	f4 01       	movw	r30, r8
 c1c:	ea 0d       	add	r30, r10
 c1e:	f1 1d       	adc	r31, r1
 c20:	80 81       	ld	r24, Z
 c22:	b7 01       	movw	r22, r14
 c24:	90 e0       	ldi	r25, 0x00	; 0
 c26:	0e 94 41 06 	call	0xc82	; 0xc82 <fputc>
 c2a:	a1 10       	cpse	r10, r1
 c2c:	f5 cf       	rjmp	.-22     	; 0xc18 <__stack+0x319>
 c2e:	33 20       	and	r3, r3
 c30:	09 f4       	brne	.+2      	; 0xc34 <__stack+0x335>
 c32:	51 ce       	rjmp	.-862    	; 0x8d6 <vfprintf+0x24>
 c34:	b7 01       	movw	r22, r14
 c36:	80 e2       	ldi	r24, 0x20	; 32
 c38:	90 e0       	ldi	r25, 0x00	; 0
 c3a:	0e 94 41 06 	call	0xc82	; 0xc82 <fputc>
 c3e:	3a 94       	dec	r3
 c40:	f6 cf       	rjmp	.-20     	; 0xc2e <__stack+0x32f>
 c42:	f7 01       	movw	r30, r14
 c44:	86 81       	ldd	r24, Z+6	; 0x06
 c46:	97 81       	ldd	r25, Z+7	; 0x07
 c48:	02 c0       	rjmp	.+4      	; 0xc4e <__stack+0x34f>
 c4a:	8f ef       	ldi	r24, 0xFF	; 255
 c4c:	9f ef       	ldi	r25, 0xFF	; 255
 c4e:	2c 96       	adiw	r28, 0x0c	; 12
 c50:	e2 e1       	ldi	r30, 0x12	; 18
 c52:	0c 94 f3 06 	jmp	0xde6	; 0xde6 <__epilogue_restores__>

00000c56 <strnlen_P>:
 c56:	fc 01       	movw	r30, r24
 c58:	05 90       	lpm	r0, Z+
 c5a:	61 50       	subi	r22, 0x01	; 1
 c5c:	70 40       	sbci	r23, 0x00	; 0
 c5e:	01 10       	cpse	r0, r1
 c60:	d8 f7       	brcc	.-10     	; 0xc58 <strnlen_P+0x2>
 c62:	80 95       	com	r24
 c64:	90 95       	com	r25
 c66:	8e 0f       	add	r24, r30
 c68:	9f 1f       	adc	r25, r31
 c6a:	08 95       	ret

00000c6c <strnlen>:
 c6c:	fc 01       	movw	r30, r24
 c6e:	61 50       	subi	r22, 0x01	; 1
 c70:	70 40       	sbci	r23, 0x00	; 0
 c72:	01 90       	ld	r0, Z+
 c74:	01 10       	cpse	r0, r1
 c76:	d8 f7       	brcc	.-10     	; 0xc6e <strnlen+0x2>
 c78:	80 95       	com	r24
 c7a:	90 95       	com	r25
 c7c:	8e 0f       	add	r24, r30
 c7e:	9f 1f       	adc	r25, r31
 c80:	08 95       	ret

00000c82 <fputc>:
 c82:	0f 93       	push	r16
 c84:	1f 93       	push	r17
 c86:	cf 93       	push	r28
 c88:	df 93       	push	r29
 c8a:	fb 01       	movw	r30, r22
 c8c:	23 81       	ldd	r18, Z+3	; 0x03
 c8e:	21 fd       	sbrc	r18, 1
 c90:	03 c0       	rjmp	.+6      	; 0xc98 <fputc+0x16>
 c92:	8f ef       	ldi	r24, 0xFF	; 255
 c94:	9f ef       	ldi	r25, 0xFF	; 255
 c96:	28 c0       	rjmp	.+80     	; 0xce8 <fputc+0x66>
 c98:	22 ff       	sbrs	r18, 2
 c9a:	16 c0       	rjmp	.+44     	; 0xcc8 <fputc+0x46>
 c9c:	46 81       	ldd	r20, Z+6	; 0x06
 c9e:	57 81       	ldd	r21, Z+7	; 0x07
 ca0:	24 81       	ldd	r18, Z+4	; 0x04
 ca2:	35 81       	ldd	r19, Z+5	; 0x05
 ca4:	42 17       	cp	r20, r18
 ca6:	53 07       	cpc	r21, r19
 ca8:	44 f4       	brge	.+16     	; 0xcba <fputc+0x38>
 caa:	a0 81       	ld	r26, Z
 cac:	b1 81       	ldd	r27, Z+1	; 0x01
 cae:	9d 01       	movw	r18, r26
 cb0:	2f 5f       	subi	r18, 0xFF	; 255
 cb2:	3f 4f       	sbci	r19, 0xFF	; 255
 cb4:	31 83       	std	Z+1, r19	; 0x01
 cb6:	20 83       	st	Z, r18
 cb8:	8c 93       	st	X, r24
 cba:	26 81       	ldd	r18, Z+6	; 0x06
 cbc:	37 81       	ldd	r19, Z+7	; 0x07
 cbe:	2f 5f       	subi	r18, 0xFF	; 255
 cc0:	3f 4f       	sbci	r19, 0xFF	; 255
 cc2:	37 83       	std	Z+7, r19	; 0x07
 cc4:	26 83       	std	Z+6, r18	; 0x06
 cc6:	10 c0       	rjmp	.+32     	; 0xce8 <fputc+0x66>
 cc8:	eb 01       	movw	r28, r22
 cca:	09 2f       	mov	r16, r25
 ccc:	18 2f       	mov	r17, r24
 cce:	00 84       	ldd	r0, Z+8	; 0x08
 cd0:	f1 85       	ldd	r31, Z+9	; 0x09
 cd2:	e0 2d       	mov	r30, r0
 cd4:	09 95       	icall
 cd6:	89 2b       	or	r24, r25
 cd8:	e1 f6       	brne	.-72     	; 0xc92 <fputc+0x10>
 cda:	8e 81       	ldd	r24, Y+6	; 0x06
 cdc:	9f 81       	ldd	r25, Y+7	; 0x07
 cde:	01 96       	adiw	r24, 0x01	; 1
 ce0:	9f 83       	std	Y+7, r25	; 0x07
 ce2:	8e 83       	std	Y+6, r24	; 0x06
 ce4:	81 2f       	mov	r24, r17
 ce6:	90 2f       	mov	r25, r16
 ce8:	df 91       	pop	r29
 cea:	cf 91       	pop	r28
 cec:	1f 91       	pop	r17
 cee:	0f 91       	pop	r16
 cf0:	08 95       	ret

00000cf2 <__ultoa_invert>:
 cf2:	fa 01       	movw	r30, r20
 cf4:	aa 27       	eor	r26, r26
 cf6:	28 30       	cpi	r18, 0x08	; 8
 cf8:	51 f1       	breq	.+84     	; 0xd4e <__ultoa_invert+0x5c>
 cfa:	20 31       	cpi	r18, 0x10	; 16
 cfc:	81 f1       	breq	.+96     	; 0xd5e <__ultoa_invert+0x6c>
 cfe:	e8 94       	clt
 d00:	6f 93       	push	r22
 d02:	6e 7f       	andi	r22, 0xFE	; 254
 d04:	6e 5f       	subi	r22, 0xFE	; 254
 d06:	7f 4f       	sbci	r23, 0xFF	; 255
 d08:	8f 4f       	sbci	r24, 0xFF	; 255
 d0a:	9f 4f       	sbci	r25, 0xFF	; 255
 d0c:	af 4f       	sbci	r26, 0xFF	; 255
 d0e:	b1 e0       	ldi	r27, 0x01	; 1
 d10:	3e d0       	rcall	.+124    	; 0xd8e <__ultoa_invert+0x9c>
 d12:	b4 e0       	ldi	r27, 0x04	; 4
 d14:	3c d0       	rcall	.+120    	; 0xd8e <__ultoa_invert+0x9c>
 d16:	67 0f       	add	r22, r23
 d18:	78 1f       	adc	r23, r24
 d1a:	89 1f       	adc	r24, r25
 d1c:	9a 1f       	adc	r25, r26
 d1e:	a1 1d       	adc	r26, r1
 d20:	68 0f       	add	r22, r24
 d22:	79 1f       	adc	r23, r25
 d24:	8a 1f       	adc	r24, r26
 d26:	91 1d       	adc	r25, r1
 d28:	a1 1d       	adc	r26, r1
 d2a:	6a 0f       	add	r22, r26
 d2c:	71 1d       	adc	r23, r1
 d2e:	81 1d       	adc	r24, r1
 d30:	91 1d       	adc	r25, r1
 d32:	a1 1d       	adc	r26, r1
 d34:	20 d0       	rcall	.+64     	; 0xd76 <__ultoa_invert+0x84>
 d36:	09 f4       	brne	.+2      	; 0xd3a <__ultoa_invert+0x48>
 d38:	68 94       	set
 d3a:	3f 91       	pop	r19
 d3c:	2a e0       	ldi	r18, 0x0A	; 10
 d3e:	26 9f       	mul	r18, r22
 d40:	11 24       	eor	r1, r1
 d42:	30 19       	sub	r19, r0
 d44:	30 5d       	subi	r19, 0xD0	; 208
 d46:	31 93       	st	Z+, r19
 d48:	de f6       	brtc	.-74     	; 0xd00 <__ultoa_invert+0xe>
 d4a:	cf 01       	movw	r24, r30
 d4c:	08 95       	ret
 d4e:	46 2f       	mov	r20, r22
 d50:	47 70       	andi	r20, 0x07	; 7
 d52:	40 5d       	subi	r20, 0xD0	; 208
 d54:	41 93       	st	Z+, r20
 d56:	b3 e0       	ldi	r27, 0x03	; 3
 d58:	0f d0       	rcall	.+30     	; 0xd78 <__ultoa_invert+0x86>
 d5a:	c9 f7       	brne	.-14     	; 0xd4e <__ultoa_invert+0x5c>
 d5c:	f6 cf       	rjmp	.-20     	; 0xd4a <__ultoa_invert+0x58>
 d5e:	46 2f       	mov	r20, r22
 d60:	4f 70       	andi	r20, 0x0F	; 15
 d62:	40 5d       	subi	r20, 0xD0	; 208
 d64:	4a 33       	cpi	r20, 0x3A	; 58
 d66:	18 f0       	brcs	.+6      	; 0xd6e <__ultoa_invert+0x7c>
 d68:	49 5d       	subi	r20, 0xD9	; 217
 d6a:	31 fd       	sbrc	r19, 1
 d6c:	40 52       	subi	r20, 0x20	; 32
 d6e:	41 93       	st	Z+, r20
 d70:	02 d0       	rcall	.+4      	; 0xd76 <__ultoa_invert+0x84>
 d72:	a9 f7       	brne	.-22     	; 0xd5e <__ultoa_invert+0x6c>
 d74:	ea cf       	rjmp	.-44     	; 0xd4a <__ultoa_invert+0x58>
 d76:	b4 e0       	ldi	r27, 0x04	; 4
 d78:	a6 95       	lsr	r26
 d7a:	97 95       	ror	r25
 d7c:	87 95       	ror	r24
 d7e:	77 95       	ror	r23
 d80:	67 95       	ror	r22
 d82:	ba 95       	dec	r27
 d84:	c9 f7       	brne	.-14     	; 0xd78 <__ultoa_invert+0x86>
 d86:	00 97       	sbiw	r24, 0x00	; 0
 d88:	61 05       	cpc	r22, r1
 d8a:	71 05       	cpc	r23, r1
 d8c:	08 95       	ret
 d8e:	9b 01       	movw	r18, r22
 d90:	ac 01       	movw	r20, r24
 d92:	0a 2e       	mov	r0, r26
 d94:	06 94       	lsr	r0
 d96:	57 95       	ror	r21
 d98:	47 95       	ror	r20
 d9a:	37 95       	ror	r19
 d9c:	27 95       	ror	r18
 d9e:	ba 95       	dec	r27
 da0:	c9 f7       	brne	.-14     	; 0xd94 <__ultoa_invert+0xa2>
 da2:	62 0f       	add	r22, r18
 da4:	73 1f       	adc	r23, r19
 da6:	84 1f       	adc	r24, r20
 da8:	95 1f       	adc	r25, r21
 daa:	a0 1d       	adc	r26, r0
 dac:	08 95       	ret

00000dae <__prologue_saves__>:
 dae:	2f 92       	push	r2
 db0:	3f 92       	push	r3
 db2:	4f 92       	push	r4
 db4:	5f 92       	push	r5
 db6:	6f 92       	push	r6
 db8:	7f 92       	push	r7
 dba:	8f 92       	push	r8
 dbc:	9f 92       	push	r9
 dbe:	af 92       	push	r10
 dc0:	bf 92       	push	r11
 dc2:	cf 92       	push	r12
 dc4:	df 92       	push	r13
 dc6:	ef 92       	push	r14
 dc8:	ff 92       	push	r15
 dca:	0f 93       	push	r16
 dcc:	1f 93       	push	r17
 dce:	cf 93       	push	r28
 dd0:	df 93       	push	r29
 dd2:	cd b7       	in	r28, 0x3d	; 61
 dd4:	de b7       	in	r29, 0x3e	; 62
 dd6:	ca 1b       	sub	r28, r26
 dd8:	db 0b       	sbc	r29, r27
 dda:	0f b6       	in	r0, 0x3f	; 63
 ddc:	f8 94       	cli
 dde:	de bf       	out	0x3e, r29	; 62
 de0:	0f be       	out	0x3f, r0	; 63
 de2:	cd bf       	out	0x3d, r28	; 61
 de4:	09 94       	ijmp

00000de6 <__epilogue_restores__>:
 de6:	2a 88       	ldd	r2, Y+18	; 0x12
 de8:	39 88       	ldd	r3, Y+17	; 0x11
 dea:	48 88       	ldd	r4, Y+16	; 0x10
 dec:	5f 84       	ldd	r5, Y+15	; 0x0f
 dee:	6e 84       	ldd	r6, Y+14	; 0x0e
 df0:	7d 84       	ldd	r7, Y+13	; 0x0d
 df2:	8c 84       	ldd	r8, Y+12	; 0x0c
 df4:	9b 84       	ldd	r9, Y+11	; 0x0b
 df6:	aa 84       	ldd	r10, Y+10	; 0x0a
 df8:	b9 84       	ldd	r11, Y+9	; 0x09
 dfa:	c8 84       	ldd	r12, Y+8	; 0x08
 dfc:	df 80       	ldd	r13, Y+7	; 0x07
 dfe:	ee 80       	ldd	r14, Y+6	; 0x06
 e00:	fd 80       	ldd	r15, Y+5	; 0x05
 e02:	0c 81       	ldd	r16, Y+4	; 0x04
 e04:	1b 81       	ldd	r17, Y+3	; 0x03
 e06:	aa 81       	ldd	r26, Y+2	; 0x02
 e08:	b9 81       	ldd	r27, Y+1	; 0x01
 e0a:	ce 0f       	add	r28, r30
 e0c:	d1 1d       	adc	r29, r1
 e0e:	0f b6       	in	r0, 0x3f	; 63
 e10:	f8 94       	cli
 e12:	de bf       	out	0x3e, r29	; 62
 e14:	0f be       	out	0x3f, r0	; 63
 e16:	cd bf       	out	0x3d, r28	; 61
 e18:	ed 01       	movw	r28, r26
 e1a:	08 95       	ret

00000e1c <_exit>:
 e1c:	f8 94       	cli

00000e1e <__stop_program>:
 e1e:	ff cf       	rjmp	.-2      	; 0xe1e <__stop_program>
=======
 4e4:	bc 01       	movw	r22, r24
 4e6:	80 e0       	ldi	r24, 0x00	; 0
 4e8:	90 e0       	ldi	r25, 0x00	; 0
 4ea:	0e 94 3d 03 	call	0x67a	; 0x67a <__floatunsisf>
 4ee:	2b e8       	ldi	r18, 0x8B	; 139
 4f0:	3c ee       	ldi	r19, 0xEC	; 236
 4f2:	41 e7       	ldi	r20, 0x71	; 113
 4f4:	52 e4       	ldi	r21, 0x42	; 66
 4f6:	0e 94 cb 03 	call	0x796	; 0x796 <__mulsf3>
 4fa:	0e 94 0e 03 	call	0x61c	; 0x61c <__fixunssfsi>
	buffer = 28755;
	buffer = buffer - buf_adc;
 4fe:	03 e5       	ldi	r16, 0x53	; 83
 500:	10 e7       	ldi	r17, 0x70	; 112
 502:	20 e0       	ldi	r18, 0x00	; 0
 504:	30 e0       	ldi	r19, 0x00	; 0
 506:	68 01       	movw	r12, r16
 508:	79 01       	movw	r14, r18
 50a:	c6 1a       	sub	r12, r22
 50c:	d7 0a       	sbc	r13, r23
 50e:	e8 0a       	sbc	r14, r24
 510:	f9 0a       	sbc	r15, r25
 512:	c7 01       	movw	r24, r14
 514:	b6 01       	movw	r22, r12

	temperture = (uint16_t) round(buffer / 100);
 516:	24 e6       	ldi	r18, 0x64	; 100
 518:	30 e0       	ldi	r19, 0x00	; 0
 51a:	40 e0       	ldi	r20, 0x00	; 0
 51c:	50 e0       	ldi	r21, 0x00	; 0
 51e:	0e 94 85 04 	call	0x90a	; 0x90a <__udivmodsi4>
 522:	ca 01       	movw	r24, r20
 524:	b9 01       	movw	r22, r18
 526:	0e 94 3d 03 	call	0x67a	; 0x67a <__floatunsisf>
 52a:	0e 94 38 04 	call	0x870	; 0x870 <round>
 52e:	0e 94 0e 03 	call	0x61c	; 0x61c <__fixunssfsi>
	
	return temperture;
	
 532:	cb 01       	movw	r24, r22
 534:	1f 91       	pop	r17
 536:	0f 91       	pop	r16
 538:	ff 90       	pop	r15
 53a:	ef 90       	pop	r14
 53c:	df 90       	pop	r13
 53e:	cf 90       	pop	r12
 540:	08 95       	ret

00000542 <__subsf3>:
 542:	50 58       	subi	r21, 0x80	; 128

00000544 <__addsf3>:
 544:	bb 27       	eor	r27, r27
 546:	aa 27       	eor	r26, r26
 548:	0e 94 b9 02 	call	0x572	; 0x572 <__addsf3x>
 54c:	0c 94 91 03 	jmp	0x722	; 0x722 <__fp_round>
 550:	0e 94 83 03 	call	0x706	; 0x706 <__fp_pscA>
 554:	38 f0       	brcs	.+14     	; 0x564 <__addsf3+0x20>
 556:	0e 94 8a 03 	call	0x714	; 0x714 <__fp_pscB>
 55a:	20 f0       	brcs	.+8      	; 0x564 <__addsf3+0x20>
 55c:	39 f4       	brne	.+14     	; 0x56c <__addsf3+0x28>
 55e:	9f 3f       	cpi	r25, 0xFF	; 255
 560:	19 f4       	brne	.+6      	; 0x568 <__addsf3+0x24>
 562:	26 f4       	brtc	.+8      	; 0x56c <__addsf3+0x28>
 564:	0c 94 80 03 	jmp	0x700	; 0x700 <__fp_nan>
 568:	0e f4       	brtc	.+2      	; 0x56c <__addsf3+0x28>
 56a:	e0 95       	com	r30
 56c:	e7 fb       	bst	r30, 7
 56e:	0c 94 7a 03 	jmp	0x6f4	; 0x6f4 <__fp_inf>

00000572 <__addsf3x>:
 572:	e9 2f       	mov	r30, r25
 574:	0e 94 a2 03 	call	0x744	; 0x744 <__fp_split3>
 578:	58 f3       	brcs	.-42     	; 0x550 <__addsf3+0xc>
 57a:	ba 17       	cp	r27, r26
 57c:	62 07       	cpc	r22, r18
 57e:	73 07       	cpc	r23, r19
 580:	84 07       	cpc	r24, r20
 582:	95 07       	cpc	r25, r21
 584:	20 f0       	brcs	.+8      	; 0x58e <__addsf3x+0x1c>
 586:	79 f4       	brne	.+30     	; 0x5a6 <__addsf3x+0x34>
 588:	a6 f5       	brtc	.+104    	; 0x5f2 <__addsf3x+0x80>
 58a:	0c 94 c4 03 	jmp	0x788	; 0x788 <__fp_zero>
 58e:	0e f4       	brtc	.+2      	; 0x592 <__addsf3x+0x20>
 590:	e0 95       	com	r30
 592:	0b 2e       	mov	r0, r27
 594:	ba 2f       	mov	r27, r26
 596:	a0 2d       	mov	r26, r0
 598:	0b 01       	movw	r0, r22
 59a:	b9 01       	movw	r22, r18
 59c:	90 01       	movw	r18, r0
 59e:	0c 01       	movw	r0, r24
 5a0:	ca 01       	movw	r24, r20
 5a2:	a0 01       	movw	r20, r0
 5a4:	11 24       	eor	r1, r1
 5a6:	ff 27       	eor	r31, r31
 5a8:	59 1b       	sub	r21, r25
 5aa:	99 f0       	breq	.+38     	; 0x5d2 <__addsf3x+0x60>
 5ac:	59 3f       	cpi	r21, 0xF9	; 249
 5ae:	50 f4       	brcc	.+20     	; 0x5c4 <__addsf3x+0x52>
 5b0:	50 3e       	cpi	r21, 0xE0	; 224
 5b2:	68 f1       	brcs	.+90     	; 0x60e <__addsf3x+0x9c>
 5b4:	1a 16       	cp	r1, r26
 5b6:	f0 40       	sbci	r31, 0x00	; 0
 5b8:	a2 2f       	mov	r26, r18
 5ba:	23 2f       	mov	r18, r19
 5bc:	34 2f       	mov	r19, r20
 5be:	44 27       	eor	r20, r20
 5c0:	58 5f       	subi	r21, 0xF8	; 248
 5c2:	f3 cf       	rjmp	.-26     	; 0x5aa <__addsf3x+0x38>
 5c4:	46 95       	lsr	r20
 5c6:	37 95       	ror	r19
 5c8:	27 95       	ror	r18
 5ca:	a7 95       	ror	r26
 5cc:	f0 40       	sbci	r31, 0x00	; 0
 5ce:	53 95       	inc	r21
 5d0:	c9 f7       	brne	.-14     	; 0x5c4 <__addsf3x+0x52>
 5d2:	7e f4       	brtc	.+30     	; 0x5f2 <__addsf3x+0x80>
 5d4:	1f 16       	cp	r1, r31
 5d6:	ba 0b       	sbc	r27, r26
 5d8:	62 0b       	sbc	r22, r18
 5da:	73 0b       	sbc	r23, r19
 5dc:	84 0b       	sbc	r24, r20
 5de:	ba f0       	brmi	.+46     	; 0x60e <__addsf3x+0x9c>
 5e0:	91 50       	subi	r25, 0x01	; 1
 5e2:	a1 f0       	breq	.+40     	; 0x60c <__addsf3x+0x9a>
 5e4:	ff 0f       	add	r31, r31
 5e6:	bb 1f       	adc	r27, r27
 5e8:	66 1f       	adc	r22, r22
 5ea:	77 1f       	adc	r23, r23
 5ec:	88 1f       	adc	r24, r24
 5ee:	c2 f7       	brpl	.-16     	; 0x5e0 <__addsf3x+0x6e>
 5f0:	0e c0       	rjmp	.+28     	; 0x60e <__addsf3x+0x9c>
 5f2:	ba 0f       	add	r27, r26
 5f4:	62 1f       	adc	r22, r18
 5f6:	73 1f       	adc	r23, r19
 5f8:	84 1f       	adc	r24, r20
 5fa:	48 f4       	brcc	.+18     	; 0x60e <__addsf3x+0x9c>
 5fc:	87 95       	ror	r24
 5fe:	77 95       	ror	r23
 600:	67 95       	ror	r22
 602:	b7 95       	ror	r27
 604:	f7 95       	ror	r31
 606:	9e 3f       	cpi	r25, 0xFE	; 254
 608:	08 f0       	brcs	.+2      	; 0x60c <__addsf3x+0x9a>
 60a:	b0 cf       	rjmp	.-160    	; 0x56c <__addsf3+0x28>
 60c:	93 95       	inc	r25
 60e:	88 0f       	add	r24, r24
 610:	08 f0       	brcs	.+2      	; 0x614 <__addsf3x+0xa2>
 612:	99 27       	eor	r25, r25
 614:	ee 0f       	add	r30, r30
 616:	97 95       	ror	r25
 618:	87 95       	ror	r24
 61a:	08 95       	ret

0000061c <__fixunssfsi>:
 61c:	0e 94 aa 03 	call	0x754	; 0x754 <__fp_splitA>
 620:	88 f0       	brcs	.+34     	; 0x644 <__fixunssfsi+0x28>
 622:	9f 57       	subi	r25, 0x7F	; 127
 624:	98 f0       	brcs	.+38     	; 0x64c <__fixunssfsi+0x30>
 626:	b9 2f       	mov	r27, r25
 628:	99 27       	eor	r25, r25
 62a:	b7 51       	subi	r27, 0x17	; 23
 62c:	b0 f0       	brcs	.+44     	; 0x65a <__fixunssfsi+0x3e>
 62e:	e1 f0       	breq	.+56     	; 0x668 <__fixunssfsi+0x4c>
 630:	66 0f       	add	r22, r22
 632:	77 1f       	adc	r23, r23
 634:	88 1f       	adc	r24, r24
 636:	99 1f       	adc	r25, r25
 638:	1a f0       	brmi	.+6      	; 0x640 <__fixunssfsi+0x24>
 63a:	ba 95       	dec	r27
 63c:	c9 f7       	brne	.-14     	; 0x630 <__fixunssfsi+0x14>
 63e:	14 c0       	rjmp	.+40     	; 0x668 <__fixunssfsi+0x4c>
 640:	b1 30       	cpi	r27, 0x01	; 1
 642:	91 f0       	breq	.+36     	; 0x668 <__fixunssfsi+0x4c>
 644:	0e 94 c4 03 	call	0x788	; 0x788 <__fp_zero>
 648:	b1 e0       	ldi	r27, 0x01	; 1
 64a:	08 95       	ret
 64c:	0c 94 c4 03 	jmp	0x788	; 0x788 <__fp_zero>
 650:	67 2f       	mov	r22, r23
 652:	78 2f       	mov	r23, r24
 654:	88 27       	eor	r24, r24
 656:	b8 5f       	subi	r27, 0xF8	; 248
 658:	39 f0       	breq	.+14     	; 0x668 <__fixunssfsi+0x4c>
 65a:	b9 3f       	cpi	r27, 0xF9	; 249
 65c:	cc f3       	brlt	.-14     	; 0x650 <__fixunssfsi+0x34>
 65e:	86 95       	lsr	r24
 660:	77 95       	ror	r23
 662:	67 95       	ror	r22
 664:	b3 95       	inc	r27
 666:	d9 f7       	brne	.-10     	; 0x65e <__fixunssfsi+0x42>
 668:	3e f4       	brtc	.+14     	; 0x678 <__fixunssfsi+0x5c>
 66a:	90 95       	com	r25
 66c:	80 95       	com	r24
 66e:	70 95       	com	r23
 670:	61 95       	neg	r22
 672:	7f 4f       	sbci	r23, 0xFF	; 255
 674:	8f 4f       	sbci	r24, 0xFF	; 255
 676:	9f 4f       	sbci	r25, 0xFF	; 255
 678:	08 95       	ret

0000067a <__floatunsisf>:
 67a:	e8 94       	clt
 67c:	09 c0       	rjmp	.+18     	; 0x690 <__floatsisf+0x12>

0000067e <__floatsisf>:
 67e:	97 fb       	bst	r25, 7
 680:	3e f4       	brtc	.+14     	; 0x690 <__floatsisf+0x12>
 682:	90 95       	com	r25
 684:	80 95       	com	r24
 686:	70 95       	com	r23
 688:	61 95       	neg	r22
 68a:	7f 4f       	sbci	r23, 0xFF	; 255
 68c:	8f 4f       	sbci	r24, 0xFF	; 255
 68e:	9f 4f       	sbci	r25, 0xFF	; 255
 690:	99 23       	and	r25, r25
 692:	a9 f0       	breq	.+42     	; 0x6be <__floatsisf+0x40>
 694:	f9 2f       	mov	r31, r25
 696:	96 e9       	ldi	r25, 0x96	; 150
 698:	bb 27       	eor	r27, r27
 69a:	93 95       	inc	r25
 69c:	f6 95       	lsr	r31
 69e:	87 95       	ror	r24
 6a0:	77 95       	ror	r23
 6a2:	67 95       	ror	r22
 6a4:	b7 95       	ror	r27
 6a6:	f1 11       	cpse	r31, r1
 6a8:	f8 cf       	rjmp	.-16     	; 0x69a <__floatsisf+0x1c>
 6aa:	fa f4       	brpl	.+62     	; 0x6ea <__floatsisf+0x6c>
 6ac:	bb 0f       	add	r27, r27
 6ae:	11 f4       	brne	.+4      	; 0x6b4 <__floatsisf+0x36>
 6b0:	60 ff       	sbrs	r22, 0
 6b2:	1b c0       	rjmp	.+54     	; 0x6ea <__floatsisf+0x6c>
 6b4:	6f 5f       	subi	r22, 0xFF	; 255
 6b6:	7f 4f       	sbci	r23, 0xFF	; 255
 6b8:	8f 4f       	sbci	r24, 0xFF	; 255
 6ba:	9f 4f       	sbci	r25, 0xFF	; 255
 6bc:	16 c0       	rjmp	.+44     	; 0x6ea <__floatsisf+0x6c>
 6be:	88 23       	and	r24, r24
 6c0:	11 f0       	breq	.+4      	; 0x6c6 <__floatsisf+0x48>
 6c2:	96 e9       	ldi	r25, 0x96	; 150
 6c4:	11 c0       	rjmp	.+34     	; 0x6e8 <__floatsisf+0x6a>
 6c6:	77 23       	and	r23, r23
 6c8:	21 f0       	breq	.+8      	; 0x6d2 <__floatsisf+0x54>
 6ca:	9e e8       	ldi	r25, 0x8E	; 142
 6cc:	87 2f       	mov	r24, r23
 6ce:	76 2f       	mov	r23, r22
 6d0:	05 c0       	rjmp	.+10     	; 0x6dc <__floatsisf+0x5e>
 6d2:	66 23       	and	r22, r22
 6d4:	71 f0       	breq	.+28     	; 0x6f2 <__floatsisf+0x74>
 6d6:	96 e8       	ldi	r25, 0x86	; 134
 6d8:	86 2f       	mov	r24, r22
 6da:	70 e0       	ldi	r23, 0x00	; 0
 6dc:	60 e0       	ldi	r22, 0x00	; 0
 6de:	2a f0       	brmi	.+10     	; 0x6ea <__floatsisf+0x6c>
 6e0:	9a 95       	dec	r25
 6e2:	66 0f       	add	r22, r22
 6e4:	77 1f       	adc	r23, r23
 6e6:	88 1f       	adc	r24, r24
 6e8:	da f7       	brpl	.-10     	; 0x6e0 <__floatsisf+0x62>
 6ea:	88 0f       	add	r24, r24
 6ec:	96 95       	lsr	r25
 6ee:	87 95       	ror	r24
 6f0:	97 f9       	bld	r25, 7
 6f2:	08 95       	ret

000006f4 <__fp_inf>:
 6f4:	97 f9       	bld	r25, 7
 6f6:	9f 67       	ori	r25, 0x7F	; 127
 6f8:	80 e8       	ldi	r24, 0x80	; 128
 6fa:	70 e0       	ldi	r23, 0x00	; 0
 6fc:	60 e0       	ldi	r22, 0x00	; 0
 6fe:	08 95       	ret

00000700 <__fp_nan>:
 700:	9f ef       	ldi	r25, 0xFF	; 255
 702:	80 ec       	ldi	r24, 0xC0	; 192
 704:	08 95       	ret

00000706 <__fp_pscA>:
 706:	00 24       	eor	r0, r0
 708:	0a 94       	dec	r0
 70a:	16 16       	cp	r1, r22
 70c:	17 06       	cpc	r1, r23
 70e:	18 06       	cpc	r1, r24
 710:	09 06       	cpc	r0, r25
 712:	08 95       	ret

00000714 <__fp_pscB>:
 714:	00 24       	eor	r0, r0
 716:	0a 94       	dec	r0
 718:	12 16       	cp	r1, r18
 71a:	13 06       	cpc	r1, r19
 71c:	14 06       	cpc	r1, r20
 71e:	05 06       	cpc	r0, r21
 720:	08 95       	ret

00000722 <__fp_round>:
 722:	09 2e       	mov	r0, r25
 724:	03 94       	inc	r0
 726:	00 0c       	add	r0, r0
 728:	11 f4       	brne	.+4      	; 0x72e <__fp_round+0xc>
 72a:	88 23       	and	r24, r24
 72c:	52 f0       	brmi	.+20     	; 0x742 <__fp_round+0x20>
 72e:	bb 0f       	add	r27, r27
 730:	40 f4       	brcc	.+16     	; 0x742 <__fp_round+0x20>
 732:	bf 2b       	or	r27, r31
 734:	11 f4       	brne	.+4      	; 0x73a <__fp_round+0x18>
 736:	60 ff       	sbrs	r22, 0
 738:	04 c0       	rjmp	.+8      	; 0x742 <__fp_round+0x20>
 73a:	6f 5f       	subi	r22, 0xFF	; 255
 73c:	7f 4f       	sbci	r23, 0xFF	; 255
 73e:	8f 4f       	sbci	r24, 0xFF	; 255
 740:	9f 4f       	sbci	r25, 0xFF	; 255
 742:	08 95       	ret

00000744 <__fp_split3>:
 744:	57 fd       	sbrc	r21, 7
 746:	90 58       	subi	r25, 0x80	; 128
 748:	44 0f       	add	r20, r20
 74a:	55 1f       	adc	r21, r21
 74c:	59 f0       	breq	.+22     	; 0x764 <__fp_splitA+0x10>
 74e:	5f 3f       	cpi	r21, 0xFF	; 255
 750:	71 f0       	breq	.+28     	; 0x76e <__fp_splitA+0x1a>
 752:	47 95       	ror	r20

00000754 <__fp_splitA>:
 754:	88 0f       	add	r24, r24
 756:	97 fb       	bst	r25, 7
 758:	99 1f       	adc	r25, r25
 75a:	61 f0       	breq	.+24     	; 0x774 <__fp_splitA+0x20>
 75c:	9f 3f       	cpi	r25, 0xFF	; 255
 75e:	79 f0       	breq	.+30     	; 0x77e <__fp_splitA+0x2a>
 760:	87 95       	ror	r24
 762:	08 95       	ret
 764:	12 16       	cp	r1, r18
 766:	13 06       	cpc	r1, r19
 768:	14 06       	cpc	r1, r20
 76a:	55 1f       	adc	r21, r21
 76c:	f2 cf       	rjmp	.-28     	; 0x752 <__fp_split3+0xe>
 76e:	46 95       	lsr	r20
 770:	f1 df       	rcall	.-30     	; 0x754 <__fp_splitA>
 772:	08 c0       	rjmp	.+16     	; 0x784 <__fp_splitA+0x30>
 774:	16 16       	cp	r1, r22
 776:	17 06       	cpc	r1, r23
 778:	18 06       	cpc	r1, r24
 77a:	99 1f       	adc	r25, r25
 77c:	f1 cf       	rjmp	.-30     	; 0x760 <__fp_splitA+0xc>
 77e:	86 95       	lsr	r24
 780:	71 05       	cpc	r23, r1
 782:	61 05       	cpc	r22, r1
 784:	08 94       	sec
 786:	08 95       	ret

00000788 <__fp_zero>:
 788:	e8 94       	clt

0000078a <__fp_szero>:
 78a:	bb 27       	eor	r27, r27
 78c:	66 27       	eor	r22, r22
 78e:	77 27       	eor	r23, r23
 790:	cb 01       	movw	r24, r22
 792:	97 f9       	bld	r25, 7
 794:	08 95       	ret

00000796 <__mulsf3>:
 796:	0e 94 de 03 	call	0x7bc	; 0x7bc <__mulsf3x>
 79a:	0c 94 91 03 	jmp	0x722	; 0x722 <__fp_round>
 79e:	0e 94 83 03 	call	0x706	; 0x706 <__fp_pscA>
 7a2:	38 f0       	brcs	.+14     	; 0x7b2 <__mulsf3+0x1c>
 7a4:	0e 94 8a 03 	call	0x714	; 0x714 <__fp_pscB>
 7a8:	20 f0       	brcs	.+8      	; 0x7b2 <__mulsf3+0x1c>
 7aa:	95 23       	and	r25, r21
 7ac:	11 f0       	breq	.+4      	; 0x7b2 <__mulsf3+0x1c>
 7ae:	0c 94 7a 03 	jmp	0x6f4	; 0x6f4 <__fp_inf>
 7b2:	0c 94 80 03 	jmp	0x700	; 0x700 <__fp_nan>
 7b6:	11 24       	eor	r1, r1
 7b8:	0c 94 c5 03 	jmp	0x78a	; 0x78a <__fp_szero>

000007bc <__mulsf3x>:
 7bc:	0e 94 a2 03 	call	0x744	; 0x744 <__fp_split3>
 7c0:	70 f3       	brcs	.-36     	; 0x79e <__mulsf3+0x8>

000007c2 <__mulsf3_pse>:
 7c2:	95 9f       	mul	r25, r21
 7c4:	c1 f3       	breq	.-16     	; 0x7b6 <__mulsf3+0x20>
 7c6:	95 0f       	add	r25, r21
 7c8:	50 e0       	ldi	r21, 0x00	; 0
 7ca:	55 1f       	adc	r21, r21
 7cc:	62 9f       	mul	r22, r18
 7ce:	f0 01       	movw	r30, r0
 7d0:	72 9f       	mul	r23, r18
 7d2:	bb 27       	eor	r27, r27
 7d4:	f0 0d       	add	r31, r0
 7d6:	b1 1d       	adc	r27, r1
 7d8:	63 9f       	mul	r22, r19
 7da:	aa 27       	eor	r26, r26
 7dc:	f0 0d       	add	r31, r0
 7de:	b1 1d       	adc	r27, r1
 7e0:	aa 1f       	adc	r26, r26
 7e2:	64 9f       	mul	r22, r20
 7e4:	66 27       	eor	r22, r22
 7e6:	b0 0d       	add	r27, r0
 7e8:	a1 1d       	adc	r26, r1
 7ea:	66 1f       	adc	r22, r22
 7ec:	82 9f       	mul	r24, r18
 7ee:	22 27       	eor	r18, r18
 7f0:	b0 0d       	add	r27, r0
 7f2:	a1 1d       	adc	r26, r1
 7f4:	62 1f       	adc	r22, r18
 7f6:	73 9f       	mul	r23, r19
 7f8:	b0 0d       	add	r27, r0
 7fa:	a1 1d       	adc	r26, r1
 7fc:	62 1f       	adc	r22, r18
 7fe:	83 9f       	mul	r24, r19
 800:	a0 0d       	add	r26, r0
 802:	61 1d       	adc	r22, r1
 804:	22 1f       	adc	r18, r18
 806:	74 9f       	mul	r23, r20
 808:	33 27       	eor	r19, r19
 80a:	a0 0d       	add	r26, r0
 80c:	61 1d       	adc	r22, r1
 80e:	23 1f       	adc	r18, r19
 810:	84 9f       	mul	r24, r20
 812:	60 0d       	add	r22, r0
 814:	21 1d       	adc	r18, r1
 816:	82 2f       	mov	r24, r18
 818:	76 2f       	mov	r23, r22
 81a:	6a 2f       	mov	r22, r26
 81c:	11 24       	eor	r1, r1
 81e:	9f 57       	subi	r25, 0x7F	; 127
 820:	50 40       	sbci	r21, 0x00	; 0
 822:	9a f0       	brmi	.+38     	; 0x84a <__mulsf3_pse+0x88>
 824:	f1 f0       	breq	.+60     	; 0x862 <__mulsf3_pse+0xa0>
 826:	88 23       	and	r24, r24
 828:	4a f0       	brmi	.+18     	; 0x83c <__mulsf3_pse+0x7a>
 82a:	ee 0f       	add	r30, r30
 82c:	ff 1f       	adc	r31, r31
 82e:	bb 1f       	adc	r27, r27
 830:	66 1f       	adc	r22, r22
 832:	77 1f       	adc	r23, r23
 834:	88 1f       	adc	r24, r24
 836:	91 50       	subi	r25, 0x01	; 1
 838:	50 40       	sbci	r21, 0x00	; 0
 83a:	a9 f7       	brne	.-22     	; 0x826 <__mulsf3_pse+0x64>
 83c:	9e 3f       	cpi	r25, 0xFE	; 254
 83e:	51 05       	cpc	r21, r1
 840:	80 f0       	brcs	.+32     	; 0x862 <__mulsf3_pse+0xa0>
 842:	0c 94 7a 03 	jmp	0x6f4	; 0x6f4 <__fp_inf>
 846:	0c 94 c5 03 	jmp	0x78a	; 0x78a <__fp_szero>
 84a:	5f 3f       	cpi	r21, 0xFF	; 255
 84c:	e4 f3       	brlt	.-8      	; 0x846 <__mulsf3_pse+0x84>
 84e:	98 3e       	cpi	r25, 0xE8	; 232
 850:	d4 f3       	brlt	.-12     	; 0x846 <__mulsf3_pse+0x84>
 852:	86 95       	lsr	r24
 854:	77 95       	ror	r23
 856:	67 95       	ror	r22
 858:	b7 95       	ror	r27
 85a:	f7 95       	ror	r31
 85c:	e7 95       	ror	r30
 85e:	9f 5f       	subi	r25, 0xFF	; 255
 860:	c1 f7       	brne	.-16     	; 0x852 <__mulsf3_pse+0x90>
 862:	fe 2b       	or	r31, r30
 864:	88 0f       	add	r24, r24
 866:	91 1d       	adc	r25, r1
 868:	96 95       	lsr	r25
 86a:	87 95       	ror	r24
 86c:	97 f9       	bld	r25, 7
 86e:	08 95       	ret

00000870 <round>:
 870:	0e 94 aa 03 	call	0x754	; 0x754 <__fp_splitA>
 874:	e8 f0       	brcs	.+58     	; 0x8b0 <round+0x40>
 876:	9e 37       	cpi	r25, 0x7E	; 126
 878:	e8 f0       	brcs	.+58     	; 0x8b4 <round+0x44>
 87a:	96 39       	cpi	r25, 0x96	; 150
 87c:	b8 f4       	brcc	.+46     	; 0x8ac <round+0x3c>
 87e:	9e 38       	cpi	r25, 0x8E	; 142
 880:	48 f4       	brcc	.+18     	; 0x894 <round+0x24>
 882:	67 2f       	mov	r22, r23
 884:	78 2f       	mov	r23, r24
 886:	88 27       	eor	r24, r24
 888:	98 5f       	subi	r25, 0xF8	; 248
 88a:	f9 cf       	rjmp	.-14     	; 0x87e <round+0xe>
 88c:	86 95       	lsr	r24
 88e:	77 95       	ror	r23
 890:	67 95       	ror	r22
 892:	93 95       	inc	r25
 894:	95 39       	cpi	r25, 0x95	; 149
 896:	d0 f3       	brcs	.-12     	; 0x88c <round+0x1c>
 898:	b6 2f       	mov	r27, r22
 89a:	b1 70       	andi	r27, 0x01	; 1
 89c:	6b 0f       	add	r22, r27
 89e:	71 1d       	adc	r23, r1
 8a0:	81 1d       	adc	r24, r1
 8a2:	20 f4       	brcc	.+8      	; 0x8ac <round+0x3c>
 8a4:	87 95       	ror	r24
 8a6:	77 95       	ror	r23
 8a8:	67 95       	ror	r22
 8aa:	93 95       	inc	r25
 8ac:	0c 94 5c 04 	jmp	0x8b8	; 0x8b8 <__fp_mintl>
 8b0:	0c 94 77 04 	jmp	0x8ee	; 0x8ee <__fp_mpack>
 8b4:	0c 94 c5 03 	jmp	0x78a	; 0x78a <__fp_szero>

000008b8 <__fp_mintl>:
 8b8:	88 23       	and	r24, r24
 8ba:	71 f4       	brne	.+28     	; 0x8d8 <__fp_mintl+0x20>
 8bc:	77 23       	and	r23, r23
 8be:	21 f0       	breq	.+8      	; 0x8c8 <__fp_mintl+0x10>
 8c0:	98 50       	subi	r25, 0x08	; 8
 8c2:	87 2b       	or	r24, r23
 8c4:	76 2f       	mov	r23, r22
 8c6:	07 c0       	rjmp	.+14     	; 0x8d6 <__fp_mintl+0x1e>
 8c8:	66 23       	and	r22, r22
 8ca:	11 f4       	brne	.+4      	; 0x8d0 <__fp_mintl+0x18>
 8cc:	99 27       	eor	r25, r25
 8ce:	0d c0       	rjmp	.+26     	; 0x8ea <__fp_mintl+0x32>
 8d0:	90 51       	subi	r25, 0x10	; 16
 8d2:	86 2b       	or	r24, r22
 8d4:	70 e0       	ldi	r23, 0x00	; 0
 8d6:	60 e0       	ldi	r22, 0x00	; 0
 8d8:	2a f0       	brmi	.+10     	; 0x8e4 <__fp_mintl+0x2c>
 8da:	9a 95       	dec	r25
 8dc:	66 0f       	add	r22, r22
 8de:	77 1f       	adc	r23, r23
 8e0:	88 1f       	adc	r24, r24
 8e2:	da f7       	brpl	.-10     	; 0x8da <__fp_mintl+0x22>
 8e4:	88 0f       	add	r24, r24
 8e6:	96 95       	lsr	r25
 8e8:	87 95       	ror	r24
 8ea:	97 f9       	bld	r25, 7
 8ec:	08 95       	ret

000008ee <__fp_mpack>:
 8ee:	9f 3f       	cpi	r25, 0xFF	; 255
 8f0:	31 f0       	breq	.+12     	; 0x8fe <__fp_mpack_finite+0xc>

000008f2 <__fp_mpack_finite>:
 8f2:	91 50       	subi	r25, 0x01	; 1
 8f4:	20 f4       	brcc	.+8      	; 0x8fe <__fp_mpack_finite+0xc>
 8f6:	87 95       	ror	r24
 8f8:	77 95       	ror	r23
 8fa:	67 95       	ror	r22
 8fc:	b7 95       	ror	r27
 8fe:	88 0f       	add	r24, r24
 900:	91 1d       	adc	r25, r1
 902:	96 95       	lsr	r25
 904:	87 95       	ror	r24
 906:	97 f9       	bld	r25, 7
 908:	08 95       	ret

0000090a <__udivmodsi4>:
 90a:	a1 e2       	ldi	r26, 0x21	; 33
 90c:	1a 2e       	mov	r1, r26
 90e:	aa 1b       	sub	r26, r26
 910:	bb 1b       	sub	r27, r27
 912:	fd 01       	movw	r30, r26
 914:	0d c0       	rjmp	.+26     	; 0x930 <__udivmodsi4_ep>

00000916 <__udivmodsi4_loop>:
 916:	aa 1f       	adc	r26, r26
 918:	bb 1f       	adc	r27, r27
 91a:	ee 1f       	adc	r30, r30
 91c:	ff 1f       	adc	r31, r31
 91e:	a2 17       	cp	r26, r18
 920:	b3 07       	cpc	r27, r19
 922:	e4 07       	cpc	r30, r20
 924:	f5 07       	cpc	r31, r21
 926:	20 f0       	brcs	.+8      	; 0x930 <__udivmodsi4_ep>
 928:	a2 1b       	sub	r26, r18
 92a:	b3 0b       	sbc	r27, r19
 92c:	e4 0b       	sbc	r30, r20
 92e:	f5 0b       	sbc	r31, r21

00000930 <__udivmodsi4_ep>:
 930:	66 1f       	adc	r22, r22
 932:	77 1f       	adc	r23, r23
 934:	88 1f       	adc	r24, r24
 936:	99 1f       	adc	r25, r25
 938:	1a 94       	dec	r1
 93a:	69 f7       	brne	.-38     	; 0x916 <__udivmodsi4_loop>
 93c:	60 95       	com	r22
 93e:	70 95       	com	r23
 940:	80 95       	com	r24
 942:	90 95       	com	r25
 944:	9b 01       	movw	r18, r22
 946:	ac 01       	movw	r20, r24
 948:	bd 01       	movw	r22, r26
 94a:	cf 01       	movw	r24, r30
 94c:	08 95       	ret

0000094e <sprintf>:
 94e:	ae e0       	ldi	r26, 0x0E	; 14
 950:	b0 e0       	ldi	r27, 0x00	; 0
 952:	ed ea       	ldi	r30, 0xAD	; 173
 954:	f4 e0       	ldi	r31, 0x04	; 4
 956:	0c 94 56 07 	jmp	0xeac	; 0xeac <__prologue_saves__+0x1c>
 95a:	0d 89       	ldd	r16, Y+21	; 0x15
 95c:	1e 89       	ldd	r17, Y+22	; 0x16
 95e:	86 e0       	ldi	r24, 0x06	; 6
 960:	8c 83       	std	Y+4, r24	; 0x04
 962:	1a 83       	std	Y+2, r17	; 0x02
 964:	09 83       	std	Y+1, r16	; 0x01
 966:	8f ef       	ldi	r24, 0xFF	; 255
 968:	9f e7       	ldi	r25, 0x7F	; 127
 96a:	9e 83       	std	Y+6, r25	; 0x06
 96c:	8d 83       	std	Y+5, r24	; 0x05
 96e:	ae 01       	movw	r20, r28
 970:	47 5e       	subi	r20, 0xE7	; 231
 972:	5f 4f       	sbci	r21, 0xFF	; 255
 974:	6f 89       	ldd	r22, Y+23	; 0x17
 976:	78 8d       	ldd	r23, Y+24	; 0x18
 978:	ce 01       	movw	r24, r28
 97a:	01 96       	adiw	r24, 0x01	; 1
 97c:	0e 94 ca 04 	call	0x994	; 0x994 <vfprintf>
 980:	2f 81       	ldd	r18, Y+7	; 0x07
 982:	38 85       	ldd	r19, Y+8	; 0x08
 984:	f8 01       	movw	r30, r16
 986:	e2 0f       	add	r30, r18
 988:	f3 1f       	adc	r31, r19
 98a:	10 82       	st	Z, r1
 98c:	2e 96       	adiw	r28, 0x0e	; 14
 98e:	e4 e0       	ldi	r30, 0x04	; 4
 990:	0c 94 72 07 	jmp	0xee4	; 0xee4 <__epilogue_restores__+0x1c>

00000994 <vfprintf>:
 994:	ac e0       	ldi	r26, 0x0C	; 12
 996:	b0 e0       	ldi	r27, 0x00	; 0
 998:	e0 ed       	ldi	r30, 0xD0	; 208
 99a:	f4 e0       	ldi	r31, 0x04	; 4
 99c:	0c 94 48 07 	jmp	0xe90	; 0xe90 <__prologue_saves__>
 9a0:	7c 01       	movw	r14, r24
 9a2:	6b 01       	movw	r12, r22
 9a4:	8a 01       	movw	r16, r20
 9a6:	fc 01       	movw	r30, r24
 9a8:	17 82       	std	Z+7, r1	; 0x07
 9aa:	16 82       	std	Z+6, r1	; 0x06
 9ac:	83 81       	ldd	r24, Z+3	; 0x03
 9ae:	81 ff       	sbrs	r24, 1
 9b0:	bd c1       	rjmp	.+890    	; 0xd2c <vfprintf+0x398>
 9b2:	ce 01       	movw	r24, r28
 9b4:	01 96       	adiw	r24, 0x01	; 1
 9b6:	4c 01       	movw	r8, r24
 9b8:	f7 01       	movw	r30, r14
 9ba:	93 81       	ldd	r25, Z+3	; 0x03
 9bc:	f6 01       	movw	r30, r12
 9be:	93 fd       	sbrc	r25, 3
 9c0:	85 91       	lpm	r24, Z+
 9c2:	93 ff       	sbrs	r25, 3
 9c4:	81 91       	ld	r24, Z+
 9c6:	6f 01       	movw	r12, r30
 9c8:	88 23       	and	r24, r24
 9ca:	09 f4       	brne	.+2      	; 0x9ce <vfprintf+0x3a>
 9cc:	ab c1       	rjmp	.+854    	; 0xd24 <vfprintf+0x390>
 9ce:	85 32       	cpi	r24, 0x25	; 37
 9d0:	39 f4       	brne	.+14     	; 0x9e0 <vfprintf+0x4c>
 9d2:	93 fd       	sbrc	r25, 3
 9d4:	85 91       	lpm	r24, Z+
 9d6:	93 ff       	sbrs	r25, 3
 9d8:	81 91       	ld	r24, Z+
 9da:	6f 01       	movw	r12, r30
 9dc:	85 32       	cpi	r24, 0x25	; 37
 9de:	29 f4       	brne	.+10     	; 0x9ea <vfprintf+0x56>
 9e0:	b7 01       	movw	r22, r14
 9e2:	90 e0       	ldi	r25, 0x00	; 0
 9e4:	0e 94 b2 06 	call	0xd64	; 0xd64 <fputc>
 9e8:	e7 cf       	rjmp	.-50     	; 0x9b8 <vfprintf+0x24>
 9ea:	51 2c       	mov	r5, r1
 9ec:	31 2c       	mov	r3, r1
 9ee:	20 e0       	ldi	r18, 0x00	; 0
 9f0:	20 32       	cpi	r18, 0x20	; 32
 9f2:	a0 f4       	brcc	.+40     	; 0xa1c <vfprintf+0x88>
 9f4:	8b 32       	cpi	r24, 0x2B	; 43
 9f6:	69 f0       	breq	.+26     	; 0xa12 <vfprintf+0x7e>
 9f8:	30 f4       	brcc	.+12     	; 0xa06 <vfprintf+0x72>
 9fa:	80 32       	cpi	r24, 0x20	; 32
 9fc:	59 f0       	breq	.+22     	; 0xa14 <vfprintf+0x80>
 9fe:	83 32       	cpi	r24, 0x23	; 35
 a00:	69 f4       	brne	.+26     	; 0xa1c <vfprintf+0x88>
 a02:	20 61       	ori	r18, 0x10	; 16
 a04:	2c c0       	rjmp	.+88     	; 0xa5e <vfprintf+0xca>
 a06:	8d 32       	cpi	r24, 0x2D	; 45
 a08:	39 f0       	breq	.+14     	; 0xa18 <vfprintf+0x84>
 a0a:	80 33       	cpi	r24, 0x30	; 48
 a0c:	39 f4       	brne	.+14     	; 0xa1c <vfprintf+0x88>
 a0e:	21 60       	ori	r18, 0x01	; 1
 a10:	26 c0       	rjmp	.+76     	; 0xa5e <vfprintf+0xca>
 a12:	22 60       	ori	r18, 0x02	; 2
 a14:	24 60       	ori	r18, 0x04	; 4
 a16:	23 c0       	rjmp	.+70     	; 0xa5e <vfprintf+0xca>
 a18:	28 60       	ori	r18, 0x08	; 8
 a1a:	21 c0       	rjmp	.+66     	; 0xa5e <vfprintf+0xca>
 a1c:	27 fd       	sbrc	r18, 7
 a1e:	27 c0       	rjmp	.+78     	; 0xa6e <vfprintf+0xda>
 a20:	30 ed       	ldi	r19, 0xD0	; 208
 a22:	38 0f       	add	r19, r24
 a24:	3a 30       	cpi	r19, 0x0A	; 10
 a26:	78 f4       	brcc	.+30     	; 0xa46 <vfprintf+0xb2>
 a28:	26 ff       	sbrs	r18, 6
 a2a:	06 c0       	rjmp	.+12     	; 0xa38 <vfprintf+0xa4>
 a2c:	fa e0       	ldi	r31, 0x0A	; 10
 a2e:	5f 9e       	mul	r5, r31
 a30:	30 0d       	add	r19, r0
 a32:	11 24       	eor	r1, r1
 a34:	53 2e       	mov	r5, r19
 a36:	13 c0       	rjmp	.+38     	; 0xa5e <vfprintf+0xca>
 a38:	8a e0       	ldi	r24, 0x0A	; 10
 a3a:	38 9e       	mul	r3, r24
 a3c:	30 0d       	add	r19, r0
 a3e:	11 24       	eor	r1, r1
 a40:	33 2e       	mov	r3, r19
 a42:	20 62       	ori	r18, 0x20	; 32
 a44:	0c c0       	rjmp	.+24     	; 0xa5e <vfprintf+0xca>
 a46:	8e 32       	cpi	r24, 0x2E	; 46
 a48:	21 f4       	brne	.+8      	; 0xa52 <vfprintf+0xbe>
 a4a:	26 fd       	sbrc	r18, 6
 a4c:	6b c1       	rjmp	.+726    	; 0xd24 <vfprintf+0x390>
 a4e:	20 64       	ori	r18, 0x40	; 64
 a50:	06 c0       	rjmp	.+12     	; 0xa5e <vfprintf+0xca>
 a52:	8c 36       	cpi	r24, 0x6C	; 108
 a54:	11 f4       	brne	.+4      	; 0xa5a <vfprintf+0xc6>
 a56:	20 68       	ori	r18, 0x80	; 128
 a58:	02 c0       	rjmp	.+4      	; 0xa5e <vfprintf+0xca>
 a5a:	88 36       	cpi	r24, 0x68	; 104
 a5c:	41 f4       	brne	.+16     	; 0xa6e <vfprintf+0xda>
 a5e:	f6 01       	movw	r30, r12
 a60:	93 fd       	sbrc	r25, 3
 a62:	85 91       	lpm	r24, Z+
 a64:	93 ff       	sbrs	r25, 3
 a66:	81 91       	ld	r24, Z+
 a68:	6f 01       	movw	r12, r30
 a6a:	81 11       	cpse	r24, r1
 a6c:	c1 cf       	rjmp	.-126    	; 0x9f0 <vfprintf+0x5c>
 a6e:	98 2f       	mov	r25, r24
 a70:	9f 7d       	andi	r25, 0xDF	; 223
 a72:	95 54       	subi	r25, 0x45	; 69
 a74:	93 30       	cpi	r25, 0x03	; 3
 a76:	28 f4       	brcc	.+10     	; 0xa82 <vfprintf+0xee>
 a78:	0c 5f       	subi	r16, 0xFC	; 252
 a7a:	1f 4f       	sbci	r17, 0xFF	; 255
 a7c:	ff e3       	ldi	r31, 0x3F	; 63
 a7e:	f9 83       	std	Y+1, r31	; 0x01
 a80:	0d c0       	rjmp	.+26     	; 0xa9c <vfprintf+0x108>
 a82:	83 36       	cpi	r24, 0x63	; 99
 a84:	31 f0       	breq	.+12     	; 0xa92 <vfprintf+0xfe>
 a86:	83 37       	cpi	r24, 0x73	; 115
 a88:	71 f0       	breq	.+28     	; 0xaa6 <vfprintf+0x112>
 a8a:	83 35       	cpi	r24, 0x53	; 83
 a8c:	09 f0       	breq	.+2      	; 0xa90 <vfprintf+0xfc>
 a8e:	5b c0       	rjmp	.+182    	; 0xb46 <vfprintf+0x1b2>
 a90:	22 c0       	rjmp	.+68     	; 0xad6 <vfprintf+0x142>
 a92:	f8 01       	movw	r30, r16
 a94:	80 81       	ld	r24, Z
 a96:	89 83       	std	Y+1, r24	; 0x01
 a98:	0e 5f       	subi	r16, 0xFE	; 254
 a9a:	1f 4f       	sbci	r17, 0xFF	; 255
 a9c:	44 24       	eor	r4, r4
 a9e:	43 94       	inc	r4
 aa0:	51 2c       	mov	r5, r1
 aa2:	54 01       	movw	r10, r8
 aa4:	15 c0       	rjmp	.+42     	; 0xad0 <vfprintf+0x13c>
 aa6:	38 01       	movw	r6, r16
 aa8:	f2 e0       	ldi	r31, 0x02	; 2
 aaa:	6f 0e       	add	r6, r31
 aac:	71 1c       	adc	r7, r1
 aae:	f8 01       	movw	r30, r16
 ab0:	a0 80       	ld	r10, Z
 ab2:	b1 80       	ldd	r11, Z+1	; 0x01
 ab4:	26 ff       	sbrs	r18, 6
 ab6:	03 c0       	rjmp	.+6      	; 0xabe <vfprintf+0x12a>
 ab8:	65 2d       	mov	r22, r5
 aba:	70 e0       	ldi	r23, 0x00	; 0
 abc:	02 c0       	rjmp	.+4      	; 0xac2 <vfprintf+0x12e>
 abe:	6f ef       	ldi	r22, 0xFF	; 255
 ac0:	7f ef       	ldi	r23, 0xFF	; 255
 ac2:	c5 01       	movw	r24, r10
 ac4:	2c 87       	std	Y+12, r18	; 0x0c
 ac6:	0e 94 a7 06 	call	0xd4e	; 0xd4e <strnlen>
 aca:	2c 01       	movw	r4, r24
 acc:	83 01       	movw	r16, r6
 ace:	2c 85       	ldd	r18, Y+12	; 0x0c
 ad0:	2f 77       	andi	r18, 0x7F	; 127
 ad2:	22 2e       	mov	r2, r18
 ad4:	17 c0       	rjmp	.+46     	; 0xb04 <vfprintf+0x170>
 ad6:	38 01       	movw	r6, r16
 ad8:	f2 e0       	ldi	r31, 0x02	; 2
 ada:	6f 0e       	add	r6, r31
 adc:	71 1c       	adc	r7, r1
 ade:	f8 01       	movw	r30, r16
 ae0:	a0 80       	ld	r10, Z
 ae2:	b1 80       	ldd	r11, Z+1	; 0x01
 ae4:	26 ff       	sbrs	r18, 6
 ae6:	03 c0       	rjmp	.+6      	; 0xaee <vfprintf+0x15a>
 ae8:	65 2d       	mov	r22, r5
 aea:	70 e0       	ldi	r23, 0x00	; 0
 aec:	02 c0       	rjmp	.+4      	; 0xaf2 <vfprintf+0x15e>
 aee:	6f ef       	ldi	r22, 0xFF	; 255
 af0:	7f ef       	ldi	r23, 0xFF	; 255
 af2:	c5 01       	movw	r24, r10
 af4:	2c 87       	std	Y+12, r18	; 0x0c
 af6:	0e 94 9c 06 	call	0xd38	; 0xd38 <strnlen_P>
 afa:	2c 01       	movw	r4, r24
 afc:	2c 85       	ldd	r18, Y+12	; 0x0c
 afe:	20 68       	ori	r18, 0x80	; 128
 b00:	22 2e       	mov	r2, r18
 b02:	83 01       	movw	r16, r6
 b04:	23 fc       	sbrc	r2, 3
 b06:	1b c0       	rjmp	.+54     	; 0xb3e <vfprintf+0x1aa>
 b08:	83 2d       	mov	r24, r3
 b0a:	90 e0       	ldi	r25, 0x00	; 0
 b0c:	48 16       	cp	r4, r24
 b0e:	59 06       	cpc	r5, r25
 b10:	b0 f4       	brcc	.+44     	; 0xb3e <vfprintf+0x1aa>
 b12:	b7 01       	movw	r22, r14
 b14:	80 e2       	ldi	r24, 0x20	; 32
 b16:	90 e0       	ldi	r25, 0x00	; 0
 b18:	0e 94 b2 06 	call	0xd64	; 0xd64 <fputc>
 b1c:	3a 94       	dec	r3
 b1e:	f4 cf       	rjmp	.-24     	; 0xb08 <vfprintf+0x174>
 b20:	f5 01       	movw	r30, r10
 b22:	27 fc       	sbrc	r2, 7
 b24:	85 91       	lpm	r24, Z+
 b26:	27 fe       	sbrs	r2, 7
 b28:	81 91       	ld	r24, Z+
 b2a:	5f 01       	movw	r10, r30
 b2c:	b7 01       	movw	r22, r14
 b2e:	90 e0       	ldi	r25, 0x00	; 0
 b30:	0e 94 b2 06 	call	0xd64	; 0xd64 <fputc>
 b34:	31 10       	cpse	r3, r1
 b36:	3a 94       	dec	r3
 b38:	f1 e0       	ldi	r31, 0x01	; 1
 b3a:	4f 1a       	sub	r4, r31
 b3c:	51 08       	sbc	r5, r1
 b3e:	41 14       	cp	r4, r1
 b40:	51 04       	cpc	r5, r1
 b42:	71 f7       	brne	.-36     	; 0xb20 <vfprintf+0x18c>
 b44:	e5 c0       	rjmp	.+458    	; 0xd10 <vfprintf+0x37c>
 b46:	84 36       	cpi	r24, 0x64	; 100
 b48:	11 f0       	breq	.+4      	; 0xb4e <vfprintf+0x1ba>
 b4a:	89 36       	cpi	r24, 0x69	; 105
 b4c:	39 f5       	brne	.+78     	; 0xb9c <vfprintf+0x208>
 b4e:	f8 01       	movw	r30, r16
 b50:	27 ff       	sbrs	r18, 7
 b52:	07 c0       	rjmp	.+14     	; 0xb62 <vfprintf+0x1ce>
 b54:	60 81       	ld	r22, Z
 b56:	71 81       	ldd	r23, Z+1	; 0x01
 b58:	82 81       	ldd	r24, Z+2	; 0x02
 b5a:	93 81       	ldd	r25, Z+3	; 0x03
 b5c:	0c 5f       	subi	r16, 0xFC	; 252
 b5e:	1f 4f       	sbci	r17, 0xFF	; 255
 b60:	08 c0       	rjmp	.+16     	; 0xb72 <vfprintf+0x1de>
 b62:	60 81       	ld	r22, Z
 b64:	71 81       	ldd	r23, Z+1	; 0x01
 b66:	07 2e       	mov	r0, r23
 b68:	00 0c       	add	r0, r0
 b6a:	88 0b       	sbc	r24, r24
 b6c:	99 0b       	sbc	r25, r25
 b6e:	0e 5f       	subi	r16, 0xFE	; 254
 b70:	1f 4f       	sbci	r17, 0xFF	; 255
 b72:	2f 76       	andi	r18, 0x6F	; 111
 b74:	72 2e       	mov	r7, r18
 b76:	97 ff       	sbrs	r25, 7
 b78:	09 c0       	rjmp	.+18     	; 0xb8c <vfprintf+0x1f8>
 b7a:	90 95       	com	r25
 b7c:	80 95       	com	r24
 b7e:	70 95       	com	r23
 b80:	61 95       	neg	r22
 b82:	7f 4f       	sbci	r23, 0xFF	; 255
 b84:	8f 4f       	sbci	r24, 0xFF	; 255
 b86:	9f 4f       	sbci	r25, 0xFF	; 255
 b88:	20 68       	ori	r18, 0x80	; 128
 b8a:	72 2e       	mov	r7, r18
 b8c:	2a e0       	ldi	r18, 0x0A	; 10
 b8e:	30 e0       	ldi	r19, 0x00	; 0
 b90:	a4 01       	movw	r20, r8
 b92:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <__ultoa_invert>
 b96:	a8 2e       	mov	r10, r24
 b98:	a8 18       	sub	r10, r8
 b9a:	44 c0       	rjmp	.+136    	; 0xc24 <vfprintf+0x290>
 b9c:	85 37       	cpi	r24, 0x75	; 117
 b9e:	29 f4       	brne	.+10     	; 0xbaa <vfprintf+0x216>
 ba0:	2f 7e       	andi	r18, 0xEF	; 239
 ba2:	b2 2e       	mov	r11, r18
 ba4:	2a e0       	ldi	r18, 0x0A	; 10
 ba6:	30 e0       	ldi	r19, 0x00	; 0
 ba8:	25 c0       	rjmp	.+74     	; 0xbf4 <vfprintf+0x260>
 baa:	f2 2f       	mov	r31, r18
 bac:	f9 7f       	andi	r31, 0xF9	; 249
 bae:	bf 2e       	mov	r11, r31
 bb0:	8f 36       	cpi	r24, 0x6F	; 111
 bb2:	c1 f0       	breq	.+48     	; 0xbe4 <vfprintf+0x250>
 bb4:	18 f4       	brcc	.+6      	; 0xbbc <vfprintf+0x228>
 bb6:	88 35       	cpi	r24, 0x58	; 88
 bb8:	79 f0       	breq	.+30     	; 0xbd8 <vfprintf+0x244>
 bba:	b4 c0       	rjmp	.+360    	; 0xd24 <vfprintf+0x390>
 bbc:	80 37       	cpi	r24, 0x70	; 112
 bbe:	19 f0       	breq	.+6      	; 0xbc6 <vfprintf+0x232>
 bc0:	88 37       	cpi	r24, 0x78	; 120
 bc2:	21 f0       	breq	.+8      	; 0xbcc <vfprintf+0x238>
 bc4:	af c0       	rjmp	.+350    	; 0xd24 <vfprintf+0x390>
 bc6:	2f 2f       	mov	r18, r31
 bc8:	20 61       	ori	r18, 0x10	; 16
 bca:	b2 2e       	mov	r11, r18
 bcc:	b4 fe       	sbrs	r11, 4
 bce:	0d c0       	rjmp	.+26     	; 0xbea <vfprintf+0x256>
 bd0:	8b 2d       	mov	r24, r11
 bd2:	84 60       	ori	r24, 0x04	; 4
 bd4:	b8 2e       	mov	r11, r24
 bd6:	09 c0       	rjmp	.+18     	; 0xbea <vfprintf+0x256>
 bd8:	24 ff       	sbrs	r18, 4
 bda:	0a c0       	rjmp	.+20     	; 0xbf0 <vfprintf+0x25c>
 bdc:	9f 2f       	mov	r25, r31
 bde:	96 60       	ori	r25, 0x06	; 6
 be0:	b9 2e       	mov	r11, r25
 be2:	06 c0       	rjmp	.+12     	; 0xbf0 <vfprintf+0x25c>
 be4:	28 e0       	ldi	r18, 0x08	; 8
 be6:	30 e0       	ldi	r19, 0x00	; 0
 be8:	05 c0       	rjmp	.+10     	; 0xbf4 <vfprintf+0x260>
 bea:	20 e1       	ldi	r18, 0x10	; 16
 bec:	30 e0       	ldi	r19, 0x00	; 0
 bee:	02 c0       	rjmp	.+4      	; 0xbf4 <vfprintf+0x260>
 bf0:	20 e1       	ldi	r18, 0x10	; 16
 bf2:	32 e0       	ldi	r19, 0x02	; 2
 bf4:	f8 01       	movw	r30, r16
 bf6:	b7 fe       	sbrs	r11, 7
 bf8:	07 c0       	rjmp	.+14     	; 0xc08 <vfprintf+0x274>
 bfa:	60 81       	ld	r22, Z
 bfc:	71 81       	ldd	r23, Z+1	; 0x01
 bfe:	82 81       	ldd	r24, Z+2	; 0x02
 c00:	93 81       	ldd	r25, Z+3	; 0x03
 c02:	0c 5f       	subi	r16, 0xFC	; 252
 c04:	1f 4f       	sbci	r17, 0xFF	; 255
 c06:	06 c0       	rjmp	.+12     	; 0xc14 <vfprintf+0x280>
 c08:	60 81       	ld	r22, Z
 c0a:	71 81       	ldd	r23, Z+1	; 0x01
 c0c:	80 e0       	ldi	r24, 0x00	; 0
 c0e:	90 e0       	ldi	r25, 0x00	; 0
 c10:	0e 5f       	subi	r16, 0xFE	; 254
 c12:	1f 4f       	sbci	r17, 0xFF	; 255
 c14:	a4 01       	movw	r20, r8
 c16:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <__ultoa_invert>
 c1a:	a8 2e       	mov	r10, r24
 c1c:	a8 18       	sub	r10, r8
 c1e:	fb 2d       	mov	r31, r11
 c20:	ff 77       	andi	r31, 0x7F	; 127
 c22:	7f 2e       	mov	r7, r31
 c24:	76 fe       	sbrs	r7, 6
 c26:	0b c0       	rjmp	.+22     	; 0xc3e <vfprintf+0x2aa>
 c28:	37 2d       	mov	r19, r7
 c2a:	3e 7f       	andi	r19, 0xFE	; 254
 c2c:	a5 14       	cp	r10, r5
 c2e:	50 f4       	brcc	.+20     	; 0xc44 <vfprintf+0x2b0>
 c30:	74 fe       	sbrs	r7, 4
 c32:	0a c0       	rjmp	.+20     	; 0xc48 <vfprintf+0x2b4>
 c34:	72 fc       	sbrc	r7, 2
 c36:	08 c0       	rjmp	.+16     	; 0xc48 <vfprintf+0x2b4>
 c38:	37 2d       	mov	r19, r7
 c3a:	3e 7e       	andi	r19, 0xEE	; 238
 c3c:	05 c0       	rjmp	.+10     	; 0xc48 <vfprintf+0x2b4>
 c3e:	ba 2c       	mov	r11, r10
 c40:	37 2d       	mov	r19, r7
 c42:	03 c0       	rjmp	.+6      	; 0xc4a <vfprintf+0x2b6>
 c44:	ba 2c       	mov	r11, r10
 c46:	01 c0       	rjmp	.+2      	; 0xc4a <vfprintf+0x2b6>
 c48:	b5 2c       	mov	r11, r5
 c4a:	34 ff       	sbrs	r19, 4
 c4c:	0d c0       	rjmp	.+26     	; 0xc68 <vfprintf+0x2d4>
 c4e:	fe 01       	movw	r30, r28
 c50:	ea 0d       	add	r30, r10
 c52:	f1 1d       	adc	r31, r1
 c54:	80 81       	ld	r24, Z
 c56:	80 33       	cpi	r24, 0x30	; 48
 c58:	11 f4       	brne	.+4      	; 0xc5e <vfprintf+0x2ca>
 c5a:	39 7e       	andi	r19, 0xE9	; 233
 c5c:	09 c0       	rjmp	.+18     	; 0xc70 <vfprintf+0x2dc>
 c5e:	32 ff       	sbrs	r19, 2
 c60:	06 c0       	rjmp	.+12     	; 0xc6e <vfprintf+0x2da>
 c62:	b3 94       	inc	r11
 c64:	b3 94       	inc	r11
 c66:	04 c0       	rjmp	.+8      	; 0xc70 <vfprintf+0x2dc>
 c68:	83 2f       	mov	r24, r19
 c6a:	86 78       	andi	r24, 0x86	; 134
 c6c:	09 f0       	breq	.+2      	; 0xc70 <vfprintf+0x2dc>
 c6e:	b3 94       	inc	r11
 c70:	33 fd       	sbrc	r19, 3
 c72:	13 c0       	rjmp	.+38     	; 0xc9a <vfprintf+0x306>
 c74:	30 ff       	sbrs	r19, 0
 c76:	06 c0       	rjmp	.+12     	; 0xc84 <vfprintf+0x2f0>
 c78:	5a 2c       	mov	r5, r10
 c7a:	b3 14       	cp	r11, r3
 c7c:	18 f4       	brcc	.+6      	; 0xc84 <vfprintf+0x2f0>
 c7e:	53 0c       	add	r5, r3
 c80:	5b 18       	sub	r5, r11
 c82:	b3 2c       	mov	r11, r3
 c84:	b3 14       	cp	r11, r3
 c86:	68 f4       	brcc	.+26     	; 0xca2 <vfprintf+0x30e>
 c88:	b7 01       	movw	r22, r14
 c8a:	80 e2       	ldi	r24, 0x20	; 32
 c8c:	90 e0       	ldi	r25, 0x00	; 0
 c8e:	3c 87       	std	Y+12, r19	; 0x0c
 c90:	0e 94 b2 06 	call	0xd64	; 0xd64 <fputc>
 c94:	b3 94       	inc	r11
 c96:	3c 85       	ldd	r19, Y+12	; 0x0c
 c98:	f5 cf       	rjmp	.-22     	; 0xc84 <vfprintf+0x2f0>
 c9a:	b3 14       	cp	r11, r3
 c9c:	10 f4       	brcc	.+4      	; 0xca2 <vfprintf+0x30e>
 c9e:	3b 18       	sub	r3, r11
 ca0:	01 c0       	rjmp	.+2      	; 0xca4 <vfprintf+0x310>
 ca2:	31 2c       	mov	r3, r1
 ca4:	34 ff       	sbrs	r19, 4
 ca6:	12 c0       	rjmp	.+36     	; 0xccc <vfprintf+0x338>
 ca8:	b7 01       	movw	r22, r14
 caa:	80 e3       	ldi	r24, 0x30	; 48
 cac:	90 e0       	ldi	r25, 0x00	; 0
 cae:	3c 87       	std	Y+12, r19	; 0x0c
 cb0:	0e 94 b2 06 	call	0xd64	; 0xd64 <fputc>
 cb4:	3c 85       	ldd	r19, Y+12	; 0x0c
 cb6:	32 ff       	sbrs	r19, 2
 cb8:	17 c0       	rjmp	.+46     	; 0xce8 <vfprintf+0x354>
 cba:	31 fd       	sbrc	r19, 1
 cbc:	03 c0       	rjmp	.+6      	; 0xcc4 <vfprintf+0x330>
 cbe:	88 e7       	ldi	r24, 0x78	; 120
 cc0:	90 e0       	ldi	r25, 0x00	; 0
 cc2:	02 c0       	rjmp	.+4      	; 0xcc8 <vfprintf+0x334>
 cc4:	88 e5       	ldi	r24, 0x58	; 88
 cc6:	90 e0       	ldi	r25, 0x00	; 0
 cc8:	b7 01       	movw	r22, r14
 cca:	0c c0       	rjmp	.+24     	; 0xce4 <vfprintf+0x350>
 ccc:	83 2f       	mov	r24, r19
 cce:	86 78       	andi	r24, 0x86	; 134
 cd0:	59 f0       	breq	.+22     	; 0xce8 <vfprintf+0x354>
 cd2:	31 ff       	sbrs	r19, 1
 cd4:	02 c0       	rjmp	.+4      	; 0xcda <vfprintf+0x346>
 cd6:	8b e2       	ldi	r24, 0x2B	; 43
 cd8:	01 c0       	rjmp	.+2      	; 0xcdc <vfprintf+0x348>
 cda:	80 e2       	ldi	r24, 0x20	; 32
 cdc:	37 fd       	sbrc	r19, 7
 cde:	8d e2       	ldi	r24, 0x2D	; 45
 ce0:	b7 01       	movw	r22, r14
 ce2:	90 e0       	ldi	r25, 0x00	; 0
 ce4:	0e 94 b2 06 	call	0xd64	; 0xd64 <fputc>
 ce8:	a5 14       	cp	r10, r5
 cea:	38 f4       	brcc	.+14     	; 0xcfa <vfprintf+0x366>
 cec:	b7 01       	movw	r22, r14
 cee:	80 e3       	ldi	r24, 0x30	; 48
 cf0:	90 e0       	ldi	r25, 0x00	; 0
 cf2:	0e 94 b2 06 	call	0xd64	; 0xd64 <fputc>
 cf6:	5a 94       	dec	r5
 cf8:	f7 cf       	rjmp	.-18     	; 0xce8 <vfprintf+0x354>
 cfa:	aa 94       	dec	r10
 cfc:	f4 01       	movw	r30, r8
 cfe:	ea 0d       	add	r30, r10
 d00:	f1 1d       	adc	r31, r1
 d02:	80 81       	ld	r24, Z
 d04:	b7 01       	movw	r22, r14
 d06:	90 e0       	ldi	r25, 0x00	; 0
 d08:	0e 94 b2 06 	call	0xd64	; 0xd64 <fputc>
 d0c:	a1 10       	cpse	r10, r1
 d0e:	f5 cf       	rjmp	.-22     	; 0xcfa <vfprintf+0x366>
 d10:	33 20       	and	r3, r3
 d12:	09 f4       	brne	.+2      	; 0xd16 <vfprintf+0x382>
 d14:	51 ce       	rjmp	.-862    	; 0x9b8 <vfprintf+0x24>
 d16:	b7 01       	movw	r22, r14
 d18:	80 e2       	ldi	r24, 0x20	; 32
 d1a:	90 e0       	ldi	r25, 0x00	; 0
 d1c:	0e 94 b2 06 	call	0xd64	; 0xd64 <fputc>
 d20:	3a 94       	dec	r3
 d22:	f6 cf       	rjmp	.-20     	; 0xd10 <vfprintf+0x37c>
 d24:	f7 01       	movw	r30, r14
 d26:	86 81       	ldd	r24, Z+6	; 0x06
 d28:	97 81       	ldd	r25, Z+7	; 0x07
 d2a:	02 c0       	rjmp	.+4      	; 0xd30 <vfprintf+0x39c>
 d2c:	8f ef       	ldi	r24, 0xFF	; 255
 d2e:	9f ef       	ldi	r25, 0xFF	; 255
 d30:	2c 96       	adiw	r28, 0x0c	; 12
 d32:	e2 e1       	ldi	r30, 0x12	; 18
 d34:	0c 94 64 07 	jmp	0xec8	; 0xec8 <__epilogue_restores__>

00000d38 <strnlen_P>:
 d38:	fc 01       	movw	r30, r24
 d3a:	05 90       	lpm	r0, Z+
 d3c:	61 50       	subi	r22, 0x01	; 1
 d3e:	70 40       	sbci	r23, 0x00	; 0
 d40:	01 10       	cpse	r0, r1
 d42:	d8 f7       	brcc	.-10     	; 0xd3a <strnlen_P+0x2>
 d44:	80 95       	com	r24
 d46:	90 95       	com	r25
 d48:	8e 0f       	add	r24, r30
 d4a:	9f 1f       	adc	r25, r31
 d4c:	08 95       	ret

00000d4e <strnlen>:
 d4e:	fc 01       	movw	r30, r24
 d50:	61 50       	subi	r22, 0x01	; 1
 d52:	70 40       	sbci	r23, 0x00	; 0
 d54:	01 90       	ld	r0, Z+
 d56:	01 10       	cpse	r0, r1
 d58:	d8 f7       	brcc	.-10     	; 0xd50 <strnlen+0x2>
 d5a:	80 95       	com	r24
 d5c:	90 95       	com	r25
 d5e:	8e 0f       	add	r24, r30
 d60:	9f 1f       	adc	r25, r31
 d62:	08 95       	ret

00000d64 <fputc>:
 d64:	0f 93       	push	r16
 d66:	1f 93       	push	r17
 d68:	cf 93       	push	r28
 d6a:	df 93       	push	r29
 d6c:	fb 01       	movw	r30, r22
 d6e:	23 81       	ldd	r18, Z+3	; 0x03
 d70:	21 fd       	sbrc	r18, 1
 d72:	03 c0       	rjmp	.+6      	; 0xd7a <fputc+0x16>
 d74:	8f ef       	ldi	r24, 0xFF	; 255
 d76:	9f ef       	ldi	r25, 0xFF	; 255
 d78:	28 c0       	rjmp	.+80     	; 0xdca <fputc+0x66>
 d7a:	22 ff       	sbrs	r18, 2
 d7c:	16 c0       	rjmp	.+44     	; 0xdaa <fputc+0x46>
 d7e:	46 81       	ldd	r20, Z+6	; 0x06
 d80:	57 81       	ldd	r21, Z+7	; 0x07
 d82:	24 81       	ldd	r18, Z+4	; 0x04
 d84:	35 81       	ldd	r19, Z+5	; 0x05
 d86:	42 17       	cp	r20, r18
 d88:	53 07       	cpc	r21, r19
 d8a:	44 f4       	brge	.+16     	; 0xd9c <fputc+0x38>
 d8c:	a0 81       	ld	r26, Z
 d8e:	b1 81       	ldd	r27, Z+1	; 0x01
 d90:	9d 01       	movw	r18, r26
 d92:	2f 5f       	subi	r18, 0xFF	; 255
 d94:	3f 4f       	sbci	r19, 0xFF	; 255
 d96:	31 83       	std	Z+1, r19	; 0x01
 d98:	20 83       	st	Z, r18
 d9a:	8c 93       	st	X, r24
 d9c:	26 81       	ldd	r18, Z+6	; 0x06
 d9e:	37 81       	ldd	r19, Z+7	; 0x07
 da0:	2f 5f       	subi	r18, 0xFF	; 255
 da2:	3f 4f       	sbci	r19, 0xFF	; 255
 da4:	37 83       	std	Z+7, r19	; 0x07
 da6:	26 83       	std	Z+6, r18	; 0x06
 da8:	10 c0       	rjmp	.+32     	; 0xdca <fputc+0x66>
 daa:	eb 01       	movw	r28, r22
 dac:	09 2f       	mov	r16, r25
 dae:	18 2f       	mov	r17, r24
 db0:	00 84       	ldd	r0, Z+8	; 0x08
 db2:	f1 85       	ldd	r31, Z+9	; 0x09
 db4:	e0 2d       	mov	r30, r0
 db6:	09 95       	icall
 db8:	89 2b       	or	r24, r25
 dba:	e1 f6       	brne	.-72     	; 0xd74 <fputc+0x10>
 dbc:	8e 81       	ldd	r24, Y+6	; 0x06
 dbe:	9f 81       	ldd	r25, Y+7	; 0x07
 dc0:	01 96       	adiw	r24, 0x01	; 1
 dc2:	9f 83       	std	Y+7, r25	; 0x07
 dc4:	8e 83       	std	Y+6, r24	; 0x06
 dc6:	81 2f       	mov	r24, r17
 dc8:	90 2f       	mov	r25, r16
 dca:	df 91       	pop	r29
 dcc:	cf 91       	pop	r28
 dce:	1f 91       	pop	r17
 dd0:	0f 91       	pop	r16
 dd2:	08 95       	ret

00000dd4 <__ultoa_invert>:
 dd4:	fa 01       	movw	r30, r20
 dd6:	aa 27       	eor	r26, r26
 dd8:	28 30       	cpi	r18, 0x08	; 8
 dda:	51 f1       	breq	.+84     	; 0xe30 <__ultoa_invert+0x5c>
 ddc:	20 31       	cpi	r18, 0x10	; 16
 dde:	81 f1       	breq	.+96     	; 0xe40 <__ultoa_invert+0x6c>
 de0:	e8 94       	clt
 de2:	6f 93       	push	r22
 de4:	6e 7f       	andi	r22, 0xFE	; 254
 de6:	6e 5f       	subi	r22, 0xFE	; 254
 de8:	7f 4f       	sbci	r23, 0xFF	; 255
 dea:	8f 4f       	sbci	r24, 0xFF	; 255
 dec:	9f 4f       	sbci	r25, 0xFF	; 255
 dee:	af 4f       	sbci	r26, 0xFF	; 255
 df0:	b1 e0       	ldi	r27, 0x01	; 1
 df2:	3e d0       	rcall	.+124    	; 0xe70 <__ultoa_invert+0x9c>
 df4:	b4 e0       	ldi	r27, 0x04	; 4
 df6:	3c d0       	rcall	.+120    	; 0xe70 <__ultoa_invert+0x9c>
 df8:	67 0f       	add	r22, r23
 dfa:	78 1f       	adc	r23, r24
 dfc:	89 1f       	adc	r24, r25
 dfe:	9a 1f       	adc	r25, r26
 e00:	a1 1d       	adc	r26, r1
 e02:	68 0f       	add	r22, r24
 e04:	79 1f       	adc	r23, r25
 e06:	8a 1f       	adc	r24, r26
 e08:	91 1d       	adc	r25, r1
 e0a:	a1 1d       	adc	r26, r1
 e0c:	6a 0f       	add	r22, r26
 e0e:	71 1d       	adc	r23, r1
 e10:	81 1d       	adc	r24, r1
 e12:	91 1d       	adc	r25, r1
 e14:	a1 1d       	adc	r26, r1
 e16:	20 d0       	rcall	.+64     	; 0xe58 <__ultoa_invert+0x84>
 e18:	09 f4       	brne	.+2      	; 0xe1c <__ultoa_invert+0x48>
 e1a:	68 94       	set
 e1c:	3f 91       	pop	r19
 e1e:	2a e0       	ldi	r18, 0x0A	; 10
 e20:	26 9f       	mul	r18, r22
 e22:	11 24       	eor	r1, r1
 e24:	30 19       	sub	r19, r0
 e26:	30 5d       	subi	r19, 0xD0	; 208
 e28:	31 93       	st	Z+, r19
 e2a:	de f6       	brtc	.-74     	; 0xde2 <__ultoa_invert+0xe>
 e2c:	cf 01       	movw	r24, r30
 e2e:	08 95       	ret
 e30:	46 2f       	mov	r20, r22
 e32:	47 70       	andi	r20, 0x07	; 7
 e34:	40 5d       	subi	r20, 0xD0	; 208
 e36:	41 93       	st	Z+, r20
 e38:	b3 e0       	ldi	r27, 0x03	; 3
 e3a:	0f d0       	rcall	.+30     	; 0xe5a <__ultoa_invert+0x86>
 e3c:	c9 f7       	brne	.-14     	; 0xe30 <__ultoa_invert+0x5c>
 e3e:	f6 cf       	rjmp	.-20     	; 0xe2c <__ultoa_invert+0x58>
 e40:	46 2f       	mov	r20, r22
 e42:	4f 70       	andi	r20, 0x0F	; 15
 e44:	40 5d       	subi	r20, 0xD0	; 208
 e46:	4a 33       	cpi	r20, 0x3A	; 58
 e48:	18 f0       	brcs	.+6      	; 0xe50 <__ultoa_invert+0x7c>
 e4a:	49 5d       	subi	r20, 0xD9	; 217
 e4c:	31 fd       	sbrc	r19, 1
 e4e:	40 52       	subi	r20, 0x20	; 32
 e50:	41 93       	st	Z+, r20
 e52:	02 d0       	rcall	.+4      	; 0xe58 <__ultoa_invert+0x84>
 e54:	a9 f7       	brne	.-22     	; 0xe40 <__ultoa_invert+0x6c>
 e56:	ea cf       	rjmp	.-44     	; 0xe2c <__ultoa_invert+0x58>
 e58:	b4 e0       	ldi	r27, 0x04	; 4
 e5a:	a6 95       	lsr	r26
 e5c:	97 95       	ror	r25
 e5e:	87 95       	ror	r24
 e60:	77 95       	ror	r23
 e62:	67 95       	ror	r22
 e64:	ba 95       	dec	r27
 e66:	c9 f7       	brne	.-14     	; 0xe5a <__ultoa_invert+0x86>
 e68:	00 97       	sbiw	r24, 0x00	; 0
 e6a:	61 05       	cpc	r22, r1
 e6c:	71 05       	cpc	r23, r1
 e6e:	08 95       	ret
 e70:	9b 01       	movw	r18, r22
 e72:	ac 01       	movw	r20, r24
 e74:	0a 2e       	mov	r0, r26
 e76:	06 94       	lsr	r0
 e78:	57 95       	ror	r21
 e7a:	47 95       	ror	r20
 e7c:	37 95       	ror	r19
 e7e:	27 95       	ror	r18
 e80:	ba 95       	dec	r27
 e82:	c9 f7       	brne	.-14     	; 0xe76 <__ultoa_invert+0xa2>
 e84:	62 0f       	add	r22, r18
 e86:	73 1f       	adc	r23, r19
 e88:	84 1f       	adc	r24, r20
 e8a:	95 1f       	adc	r25, r21
 e8c:	a0 1d       	adc	r26, r0
 e8e:	08 95       	ret

00000e90 <__prologue_saves__>:
 e90:	2f 92       	push	r2
 e92:	3f 92       	push	r3
 e94:	4f 92       	push	r4
 e96:	5f 92       	push	r5
 e98:	6f 92       	push	r6
 e9a:	7f 92       	push	r7
 e9c:	8f 92       	push	r8
 e9e:	9f 92       	push	r9
 ea0:	af 92       	push	r10
 ea2:	bf 92       	push	r11
 ea4:	cf 92       	push	r12
 ea6:	df 92       	push	r13
 ea8:	ef 92       	push	r14
 eaa:	ff 92       	push	r15
 eac:	0f 93       	push	r16
 eae:	1f 93       	push	r17
 eb0:	cf 93       	push	r28
 eb2:	df 93       	push	r29
 eb4:	cd b7       	in	r28, 0x3d	; 61
 eb6:	de b7       	in	r29, 0x3e	; 62
 eb8:	ca 1b       	sub	r28, r26
 eba:	db 0b       	sbc	r29, r27
 ebc:	0f b6       	in	r0, 0x3f	; 63
 ebe:	f8 94       	cli
 ec0:	de bf       	out	0x3e, r29	; 62
 ec2:	0f be       	out	0x3f, r0	; 63
 ec4:	cd bf       	out	0x3d, r28	; 61
 ec6:	09 94       	ijmp

00000ec8 <__epilogue_restores__>:
 ec8:	2a 88       	ldd	r2, Y+18	; 0x12
 eca:	39 88       	ldd	r3, Y+17	; 0x11
 ecc:	48 88       	ldd	r4, Y+16	; 0x10
 ece:	5f 84       	ldd	r5, Y+15	; 0x0f
 ed0:	6e 84       	ldd	r6, Y+14	; 0x0e
 ed2:	7d 84       	ldd	r7, Y+13	; 0x0d
 ed4:	8c 84       	ldd	r8, Y+12	; 0x0c
 ed6:	9b 84       	ldd	r9, Y+11	; 0x0b
 ed8:	aa 84       	ldd	r10, Y+10	; 0x0a
 eda:	b9 84       	ldd	r11, Y+9	; 0x09
 edc:	c8 84       	ldd	r12, Y+8	; 0x08
 ede:	df 80       	ldd	r13, Y+7	; 0x07
 ee0:	ee 80       	ldd	r14, Y+6	; 0x06
 ee2:	fd 80       	ldd	r15, Y+5	; 0x05
 ee4:	0c 81       	ldd	r16, Y+4	; 0x04
 ee6:	1b 81       	ldd	r17, Y+3	; 0x03
 ee8:	aa 81       	ldd	r26, Y+2	; 0x02
 eea:	b9 81       	ldd	r27, Y+1	; 0x01
 eec:	ce 0f       	add	r28, r30
 eee:	d1 1d       	adc	r29, r1
 ef0:	0f b6       	in	r0, 0x3f	; 63
 ef2:	f8 94       	cli
 ef4:	de bf       	out	0x3e, r29	; 62
 ef6:	0f be       	out	0x3f, r0	; 63
 ef8:	cd bf       	out	0x3d, r28	; 61
 efa:	ed 01       	movw	r28, r26
 efc:	08 95       	ret

00000efe <_exit>:
 efe:	f8 94       	cli

00000f00 <__stop_program>:
 f00:	ff cf       	rjmp	.-2      	; 0xf00 <__stop_program>
>>>>>>> parent of ce7b5b7... Complete!
