
Diode Temp Sensor.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000005a  00800100  00000e00  00000e74  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000e00  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005c  00000000  00000000  00000ece  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000f2c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000110  00000000  00000000  00000f68  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001433  00000000  00000000  00001078  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000b65  00000000  00000000  000024ab  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000009e6  00000000  00000000  00003010  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000210  00000000  00000000  000039f8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000063a  00000000  00000000  00003c08  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000008c3  00000000  00000000  00004242  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000d8  00000000  00000000  00004b05  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   8:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  10:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  54:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e0 e0       	ldi	r30, 0x00	; 0
  7c:	fe e0       	ldi	r31, 0x0E	; 14
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	aa 35       	cpi	r26, 0x5A	; 90
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>
  8a:	0e 94 15 02 	call	0x42a	; 0x42a <main>
  8e:	0c 94 fe 06 	jmp	0xdfc	; 0xdfc <_exit>

00000092 <__bad_interrupt>:
  92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <ADCRead>:

	uint16_t input = 0; //We're going to sample and average from 16 readings. 
	uint32_t sum = 0; //The sum of all samples.
	uint16_t average = 0; // the average of all the sample
	
	ADCSRB &= 0x00; //Free Running mode (Triggering Disabled in ADCSRA)
  96:	eb e7       	ldi	r30, 0x7B	; 123
  98:	f0 e0       	ldi	r31, 0x00	; 0
  9a:	90 81       	ld	r25, Z
  9c:	10 82       	st	Z, r1
	ADCSRA |= (1 << ADEN) | (1 << ADPS2) | (1 << ADPS1);// ADC Enable; Interupt Disable; Freq/64
  9e:	ea e7       	ldi	r30, 0x7A	; 122
  a0:	f0 e0       	ldi	r31, 0x00	; 0
  a2:	90 81       	ld	r25, Z
  a4:	96 68       	ori	r25, 0x86	; 134
  a6:	90 83       	st	Z, r25
	//ADMUX |= (1 << REFS0); //Set reference, AVcc
	ADMUX |= ((1 << REFS0) | (1 << REFS1)) ; //Set Internal 1.1v reference		  
  a8:	ec e7       	ldi	r30, 0x7C	; 124
  aa:	f0 e0       	ldi	r31, 0x00	; 0
  ac:	90 81       	ld	r25, Z
  ae:	90 6c       	ori	r25, 0xC0	; 192
  b0:	90 83       	st	Z, r25
	
	ADMUX &= 0b11110000;  //Reset ADC MUX Select
  b2:	90 81       	ld	r25, Z
  b4:	90 7f       	andi	r25, 0xF0	; 240
  b6:	90 83       	st	Z, r25
	    
	ADMUX |= pin;  //Set input pin
  b8:	90 81       	ld	r25, Z
  ba:	89 2b       	or	r24, r25
  bc:	80 83       	st	Z, r24
  be:	20 e0       	ldi	r18, 0x00	; 0
  c0:	34 e0       	ldi	r19, 0x04	; 4
#define sample_time_us 50

uint16_t ADCRead(uint8_t pin){

	uint16_t input = 0; //We're going to sample and average from 16 readings. 
	uint32_t sum = 0; //The sum of all samples.
  c2:	40 e0       	ldi	r20, 0x00	; 0
  c4:	50 e0       	ldi	r21, 0x00	; 0
  c6:	ba 01       	movw	r22, r20
	ADMUX |= pin;  //Set input pin
	
	uint16_t i;
	for(i = 0; i < number_samples; i++) {
	
		ADCSRA |= (1 << ADSC); //Start Conversation
  c8:	ea e7       	ldi	r30, 0x7A	; 122
  ca:	f0 e0       	ldi	r31, 0x00	; 0

		while( (ADCSRA & (1 << ADSC)) ); //Wait till conversation complete ( ADSC == 0 )

		ADCSRA |= (1 << ADIF);   // Clear ADC Interrupt Flag
		
		input = ADC; 
  cc:	a8 e7       	ldi	r26, 0x78	; 120
  ce:	b0 e0       	ldi	r27, 0x00	; 0
	ADMUX |= pin;  //Set input pin
	
	uint16_t i;
	for(i = 0; i < number_samples; i++) {
	
		ADCSRA |= (1 << ADSC); //Start Conversation
  d0:	90 81       	ld	r25, Z
  d2:	90 64       	ori	r25, 0x40	; 64
  d4:	90 83       	st	Z, r25

		while( (ADCSRA & (1 << ADSC)) ); //Wait till conversation complete ( ADSC == 0 )
  d6:	90 81       	ld	r25, Z
  d8:	96 fd       	sbrc	r25, 6
  da:	fd cf       	rjmp	.-6      	; 0xd6 <ADCRead+0x40>

		ADCSRA |= (1 << ADIF);   // Clear ADC Interrupt Flag
  dc:	90 81       	ld	r25, Z
  de:	90 61       	ori	r25, 0x10	; 16
  e0:	90 83       	st	Z, r25
		
		input = ADC; 
  e2:	8d 91       	ld	r24, X+
  e4:	9c 91       	ld	r25, X
  e6:	11 97       	sbiw	r26, 0x01	; 1
		sum = sum + input;
  e8:	48 0f       	add	r20, r24
  ea:	59 1f       	adc	r21, r25
  ec:	61 1d       	adc	r22, r1
  ee:	71 1d       	adc	r23, r1
  f0:	21 50       	subi	r18, 0x01	; 1
  f2:	31 09       	sbc	r19, r1
	ADMUX &= 0b11110000;  //Reset ADC MUX Select
	    
	ADMUX |= pin;  //Set input pin
	
	uint16_t i;
	for(i = 0; i < number_samples; i++) {
  f4:	69 f7       	brne	.-38     	; 0xd0 <ADCRead+0x3a>
		input = ADC; 
		sum = sum + input;
		
	}
	
	average = (uint16_t) (sum / number_samples);
  f6:	db 01       	movw	r26, r22
  f8:	ca 01       	movw	r24, r20
  fa:	07 2e       	mov	r0, r23
  fc:	7a e0       	ldi	r23, 0x0A	; 10
  fe:	b6 95       	lsr	r27
 100:	a7 95       	ror	r26
 102:	97 95       	ror	r25
 104:	87 95       	ror	r24
 106:	7a 95       	dec	r23
 108:	d1 f7       	brne	.-12     	; 0xfe <ADCRead+0x68>
 10a:	70 2d       	mov	r23, r0
		
	return average;
}
 10c:	08 95       	ret

0000010e <toggle_e>:

    while ( (c = pgm_read_byte(progmem_s++)) ) {
        lcd_putc(c);
    }

}/* lcd_puts_p */
 10e:	5e 9a       	sbi	0x0b, 6	; 11
 110:	00 00       	nop
 112:	5e 98       	cbi	0x0b, 6	; 11
 114:	08 95       	ret

00000116 <lcd_write>:
 116:	cf 93       	push	r28
 118:	df 93       	push	r29
 11a:	d8 2f       	mov	r29, r24
 11c:	66 23       	and	r22, r22
 11e:	11 f0       	breq	.+4      	; 0x124 <lcd_write+0xe>
 120:	5c 9a       	sbi	0x0b, 4	; 11
 122:	01 c0       	rjmp	.+2      	; 0x126 <lcd_write+0x10>
 124:	5c 98       	cbi	0x0b, 4	; 11
 126:	5d 98       	cbi	0x0b, 5	; 11
 128:	8a b1       	in	r24, 0x0a	; 10
 12a:	8f 60       	ori	r24, 0x0F	; 15
 12c:	8a b9       	out	0x0a, r24	; 10
 12e:	cb b1       	in	r28, 0x0b	; 11
 130:	c0 7f       	andi	r28, 0xF0	; 240
 132:	8d 2f       	mov	r24, r29
 134:	82 95       	swap	r24
 136:	8f 70       	andi	r24, 0x0F	; 15
 138:	8c 2b       	or	r24, r28
 13a:	8b b9       	out	0x0b, r24	; 11
 13c:	0e 94 87 00 	call	0x10e	; 0x10e <toggle_e>
 140:	df 70       	andi	r29, 0x0F	; 15
 142:	dc 2b       	or	r29, r28
 144:	db b9       	out	0x0b, r29	; 11
 146:	0e 94 87 00 	call	0x10e	; 0x10e <toggle_e>
 14a:	cf 60       	ori	r28, 0x0F	; 15
 14c:	cb b9       	out	0x0b, r28	; 11
 14e:	df 91       	pop	r29
 150:	cf 91       	pop	r28
 152:	08 95       	ret

00000154 <lcd_read>:
 154:	88 23       	and	r24, r24
 156:	11 f0       	breq	.+4      	; 0x15c <lcd_read+0x8>
 158:	5c 9a       	sbi	0x0b, 4	; 11
 15a:	01 c0       	rjmp	.+2      	; 0x15e <lcd_read+0xa>
 15c:	5c 98       	cbi	0x0b, 4	; 11
 15e:	5d 9a       	sbi	0x0b, 5	; 11
 160:	8a b1       	in	r24, 0x0a	; 10
 162:	80 7f       	andi	r24, 0xF0	; 240
 164:	8a b9       	out	0x0a, r24	; 10
 166:	5e 9a       	sbi	0x0b, 6	; 11
 168:	00 00       	nop
 16a:	29 b1       	in	r18, 0x09	; 9
 16c:	5e 98       	cbi	0x0b, 6	; 11
 16e:	00 00       	nop
 170:	5e 9a       	sbi	0x0b, 6	; 11
 172:	00 00       	nop
 174:	99 b1       	in	r25, 0x09	; 9
 176:	22 95       	swap	r18
 178:	20 7f       	andi	r18, 0xF0	; 240
 17a:	89 2f       	mov	r24, r25
 17c:	8f 70       	andi	r24, 0x0F	; 15
 17e:	5e 98       	cbi	0x0b, 6	; 11
 180:	82 2b       	or	r24, r18
 182:	08 95       	ret

00000184 <lcd_waitbusy>:
 184:	80 e0       	ldi	r24, 0x00	; 0
 186:	0e 94 aa 00 	call	0x154	; 0x154 <lcd_read>
 18a:	88 23       	and	r24, r24
 18c:	dc f3       	brlt	.-10     	; 0x184 <lcd_waitbusy>
 18e:	00 c0       	rjmp	.+0      	; 0x190 <lcd_waitbusy+0xc>
 190:	00 c0       	rjmp	.+0      	; 0x192 <lcd_waitbusy+0xe>
 192:	80 e0       	ldi	r24, 0x00	; 0
 194:	0e 94 aa 00 	call	0x154	; 0x154 <lcd_read>
 198:	08 95       	ret

0000019a <lcd_command>:
 19a:	cf 93       	push	r28
 19c:	c8 2f       	mov	r28, r24
 19e:	0e 94 c2 00 	call	0x184	; 0x184 <lcd_waitbusy>
 1a2:	60 e0       	ldi	r22, 0x00	; 0
 1a4:	8c 2f       	mov	r24, r28
 1a6:	0e 94 8b 00 	call	0x116	; 0x116 <lcd_write>
 1aa:	cf 91       	pop	r28
 1ac:	08 95       	ret

000001ae <lcd_gotoxy>:
 1ae:	61 11       	cpse	r22, r1
 1b0:	04 c0       	rjmp	.+8      	; 0x1ba <lcd_gotoxy+0xc>
 1b2:	80 58       	subi	r24, 0x80	; 128
 1b4:	0e 94 cd 00 	call	0x19a	; 0x19a <lcd_command>
 1b8:	08 95       	ret
 1ba:	80 54       	subi	r24, 0x40	; 64
 1bc:	0e 94 cd 00 	call	0x19a	; 0x19a <lcd_command>
 1c0:	08 95       	ret

000001c2 <lcd_clrscr>:
 1c2:	81 e0       	ldi	r24, 0x01	; 1
 1c4:	0e 94 cd 00 	call	0x19a	; 0x19a <lcd_command>
 1c8:	08 95       	ret

000001ca <lcd_putc>:
 1ca:	cf 93       	push	r28
 1cc:	c8 2f       	mov	r28, r24
 1ce:	0e 94 c2 00 	call	0x184	; 0x184 <lcd_waitbusy>
 1d2:	ca 30       	cpi	r28, 0x0A	; 10
 1d4:	49 f4       	brne	.+18     	; 0x1e8 <lcd_putc+0x1e>
 1d6:	80 34       	cpi	r24, 0x40	; 64
 1d8:	10 f0       	brcs	.+4      	; 0x1de <lcd_putc+0x14>
 1da:	80 e0       	ldi	r24, 0x00	; 0
 1dc:	01 c0       	rjmp	.+2      	; 0x1e0 <lcd_putc+0x16>
 1de:	80 e4       	ldi	r24, 0x40	; 64
 1e0:	80 58       	subi	r24, 0x80	; 128
 1e2:	0e 94 cd 00 	call	0x19a	; 0x19a <lcd_command>
 1e6:	04 c0       	rjmp	.+8      	; 0x1f0 <lcd_putc+0x26>
 1e8:	61 e0       	ldi	r22, 0x01	; 1
 1ea:	8c 2f       	mov	r24, r28
 1ec:	0e 94 8b 00 	call	0x116	; 0x116 <lcd_write>
 1f0:	cf 91       	pop	r28
 1f2:	08 95       	ret

000001f4 <lcd_puts>:
 1f4:	cf 93       	push	r28
 1f6:	df 93       	push	r29
 1f8:	ec 01       	movw	r28, r24
 1fa:	21 96       	adiw	r28, 0x01	; 1
 1fc:	fc 01       	movw	r30, r24
 1fe:	80 81       	ld	r24, Z
 200:	88 23       	and	r24, r24
 202:	29 f0       	breq	.+10     	; 0x20e <lcd_puts+0x1a>
 204:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_putc>
 208:	89 91       	ld	r24, Y+
 20a:	81 11       	cpse	r24, r1
 20c:	fb cf       	rjmp	.-10     	; 0x204 <lcd_puts+0x10>
 20e:	df 91       	pop	r29
 210:	cf 91       	pop	r28
 212:	08 95       	ret

00000214 <lcd_init>:
                   LCD_DISP_ON_CURSOR      display on, cursor on
                   LCD_DISP_CURSOR_BLINK   display on, cursor on flashing
Returns:  none
*************************************************************************/
void lcd_init(uint8_t dispAttr)
{
 214:	cf 93       	push	r28
 216:	c8 2f       	mov	r28, r24
      && ( &LCD_RS_PORT == &LCD_DATA0_PORT) && ( &LCD_RW_PORT == &LCD_DATA0_PORT) && (&LCD_E_PORT == &LCD_DATA0_PORT)
      && (LCD_DATA0_PIN == 0 ) && (LCD_DATA1_PIN == 1) && (LCD_DATA2_PIN == 2) && (LCD_DATA3_PIN == 3) 
      && (LCD_RS_PIN == 4 ) && (LCD_RW_PIN == 5) && (LCD_E_PIN == 6 ) )
    {
        /* configure all port bits as output (all LCD lines on same port) */
        DDR(LCD_DATA0_PORT) |= 0x7F;
 218:	9a b1       	in	r25, 0x0a	; 10
 21a:	9f 67       	ori	r25, 0x7F	; 127
 21c:	9a b9       	out	0x0a, r25	; 10
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 21e:	8f e9       	ldi	r24, 0x9F	; 159
 220:	9f e0       	ldi	r25, 0x0F	; 15
 222:	01 97       	sbiw	r24, 0x01	; 1
 224:	f1 f7       	brne	.-4      	; 0x222 <lcd_init+0xe>
 226:	00 c0       	rjmp	.+0      	; 0x228 <lcd_init+0x14>
 228:	00 00       	nop
        DDR(LCD_DATA3_PORT) |= _BV(LCD_DATA3_PIN);
    }
    delay(LCD_DELAY_BOOTUP);             /* wait 16ms or more after power-on       */
    
    /* initial write to lcd is 8bit */
    LCD_DATA1_PORT |= _BV(LCD_DATA1_PIN);    // LCD_FUNCTION>>4;
 22a:	59 9a       	sbi	0x0b, 1	; 11
    LCD_DATA0_PORT |= _BV(LCD_DATA0_PIN);    // LCD_FUNCTION_8BIT>>4;
 22c:	58 9a       	sbi	0x0b, 0	; 11
    lcd_e_toggle();
 22e:	0e 94 87 00 	call	0x10e	; 0x10e <toggle_e>
 232:	81 ee       	ldi	r24, 0xE1	; 225
 234:	94 e0       	ldi	r25, 0x04	; 4
 236:	01 97       	sbiw	r24, 0x01	; 1
 238:	f1 f7       	brne	.-4      	; 0x236 <lcd_init+0x22>
 23a:	00 c0       	rjmp	.+0      	; 0x23c <lcd_init+0x28>
 23c:	00 00       	nop
    delay(LCD_DELAY_INIT);               /* delay, busy flag can't be checked here */
   
    /* repeat last command */ 
    lcd_e_toggle();      
 23e:	0e 94 87 00 	call	0x10e	; 0x10e <toggle_e>
 242:	95 e1       	ldi	r25, 0x15	; 21
 244:	9a 95       	dec	r25
 246:	f1 f7       	brne	.-4      	; 0x244 <lcd_init+0x30>
 248:	00 00       	nop
    delay(LCD_DELAY_INIT_REP);           /* delay, busy flag can't be checked here */
    
    /* repeat last command a third time */
    lcd_e_toggle();      
 24a:	0e 94 87 00 	call	0x10e	; 0x10e <toggle_e>
 24e:	85 e1       	ldi	r24, 0x15	; 21
 250:	8a 95       	dec	r24
 252:	f1 f7       	brne	.-4      	; 0x250 <lcd_init+0x3c>
 254:	00 00       	nop
    delay(LCD_DELAY_INIT_REP);           /* delay, busy flag can't be checked here */

    /* now configure for 4bit mode */
    LCD_DATA0_PORT &= ~_BV(LCD_DATA0_PIN);   // LCD_FUNCTION_4BIT_1LINE>>4
 256:	58 98       	cbi	0x0b, 0	; 11
    lcd_e_toggle();
 258:	0e 94 87 00 	call	0x10e	; 0x10e <toggle_e>
 25c:	95 e1       	ldi	r25, 0x15	; 21
 25e:	9a 95       	dec	r25
 260:	f1 f7       	brne	.-4      	; 0x25e <lcd_init+0x4a>
 262:	00 00       	nop
    /* Display with KS0073 controller requires special commands for enabling 4 line mode */
	lcd_command(KS0073_EXTENDED_FUNCTION_REGISTER_ON);
	lcd_command(KS0073_4LINES_MODE);
	lcd_command(KS0073_EXTENDED_FUNCTION_REGISTER_OFF);
#else
    lcd_command(LCD_FUNCTION_DEFAULT);      /* function set: display lines  */
 264:	88 e2       	ldi	r24, 0x28	; 40
 266:	0e 94 cd 00 	call	0x19a	; 0x19a <lcd_command>
#endif
    lcd_command(LCD_DISP_OFF);              /* display off                  */
 26a:	88 e0       	ldi	r24, 0x08	; 8
 26c:	0e 94 cd 00 	call	0x19a	; 0x19a <lcd_command>
    lcd_clrscr();                           /* display clear                */ 
 270:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <lcd_clrscr>
    lcd_command(LCD_MODE_DEFAULT);          /* set entry mode               */
 274:	86 e0       	ldi	r24, 0x06	; 6
 276:	0e 94 cd 00 	call	0x19a	; 0x19a <lcd_command>
    lcd_command(dispAttr);                  /* display/cursor control       */
 27a:	8c 2f       	mov	r24, r28
 27c:	0e 94 cd 00 	call	0x19a	; 0x19a <lcd_command>

}/* lcd_init */
 280:	cf 91       	pop	r28
 282:	08 95       	ret

00000284 <lcd_Write>:

  
 ***************************************
 */

 void lcd_Write( uint16_t adc_reading_lm35, uint16_t adc_reading_diode, uint16_t temperture_lm35, uint16_t temperture_diode ){  //Not Tested
 284:	af 92       	push	r10
 286:	bf 92       	push	r11
 288:	cf 92       	push	r12
 28a:	df 92       	push	r13
 28c:	ef 92       	push	r14
 28e:	ff 92       	push	r15
 290:	0f 93       	push	r16
 292:	1f 93       	push	r17
 294:	cf 93       	push	r28
 296:	df 93       	push	r29
 298:	cd b7       	in	r28, 0x3d	; 61
 29a:	de b7       	in	r29, 0x3e	; 62
 29c:	a2 97       	sbiw	r28, 0x22	; 34
 29e:	0f b6       	in	r0, 0x3f	; 63
 2a0:	f8 94       	cli
 2a2:	de bf       	out	0x3e, r29	; 62
 2a4:	0f be       	out	0x3f, r0	; 63
 2a6:	cd bf       	out	0x3d, r28	; 61
 2a8:	d8 2e       	mov	r13, r24
 2aa:	c9 2e       	mov	r12, r25
 2ac:	b6 2e       	mov	r11, r22
 2ae:	a7 2e       	mov	r10, r23
 2b0:	8a 01       	movw	r16, r20
 2b2:	79 01       	movw	r14, r18

	lcd_init( LCD_DISP_ON );   //Turn the LCD on, without cursor.
 2b4:	8c e0       	ldi	r24, 0x0C	; 12
 2b6:	0e 94 0a 01 	call	0x214	; 0x214 <lcd_init>



	// The if statement is to prevent overloading the output since the model allows for 
	// such occurances. 
	if ( (temperture_lm35 < MAX_TEMP) && (temperture_diode < MAX_TEMP) ){
 2ba:	0e 36       	cpi	r16, 0x6E	; 110
 2bc:	11 05       	cpc	r17, r1
 2be:	08 f0       	brcs	.+2      	; 0x2c2 <lcd_Write+0x3e>
 2c0:	9e c0       	rjmp	.+316    	; 0x3fe <lcd_Write+0x17a>
 2c2:	8e e6       	ldi	r24, 0x6E	; 110
 2c4:	e8 16       	cp	r14, r24
 2c6:	f1 04       	cpc	r15, r1
 2c8:	08 f0       	brcs	.+2      	; 0x2cc <lcd_Write+0x48>
 2ca:	47 c0       	rjmp	.+142    	; 0x35a <lcd_Write+0xd6>
	
		sprintf(display_line1, "LM35 :%4.0d - %dC", adc_reading_lm35, temperture_lm35);     //First line on the LCD
 2cc:	1f 93       	push	r17
 2ce:	0f 93       	push	r16
 2d0:	cf 92       	push	r12
 2d2:	df 92       	push	r13
 2d4:	80 e0       	ldi	r24, 0x00	; 0
 2d6:	91 e0       	ldi	r25, 0x01	; 1
 2d8:	9f 93       	push	r25
 2da:	8f 93       	push	r24
 2dc:	ce 01       	movw	r24, r28
 2de:	01 96       	adiw	r24, 0x01	; 1
 2e0:	9f 93       	push	r25
 2e2:	8f 93       	push	r24
 2e4:	0e 94 26 04 	call	0x84c	; 0x84c <sprintf>
		sprintf(display_line2, "DIODE:%4.0d - %dC", adc_reading_diode, temperture_diode);   //Second line on the LCD
 2e8:	ff 92       	push	r15
 2ea:	ef 92       	push	r14
 2ec:	af 92       	push	r10
 2ee:	bf 92       	push	r11
 2f0:	82 e1       	ldi	r24, 0x12	; 18
 2f2:	91 e0       	ldi	r25, 0x01	; 1
 2f4:	9f 93       	push	r25
 2f6:	8f 93       	push	r24
 2f8:	ce 01       	movw	r24, r28
 2fa:	42 96       	adiw	r24, 0x12	; 18
 2fc:	9f 93       	push	r25
 2fe:	8f 93       	push	r24
 300:	0e 94 26 04 	call	0x84c	; 0x84c <sprintf>
 304:	0f b6       	in	r0, 0x3f	; 63
 306:	f8 94       	cli
 308:	de bf       	out	0x3e, r29	; 62
 30a:	0f be       	out	0x3f, r0	; 63
 30c:	cd bf       	out	0x3d, r28	; 61
 30e:	66 c0       	rjmp	.+204    	; 0x3dc <lcd_Write+0x158>
		
	} else if ( (temperture_lm35 > MAX_TEMP) && (temperture_diode < MAX_TEMP) ) {
 310:	9e e6       	ldi	r25, 0x6E	; 110
 312:	e9 16       	cp	r14, r25
 314:	f1 04       	cpc	r15, r1
 316:	08 f0       	brcs	.+2      	; 0x31a <lcd_Write+0x96>
 318:	44 c0       	rjmp	.+136    	; 0x3a2 <lcd_Write+0x11e>
		
		sprintf(display_line1, "LM35 :%4.0d -  :(", adc_reading_lm35);     //First line on the LCD
 31a:	cf 92       	push	r12
 31c:	df 92       	push	r13
 31e:	84 e2       	ldi	r24, 0x24	; 36
 320:	91 e0       	ldi	r25, 0x01	; 1
 322:	9f 93       	push	r25
 324:	8f 93       	push	r24
 326:	ce 01       	movw	r24, r28
 328:	01 96       	adiw	r24, 0x01	; 1
 32a:	9f 93       	push	r25
 32c:	8f 93       	push	r24
 32e:	0e 94 26 04 	call	0x84c	; 0x84c <sprintf>
		sprintf(display_line2, "DIODE:%4.0d - %dC", adc_reading_diode, temperture_diode);   //Second line on the LCD			
 332:	ff 92       	push	r15
 334:	ef 92       	push	r14
 336:	af 92       	push	r10
 338:	bf 92       	push	r11
 33a:	82 e1       	ldi	r24, 0x12	; 18
 33c:	91 e0       	ldi	r25, 0x01	; 1
 33e:	9f 93       	push	r25
 340:	8f 93       	push	r24
 342:	ce 01       	movw	r24, r28
 344:	42 96       	adiw	r24, 0x12	; 18
 346:	9f 93       	push	r25
 348:	8f 93       	push	r24
 34a:	0e 94 26 04 	call	0x84c	; 0x84c <sprintf>
 34e:	0f b6       	in	r0, 0x3f	; 63
 350:	f8 94       	cli
 352:	de bf       	out	0x3e, r29	; 62
 354:	0f be       	out	0x3f, r0	; 63
 356:	cd bf       	out	0x3d, r28	; 61
 358:	41 c0       	rjmp	.+130    	; 0x3dc <lcd_Write+0x158>
		
	} else if ( (temperture_lm35 < MAX_TEMP) && (temperture_diode > MAX_TEMP) ) {
 35a:	9f e6       	ldi	r25, 0x6F	; 111
 35c:	e9 16       	cp	r14, r25
 35e:	f1 04       	cpc	r15, r1
 360:	00 f1       	brcs	.+64     	; 0x3a2 <lcd_Write+0x11e>
		
		sprintf(display_line1, "LM35 :%4.0d - %dC", adc_reading_lm35, temperture_lm35);     //First line on the LCD
 362:	1f 93       	push	r17
 364:	0f 93       	push	r16
 366:	cf 92       	push	r12
 368:	df 92       	push	r13
 36a:	80 e0       	ldi	r24, 0x00	; 0
 36c:	91 e0       	ldi	r25, 0x01	; 1
 36e:	9f 93       	push	r25
 370:	8f 93       	push	r24
 372:	ce 01       	movw	r24, r28
 374:	01 96       	adiw	r24, 0x01	; 1
 376:	9f 93       	push	r25
 378:	8f 93       	push	r24
 37a:	0e 94 26 04 	call	0x84c	; 0x84c <sprintf>
		sprintf(display_line2, "DIODE:%4.0d -  :C", adc_reading_diode);   //Second line on the LCD
 37e:	af 92       	push	r10
 380:	bf 92       	push	r11
 382:	86 e3       	ldi	r24, 0x36	; 54
 384:	91 e0       	ldi	r25, 0x01	; 1
 386:	9f 93       	push	r25
 388:	8f 93       	push	r24
 38a:	ce 01       	movw	r24, r28
 38c:	42 96       	adiw	r24, 0x12	; 18
 38e:	9f 93       	push	r25
 390:	8f 93       	push	r24
 392:	0e 94 26 04 	call	0x84c	; 0x84c <sprintf>
 396:	0f b6       	in	r0, 0x3f	; 63
 398:	f8 94       	cli
 39a:	de bf       	out	0x3e, r29	; 62
 39c:	0f be       	out	0x3f, r0	; 63
 39e:	cd bf       	out	0x3d, r28	; 61
 3a0:	1d c0       	rjmp	.+58     	; 0x3dc <lcd_Write+0x158>
		
	} else {
		
		sprintf(display_line1, "LM35 :%4.0d -  :C", adc_reading_lm35);     //First line on the LCD
 3a2:	cf 92       	push	r12
 3a4:	df 92       	push	r13
 3a6:	88 e4       	ldi	r24, 0x48	; 72
 3a8:	91 e0       	ldi	r25, 0x01	; 1
 3aa:	9f 93       	push	r25
 3ac:	8f 93       	push	r24
 3ae:	ce 01       	movw	r24, r28
 3b0:	01 96       	adiw	r24, 0x01	; 1
 3b2:	9f 93       	push	r25
 3b4:	8f 93       	push	r24
 3b6:	0e 94 26 04 	call	0x84c	; 0x84c <sprintf>
		sprintf(display_line2, "DIODE:%4.0d -  :C", adc_reading_diode);   //Second line on the LCD		
 3ba:	af 92       	push	r10
 3bc:	bf 92       	push	r11
 3be:	86 e3       	ldi	r24, 0x36	; 54
 3c0:	91 e0       	ldi	r25, 0x01	; 1
 3c2:	9f 93       	push	r25
 3c4:	8f 93       	push	r24
 3c6:	ce 01       	movw	r24, r28
 3c8:	42 96       	adiw	r24, 0x12	; 18
 3ca:	9f 93       	push	r25
 3cc:	8f 93       	push	r24
 3ce:	0e 94 26 04 	call	0x84c	; 0x84c <sprintf>
 3d2:	0f b6       	in	r0, 0x3f	; 63
 3d4:	f8 94       	cli
 3d6:	de bf       	out	0x3e, r29	; 62
 3d8:	0f be       	out	0x3f, r0	; 63
 3da:	cd bf       	out	0x3d, r28	; 61
		
	}

	lcd_gotoxy((uint8_t) 0x0, (uint8_t) 0x0);    //Move cursor to the first line
 3dc:	60 e0       	ldi	r22, 0x00	; 0
 3de:	80 e0       	ldi	r24, 0x00	; 0
 3e0:	0e 94 d7 00 	call	0x1ae	; 0x1ae <lcd_gotoxy>
	lcd_puts( display_line1 );               //display line 1
 3e4:	ce 01       	movw	r24, r28
 3e6:	01 96       	adiw	r24, 0x01	; 1
 3e8:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <lcd_puts>
	lcd_gotoxy((uint8_t) 0x0, (uint8_t) 0x1);    //Move cursor to the second line
 3ec:	61 e0       	ldi	r22, 0x01	; 1
 3ee:	80 e0       	ldi	r24, 0x00	; 0
 3f0:	0e 94 d7 00 	call	0x1ae	; 0x1ae <lcd_gotoxy>
	lcd_puts( display_line2 );                //display line 2
 3f4:	ce 01       	movw	r24, r28
 3f6:	42 96       	adiw	r24, 0x12	; 18
 3f8:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <lcd_puts>
 3fc:	05 c0       	rjmp	.+10     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
	if ( (temperture_lm35 < MAX_TEMP) && (temperture_diode < MAX_TEMP) ){
	
		sprintf(display_line1, "LM35 :%4.0d - %dC", adc_reading_lm35, temperture_lm35);     //First line on the LCD
		sprintf(display_line2, "DIODE:%4.0d - %dC", adc_reading_diode, temperture_diode);   //Second line on the LCD
		
	} else if ( (temperture_lm35 > MAX_TEMP) && (temperture_diode < MAX_TEMP) ) {
 3fe:	0f 36       	cpi	r16, 0x6F	; 111
 400:	11 05       	cpc	r17, r1
 402:	08 f0       	brcs	.+2      	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 404:	85 cf       	rjmp	.-246    	; 0x310 <lcd_Write+0x8c>
 406:	cd cf       	rjmp	.-102    	; 0x3a2 <lcd_Write+0x11e>
	lcd_gotoxy((uint8_t) 0x0, (uint8_t) 0x0);    //Move cursor to the first line
	lcd_puts( display_line1 );               //display line 1
	lcd_gotoxy((uint8_t) 0x0, (uint8_t) 0x1);    //Move cursor to the second line
	lcd_puts( display_line2 );                //display line 2
	
 }
 408:	a2 96       	adiw	r28, 0x22	; 34
 40a:	0f b6       	in	r0, 0x3f	; 63
 40c:	f8 94       	cli
 40e:	de bf       	out	0x3e, r29	; 62
 410:	0f be       	out	0x3f, r0	; 63
 412:	cd bf       	out	0x3d, r28	; 61
 414:	df 91       	pop	r29
 416:	cf 91       	pop	r28
 418:	1f 91       	pop	r17
 41a:	0f 91       	pop	r16
 41c:	ff 90       	pop	r15
 41e:	ef 90       	pop	r14
 420:	df 90       	pop	r13
 422:	cf 90       	pop	r12
 424:	bf 90       	pop	r11
 426:	af 90       	pop	r10
 428:	08 95       	ret

0000042a <main>:
from 1 to 129. Thus, one does not need to use \c clock_div_t type as argument.
*/
void clock_prescale_set(clock_div_t __x)
{
    uint8_t __tmp = _BV(CLKPCE);
    __asm__ __volatile__ (
 42a:	90 e0       	ldi	r25, 0x00	; 0
 42c:	80 e8       	ldi	r24, 0x80	; 128
 42e:	0f b6       	in	r0, 0x3f	; 63
 430:	f8 94       	cli
 432:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
 436:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
 43a:	0f be       	out	0x3f, r0	; 63
 43c:	c0 e8       	ldi	r28, 0x80	; 128
 43e:	f1 2c       	mov	r15, r1
 440:	2f 2d       	mov	r18, r15
 442:	0f b6       	in	r0, 0x3f	; 63
 444:	f8 94       	cli
 446:	c0 93 61 00 	sts	0x0061, r28	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
 44a:	20 93 61 00 	sts	0x0061, r18	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
 44e:	0f be       	out	0x3f, r0	; 63

	while(1){

		clock_prescale_set(clock_div_1); //Set freq to 8MHZ

		adc_reading_lm35 = ADCRead(LM35_pin);  //Reads ADC, the input is the pin number of the ADC
 450:	8f 2d       	mov	r24, r15
 452:	0e 94 4b 00 	call	0x96	; 0x96 <ADCRead>
 456:	5c 01       	movw	r10, r24
		adc_reading_diode = ADCRead(Diode_pin);
 458:	81 e0       	ldi	r24, 0x01	; 1
 45a:	0e 94 4b 00 	call	0x96	; 0x96 <ADCRead>
 45e:	8c 01       	movw	r16, r24
		
		temperture_lm35 = temperture_model_lm35(adc_reading_lm35);
 460:	c5 01       	movw	r24, r10
 462:	0e 94 67 02 	call	0x4ce	; 0x4ce <temperture_model_lm35>
 466:	6c 01       	movw	r12, r24
		temperture_diode = temperture_model_diode(adc_reading_diode);
 468:	c8 01       	movw	r24, r16
 46a:	0e 94 46 02 	call	0x48c	; 0x48c <temperture_model_diode>
 46e:	23 e0       	ldi	r18, 0x03	; 3
 470:	0f b6       	in	r0, 0x3f	; 63
 472:	f8 94       	cli
 474:	c0 93 61 00 	sts	0x0061, r28	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
 478:	20 93 61 00 	sts	0x0061, r18	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
 47c:	0f be       	out	0x3f, r0	; 63
		
		clock_prescale_set(clock_div_8);  //For some reason the display doesnt like 8MHz, but works fine with 1MHZ
		lcd_Write(adc_reading_lm35, adc_reading_diode, temperture_lm35, temperture_diode);
 47e:	9c 01       	movw	r18, r24
 480:	a6 01       	movw	r20, r12
 482:	b8 01       	movw	r22, r16
 484:	c5 01       	movw	r24, r10
 486:	0e 94 42 01 	call	0x284	; 0x284 <lcd_Write>
	}
 48a:	da cf       	rjmp	.-76     	; 0x440 <main+0x16>

0000048c <temperture_model_diode>:
uint16_t temperture_model_diode( uint16_t adc_value ){     //Assuming the ADC output is less than 1024
	
	uint16_t temperture;
	
	temperture = 31909;
	temperture = temperture - ( 68.019 * adc_value );
 48c:	bc 01       	movw	r22, r24
 48e:	80 e0       	ldi	r24, 0x00	; 0
 490:	90 e0       	ldi	r25, 0x00	; 0
 492:	0e 94 1c 03 	call	0x638	; 0x638 <__floatunsisf>
 496:	2a eb       	ldi	r18, 0xBA	; 186
 498:	39 e0       	ldi	r19, 0x09	; 9
 49a:	48 e8       	ldi	r20, 0x88	; 136
 49c:	52 e4       	ldi	r21, 0x42	; 66
 49e:	0e 94 aa 03 	call	0x754	; 0x754 <__mulsf3>
 4a2:	9b 01       	movw	r18, r22
 4a4:	ac 01       	movw	r20, r24
 4a6:	60 e0       	ldi	r22, 0x00	; 0
 4a8:	7a e4       	ldi	r23, 0x4A	; 74
 4aa:	89 ef       	ldi	r24, 0xF9	; 249
 4ac:	96 e4       	ldi	r25, 0x46	; 70
 4ae:	0e 94 80 02 	call	0x500	; 0x500 <__subsf3>
 4b2:	0e 94 ed 02 	call	0x5da	; 0x5da <__fixunssfsi>

	return (temperture / 100);
 4b6:	9b 01       	movw	r18, r22
 4b8:	36 95       	lsr	r19
 4ba:	27 95       	ror	r18
 4bc:	36 95       	lsr	r19
 4be:	27 95       	ror	r18
 4c0:	ab e7       	ldi	r26, 0x7B	; 123
 4c2:	b4 e1       	ldi	r27, 0x14	; 20
 4c4:	0e 94 17 04 	call	0x82e	; 0x82e <__umulhisi3>
	
} 
 4c8:	96 95       	lsr	r25
 4ca:	87 95       	ror	r24
 4cc:	08 95       	ret

000004ce <temperture_model_lm35>:

uint16_t temperture_model_lm35( uint16_t adc_value ){
	
	uint16_t temperture;

	temperture = adc_value * 10.75;
 4ce:	bc 01       	movw	r22, r24
 4d0:	80 e0       	ldi	r24, 0x00	; 0
 4d2:	90 e0       	ldi	r25, 0x00	; 0
 4d4:	0e 94 1c 03 	call	0x638	; 0x638 <__floatunsisf>
 4d8:	20 e0       	ldi	r18, 0x00	; 0
 4da:	30 e0       	ldi	r19, 0x00	; 0
 4dc:	4c e2       	ldi	r20, 0x2C	; 44
 4de:	51 e4       	ldi	r21, 0x41	; 65
 4e0:	0e 94 aa 03 	call	0x754	; 0x754 <__mulsf3>
 4e4:	0e 94 ed 02 	call	0x5da	; 0x5da <__fixunssfsi>

	return (temperture / 100);
 4e8:	9b 01       	movw	r18, r22
 4ea:	36 95       	lsr	r19
 4ec:	27 95       	ror	r18
 4ee:	36 95       	lsr	r19
 4f0:	27 95       	ror	r18
 4f2:	ab e7       	ldi	r26, 0x7B	; 123
 4f4:	b4 e1       	ldi	r27, 0x14	; 20
 4f6:	0e 94 17 04 	call	0x82e	; 0x82e <__umulhisi3>


 4fa:	96 95       	lsr	r25
 4fc:	87 95       	ror	r24
 4fe:	08 95       	ret

00000500 <__subsf3>:
 500:	50 58       	subi	r21, 0x80	; 128

00000502 <__addsf3>:
 502:	bb 27       	eor	r27, r27
 504:	aa 27       	eor	r26, r26
 506:	0e 94 98 02 	call	0x530	; 0x530 <__addsf3x>
 50a:	0c 94 70 03 	jmp	0x6e0	; 0x6e0 <__fp_round>
 50e:	0e 94 62 03 	call	0x6c4	; 0x6c4 <__fp_pscA>
 512:	38 f0       	brcs	.+14     	; 0x522 <__addsf3+0x20>
 514:	0e 94 69 03 	call	0x6d2	; 0x6d2 <__fp_pscB>
 518:	20 f0       	brcs	.+8      	; 0x522 <__addsf3+0x20>
 51a:	39 f4       	brne	.+14     	; 0x52a <__addsf3+0x28>
 51c:	9f 3f       	cpi	r25, 0xFF	; 255
 51e:	19 f4       	brne	.+6      	; 0x526 <__addsf3+0x24>
 520:	26 f4       	brtc	.+8      	; 0x52a <__addsf3+0x28>
 522:	0c 94 5f 03 	jmp	0x6be	; 0x6be <__fp_nan>
 526:	0e f4       	brtc	.+2      	; 0x52a <__addsf3+0x28>
 528:	e0 95       	com	r30
 52a:	e7 fb       	bst	r30, 7
 52c:	0c 94 59 03 	jmp	0x6b2	; 0x6b2 <__fp_inf>

00000530 <__addsf3x>:
 530:	e9 2f       	mov	r30, r25
 532:	0e 94 81 03 	call	0x702	; 0x702 <__fp_split3>
 536:	58 f3       	brcs	.-42     	; 0x50e <__addsf3+0xc>
 538:	ba 17       	cp	r27, r26
 53a:	62 07       	cpc	r22, r18
 53c:	73 07       	cpc	r23, r19
 53e:	84 07       	cpc	r24, r20
 540:	95 07       	cpc	r25, r21
 542:	20 f0       	brcs	.+8      	; 0x54c <__addsf3x+0x1c>
 544:	79 f4       	brne	.+30     	; 0x564 <__addsf3x+0x34>
 546:	a6 f5       	brtc	.+104    	; 0x5b0 <__addsf3x+0x80>
 548:	0c 94 a3 03 	jmp	0x746	; 0x746 <__fp_zero>
 54c:	0e f4       	brtc	.+2      	; 0x550 <__addsf3x+0x20>
 54e:	e0 95       	com	r30
 550:	0b 2e       	mov	r0, r27
 552:	ba 2f       	mov	r27, r26
 554:	a0 2d       	mov	r26, r0
 556:	0b 01       	movw	r0, r22
 558:	b9 01       	movw	r22, r18
 55a:	90 01       	movw	r18, r0
 55c:	0c 01       	movw	r0, r24
 55e:	ca 01       	movw	r24, r20
 560:	a0 01       	movw	r20, r0
 562:	11 24       	eor	r1, r1
 564:	ff 27       	eor	r31, r31
 566:	59 1b       	sub	r21, r25
 568:	99 f0       	breq	.+38     	; 0x590 <__addsf3x+0x60>
 56a:	59 3f       	cpi	r21, 0xF9	; 249
 56c:	50 f4       	brcc	.+20     	; 0x582 <__addsf3x+0x52>
 56e:	50 3e       	cpi	r21, 0xE0	; 224
 570:	68 f1       	brcs	.+90     	; 0x5cc <__addsf3x+0x9c>
 572:	1a 16       	cp	r1, r26
 574:	f0 40       	sbci	r31, 0x00	; 0
 576:	a2 2f       	mov	r26, r18
 578:	23 2f       	mov	r18, r19
 57a:	34 2f       	mov	r19, r20
 57c:	44 27       	eor	r20, r20
 57e:	58 5f       	subi	r21, 0xF8	; 248
 580:	f3 cf       	rjmp	.-26     	; 0x568 <__addsf3x+0x38>
 582:	46 95       	lsr	r20
 584:	37 95       	ror	r19
 586:	27 95       	ror	r18
 588:	a7 95       	ror	r26
 58a:	f0 40       	sbci	r31, 0x00	; 0
 58c:	53 95       	inc	r21
 58e:	c9 f7       	brne	.-14     	; 0x582 <__addsf3x+0x52>
 590:	7e f4       	brtc	.+30     	; 0x5b0 <__addsf3x+0x80>
 592:	1f 16       	cp	r1, r31
 594:	ba 0b       	sbc	r27, r26
 596:	62 0b       	sbc	r22, r18
 598:	73 0b       	sbc	r23, r19
 59a:	84 0b       	sbc	r24, r20
 59c:	ba f0       	brmi	.+46     	; 0x5cc <__addsf3x+0x9c>
 59e:	91 50       	subi	r25, 0x01	; 1
 5a0:	a1 f0       	breq	.+40     	; 0x5ca <__addsf3x+0x9a>
 5a2:	ff 0f       	add	r31, r31
 5a4:	bb 1f       	adc	r27, r27
 5a6:	66 1f       	adc	r22, r22
 5a8:	77 1f       	adc	r23, r23
 5aa:	88 1f       	adc	r24, r24
 5ac:	c2 f7       	brpl	.-16     	; 0x59e <__addsf3x+0x6e>
 5ae:	0e c0       	rjmp	.+28     	; 0x5cc <__addsf3x+0x9c>
 5b0:	ba 0f       	add	r27, r26
 5b2:	62 1f       	adc	r22, r18
 5b4:	73 1f       	adc	r23, r19
 5b6:	84 1f       	adc	r24, r20
 5b8:	48 f4       	brcc	.+18     	; 0x5cc <__addsf3x+0x9c>
 5ba:	87 95       	ror	r24
 5bc:	77 95       	ror	r23
 5be:	67 95       	ror	r22
 5c0:	b7 95       	ror	r27
 5c2:	f7 95       	ror	r31
 5c4:	9e 3f       	cpi	r25, 0xFE	; 254
 5c6:	08 f0       	brcs	.+2      	; 0x5ca <__addsf3x+0x9a>
 5c8:	b0 cf       	rjmp	.-160    	; 0x52a <__addsf3+0x28>
 5ca:	93 95       	inc	r25
 5cc:	88 0f       	add	r24, r24
 5ce:	08 f0       	brcs	.+2      	; 0x5d2 <__addsf3x+0xa2>
 5d0:	99 27       	eor	r25, r25
 5d2:	ee 0f       	add	r30, r30
 5d4:	97 95       	ror	r25
 5d6:	87 95       	ror	r24
 5d8:	08 95       	ret

000005da <__fixunssfsi>:
 5da:	0e 94 89 03 	call	0x712	; 0x712 <__fp_splitA>
 5de:	88 f0       	brcs	.+34     	; 0x602 <__fixunssfsi+0x28>
 5e0:	9f 57       	subi	r25, 0x7F	; 127
 5e2:	98 f0       	brcs	.+38     	; 0x60a <__fixunssfsi+0x30>
 5e4:	b9 2f       	mov	r27, r25
 5e6:	99 27       	eor	r25, r25
 5e8:	b7 51       	subi	r27, 0x17	; 23
 5ea:	b0 f0       	brcs	.+44     	; 0x618 <__fixunssfsi+0x3e>
 5ec:	e1 f0       	breq	.+56     	; 0x626 <__fixunssfsi+0x4c>
 5ee:	66 0f       	add	r22, r22
 5f0:	77 1f       	adc	r23, r23
 5f2:	88 1f       	adc	r24, r24
 5f4:	99 1f       	adc	r25, r25
 5f6:	1a f0       	brmi	.+6      	; 0x5fe <__fixunssfsi+0x24>
 5f8:	ba 95       	dec	r27
 5fa:	c9 f7       	brne	.-14     	; 0x5ee <__fixunssfsi+0x14>
 5fc:	14 c0       	rjmp	.+40     	; 0x626 <__fixunssfsi+0x4c>
 5fe:	b1 30       	cpi	r27, 0x01	; 1
 600:	91 f0       	breq	.+36     	; 0x626 <__fixunssfsi+0x4c>
 602:	0e 94 a3 03 	call	0x746	; 0x746 <__fp_zero>
 606:	b1 e0       	ldi	r27, 0x01	; 1
 608:	08 95       	ret
 60a:	0c 94 a3 03 	jmp	0x746	; 0x746 <__fp_zero>
 60e:	67 2f       	mov	r22, r23
 610:	78 2f       	mov	r23, r24
 612:	88 27       	eor	r24, r24
 614:	b8 5f       	subi	r27, 0xF8	; 248
 616:	39 f0       	breq	.+14     	; 0x626 <__fixunssfsi+0x4c>
 618:	b9 3f       	cpi	r27, 0xF9	; 249
 61a:	cc f3       	brlt	.-14     	; 0x60e <__fixunssfsi+0x34>
 61c:	86 95       	lsr	r24
 61e:	77 95       	ror	r23
 620:	67 95       	ror	r22
 622:	b3 95       	inc	r27
 624:	d9 f7       	brne	.-10     	; 0x61c <__fixunssfsi+0x42>
 626:	3e f4       	brtc	.+14     	; 0x636 <__fixunssfsi+0x5c>
 628:	90 95       	com	r25
 62a:	80 95       	com	r24
 62c:	70 95       	com	r23
 62e:	61 95       	neg	r22
 630:	7f 4f       	sbci	r23, 0xFF	; 255
 632:	8f 4f       	sbci	r24, 0xFF	; 255
 634:	9f 4f       	sbci	r25, 0xFF	; 255
 636:	08 95       	ret

00000638 <__floatunsisf>:
 638:	e8 94       	clt
 63a:	09 c0       	rjmp	.+18     	; 0x64e <__floatsisf+0x12>

0000063c <__floatsisf>:
 63c:	97 fb       	bst	r25, 7
 63e:	3e f4       	brtc	.+14     	; 0x64e <__floatsisf+0x12>
 640:	90 95       	com	r25
 642:	80 95       	com	r24
 644:	70 95       	com	r23
 646:	61 95       	neg	r22
 648:	7f 4f       	sbci	r23, 0xFF	; 255
 64a:	8f 4f       	sbci	r24, 0xFF	; 255
 64c:	9f 4f       	sbci	r25, 0xFF	; 255
 64e:	99 23       	and	r25, r25
 650:	a9 f0       	breq	.+42     	; 0x67c <__floatsisf+0x40>
 652:	f9 2f       	mov	r31, r25
 654:	96 e9       	ldi	r25, 0x96	; 150
 656:	bb 27       	eor	r27, r27
 658:	93 95       	inc	r25
 65a:	f6 95       	lsr	r31
 65c:	87 95       	ror	r24
 65e:	77 95       	ror	r23
 660:	67 95       	ror	r22
 662:	b7 95       	ror	r27
 664:	f1 11       	cpse	r31, r1
 666:	f8 cf       	rjmp	.-16     	; 0x658 <__floatsisf+0x1c>
 668:	fa f4       	brpl	.+62     	; 0x6a8 <__floatsisf+0x6c>
 66a:	bb 0f       	add	r27, r27
 66c:	11 f4       	brne	.+4      	; 0x672 <__floatsisf+0x36>
 66e:	60 ff       	sbrs	r22, 0
 670:	1b c0       	rjmp	.+54     	; 0x6a8 <__floatsisf+0x6c>
 672:	6f 5f       	subi	r22, 0xFF	; 255
 674:	7f 4f       	sbci	r23, 0xFF	; 255
 676:	8f 4f       	sbci	r24, 0xFF	; 255
 678:	9f 4f       	sbci	r25, 0xFF	; 255
 67a:	16 c0       	rjmp	.+44     	; 0x6a8 <__floatsisf+0x6c>
 67c:	88 23       	and	r24, r24
 67e:	11 f0       	breq	.+4      	; 0x684 <__floatsisf+0x48>
 680:	96 e9       	ldi	r25, 0x96	; 150
 682:	11 c0       	rjmp	.+34     	; 0x6a6 <__floatsisf+0x6a>
 684:	77 23       	and	r23, r23
 686:	21 f0       	breq	.+8      	; 0x690 <__floatsisf+0x54>
 688:	9e e8       	ldi	r25, 0x8E	; 142
 68a:	87 2f       	mov	r24, r23
 68c:	76 2f       	mov	r23, r22
 68e:	05 c0       	rjmp	.+10     	; 0x69a <__floatsisf+0x5e>
 690:	66 23       	and	r22, r22
 692:	71 f0       	breq	.+28     	; 0x6b0 <__floatsisf+0x74>
 694:	96 e8       	ldi	r25, 0x86	; 134
 696:	86 2f       	mov	r24, r22
 698:	70 e0       	ldi	r23, 0x00	; 0
 69a:	60 e0       	ldi	r22, 0x00	; 0
 69c:	2a f0       	brmi	.+10     	; 0x6a8 <__floatsisf+0x6c>
 69e:	9a 95       	dec	r25
 6a0:	66 0f       	add	r22, r22
 6a2:	77 1f       	adc	r23, r23
 6a4:	88 1f       	adc	r24, r24
 6a6:	da f7       	brpl	.-10     	; 0x69e <__floatsisf+0x62>
 6a8:	88 0f       	add	r24, r24
 6aa:	96 95       	lsr	r25
 6ac:	87 95       	ror	r24
 6ae:	97 f9       	bld	r25, 7
 6b0:	08 95       	ret

000006b2 <__fp_inf>:
 6b2:	97 f9       	bld	r25, 7
 6b4:	9f 67       	ori	r25, 0x7F	; 127
 6b6:	80 e8       	ldi	r24, 0x80	; 128
 6b8:	70 e0       	ldi	r23, 0x00	; 0
 6ba:	60 e0       	ldi	r22, 0x00	; 0
 6bc:	08 95       	ret

000006be <__fp_nan>:
 6be:	9f ef       	ldi	r25, 0xFF	; 255
 6c0:	80 ec       	ldi	r24, 0xC0	; 192
 6c2:	08 95       	ret

000006c4 <__fp_pscA>:
 6c4:	00 24       	eor	r0, r0
 6c6:	0a 94       	dec	r0
 6c8:	16 16       	cp	r1, r22
 6ca:	17 06       	cpc	r1, r23
 6cc:	18 06       	cpc	r1, r24
 6ce:	09 06       	cpc	r0, r25
 6d0:	08 95       	ret

000006d2 <__fp_pscB>:
 6d2:	00 24       	eor	r0, r0
 6d4:	0a 94       	dec	r0
 6d6:	12 16       	cp	r1, r18
 6d8:	13 06       	cpc	r1, r19
 6da:	14 06       	cpc	r1, r20
 6dc:	05 06       	cpc	r0, r21
 6de:	08 95       	ret

000006e0 <__fp_round>:
 6e0:	09 2e       	mov	r0, r25
 6e2:	03 94       	inc	r0
 6e4:	00 0c       	add	r0, r0
 6e6:	11 f4       	brne	.+4      	; 0x6ec <__fp_round+0xc>
 6e8:	88 23       	and	r24, r24
 6ea:	52 f0       	brmi	.+20     	; 0x700 <__fp_round+0x20>
 6ec:	bb 0f       	add	r27, r27
 6ee:	40 f4       	brcc	.+16     	; 0x700 <__fp_round+0x20>
 6f0:	bf 2b       	or	r27, r31
 6f2:	11 f4       	brne	.+4      	; 0x6f8 <__fp_round+0x18>
 6f4:	60 ff       	sbrs	r22, 0
 6f6:	04 c0       	rjmp	.+8      	; 0x700 <__fp_round+0x20>
 6f8:	6f 5f       	subi	r22, 0xFF	; 255
 6fa:	7f 4f       	sbci	r23, 0xFF	; 255
 6fc:	8f 4f       	sbci	r24, 0xFF	; 255
 6fe:	9f 4f       	sbci	r25, 0xFF	; 255
 700:	08 95       	ret

00000702 <__fp_split3>:
 702:	57 fd       	sbrc	r21, 7
 704:	90 58       	subi	r25, 0x80	; 128
 706:	44 0f       	add	r20, r20
 708:	55 1f       	adc	r21, r21
 70a:	59 f0       	breq	.+22     	; 0x722 <__fp_splitA+0x10>
 70c:	5f 3f       	cpi	r21, 0xFF	; 255
 70e:	71 f0       	breq	.+28     	; 0x72c <__fp_splitA+0x1a>
 710:	47 95       	ror	r20

00000712 <__fp_splitA>:
 712:	88 0f       	add	r24, r24
 714:	97 fb       	bst	r25, 7
 716:	99 1f       	adc	r25, r25
 718:	61 f0       	breq	.+24     	; 0x732 <__fp_splitA+0x20>
 71a:	9f 3f       	cpi	r25, 0xFF	; 255
 71c:	79 f0       	breq	.+30     	; 0x73c <__fp_splitA+0x2a>
 71e:	87 95       	ror	r24
 720:	08 95       	ret
 722:	12 16       	cp	r1, r18
 724:	13 06       	cpc	r1, r19
 726:	14 06       	cpc	r1, r20
 728:	55 1f       	adc	r21, r21
 72a:	f2 cf       	rjmp	.-28     	; 0x710 <__fp_split3+0xe>
 72c:	46 95       	lsr	r20
 72e:	f1 df       	rcall	.-30     	; 0x712 <__fp_splitA>
 730:	08 c0       	rjmp	.+16     	; 0x742 <__fp_splitA+0x30>
 732:	16 16       	cp	r1, r22
 734:	17 06       	cpc	r1, r23
 736:	18 06       	cpc	r1, r24
 738:	99 1f       	adc	r25, r25
 73a:	f1 cf       	rjmp	.-30     	; 0x71e <__fp_splitA+0xc>
 73c:	86 95       	lsr	r24
 73e:	71 05       	cpc	r23, r1
 740:	61 05       	cpc	r22, r1
 742:	08 94       	sec
 744:	08 95       	ret

00000746 <__fp_zero>:
 746:	e8 94       	clt

00000748 <__fp_szero>:
 748:	bb 27       	eor	r27, r27
 74a:	66 27       	eor	r22, r22
 74c:	77 27       	eor	r23, r23
 74e:	cb 01       	movw	r24, r22
 750:	97 f9       	bld	r25, 7
 752:	08 95       	ret

00000754 <__mulsf3>:
 754:	0e 94 bd 03 	call	0x77a	; 0x77a <__mulsf3x>
 758:	0c 94 70 03 	jmp	0x6e0	; 0x6e0 <__fp_round>
 75c:	0e 94 62 03 	call	0x6c4	; 0x6c4 <__fp_pscA>
 760:	38 f0       	brcs	.+14     	; 0x770 <__mulsf3+0x1c>
 762:	0e 94 69 03 	call	0x6d2	; 0x6d2 <__fp_pscB>
 766:	20 f0       	brcs	.+8      	; 0x770 <__mulsf3+0x1c>
 768:	95 23       	and	r25, r21
 76a:	11 f0       	breq	.+4      	; 0x770 <__mulsf3+0x1c>
 76c:	0c 94 59 03 	jmp	0x6b2	; 0x6b2 <__fp_inf>
 770:	0c 94 5f 03 	jmp	0x6be	; 0x6be <__fp_nan>
 774:	11 24       	eor	r1, r1
 776:	0c 94 a4 03 	jmp	0x748	; 0x748 <__fp_szero>

0000077a <__mulsf3x>:
 77a:	0e 94 81 03 	call	0x702	; 0x702 <__fp_split3>
 77e:	70 f3       	brcs	.-36     	; 0x75c <__mulsf3+0x8>

00000780 <__mulsf3_pse>:
 780:	95 9f       	mul	r25, r21
 782:	c1 f3       	breq	.-16     	; 0x774 <__mulsf3+0x20>
 784:	95 0f       	add	r25, r21
 786:	50 e0       	ldi	r21, 0x00	; 0
 788:	55 1f       	adc	r21, r21
 78a:	62 9f       	mul	r22, r18
 78c:	f0 01       	movw	r30, r0
 78e:	72 9f       	mul	r23, r18
 790:	bb 27       	eor	r27, r27
 792:	f0 0d       	add	r31, r0
 794:	b1 1d       	adc	r27, r1
 796:	63 9f       	mul	r22, r19
 798:	aa 27       	eor	r26, r26
 79a:	f0 0d       	add	r31, r0
 79c:	b1 1d       	adc	r27, r1
 79e:	aa 1f       	adc	r26, r26
 7a0:	64 9f       	mul	r22, r20
 7a2:	66 27       	eor	r22, r22
 7a4:	b0 0d       	add	r27, r0
 7a6:	a1 1d       	adc	r26, r1
 7a8:	66 1f       	adc	r22, r22
 7aa:	82 9f       	mul	r24, r18
 7ac:	22 27       	eor	r18, r18
 7ae:	b0 0d       	add	r27, r0
 7b0:	a1 1d       	adc	r26, r1
 7b2:	62 1f       	adc	r22, r18
 7b4:	73 9f       	mul	r23, r19
 7b6:	b0 0d       	add	r27, r0
 7b8:	a1 1d       	adc	r26, r1
 7ba:	62 1f       	adc	r22, r18
 7bc:	83 9f       	mul	r24, r19
 7be:	a0 0d       	add	r26, r0
 7c0:	61 1d       	adc	r22, r1
 7c2:	22 1f       	adc	r18, r18
 7c4:	74 9f       	mul	r23, r20
 7c6:	33 27       	eor	r19, r19
 7c8:	a0 0d       	add	r26, r0
 7ca:	61 1d       	adc	r22, r1
 7cc:	23 1f       	adc	r18, r19
 7ce:	84 9f       	mul	r24, r20
 7d0:	60 0d       	add	r22, r0
 7d2:	21 1d       	adc	r18, r1
 7d4:	82 2f       	mov	r24, r18
 7d6:	76 2f       	mov	r23, r22
 7d8:	6a 2f       	mov	r22, r26
 7da:	11 24       	eor	r1, r1
 7dc:	9f 57       	subi	r25, 0x7F	; 127
 7de:	50 40       	sbci	r21, 0x00	; 0
 7e0:	9a f0       	brmi	.+38     	; 0x808 <__mulsf3_pse+0x88>
 7e2:	f1 f0       	breq	.+60     	; 0x820 <__mulsf3_pse+0xa0>
 7e4:	88 23       	and	r24, r24
 7e6:	4a f0       	brmi	.+18     	; 0x7fa <__mulsf3_pse+0x7a>
 7e8:	ee 0f       	add	r30, r30
 7ea:	ff 1f       	adc	r31, r31
 7ec:	bb 1f       	adc	r27, r27
 7ee:	66 1f       	adc	r22, r22
 7f0:	77 1f       	adc	r23, r23
 7f2:	88 1f       	adc	r24, r24
 7f4:	91 50       	subi	r25, 0x01	; 1
 7f6:	50 40       	sbci	r21, 0x00	; 0
 7f8:	a9 f7       	brne	.-22     	; 0x7e4 <__mulsf3_pse+0x64>
 7fa:	9e 3f       	cpi	r25, 0xFE	; 254
 7fc:	51 05       	cpc	r21, r1
 7fe:	80 f0       	brcs	.+32     	; 0x820 <__mulsf3_pse+0xa0>
 800:	0c 94 59 03 	jmp	0x6b2	; 0x6b2 <__fp_inf>
 804:	0c 94 a4 03 	jmp	0x748	; 0x748 <__fp_szero>
 808:	5f 3f       	cpi	r21, 0xFF	; 255
 80a:	e4 f3       	brlt	.-8      	; 0x804 <__mulsf3_pse+0x84>
 80c:	98 3e       	cpi	r25, 0xE8	; 232
 80e:	d4 f3       	brlt	.-12     	; 0x804 <__mulsf3_pse+0x84>
 810:	86 95       	lsr	r24
 812:	77 95       	ror	r23
 814:	67 95       	ror	r22
 816:	b7 95       	ror	r27
 818:	f7 95       	ror	r31
 81a:	e7 95       	ror	r30
 81c:	9f 5f       	subi	r25, 0xFF	; 255
 81e:	c1 f7       	brne	.-16     	; 0x810 <__mulsf3_pse+0x90>
 820:	fe 2b       	or	r31, r30
 822:	88 0f       	add	r24, r24
 824:	91 1d       	adc	r25, r1
 826:	96 95       	lsr	r25
 828:	87 95       	ror	r24
 82a:	97 f9       	bld	r25, 7
 82c:	08 95       	ret

0000082e <__umulhisi3>:
 82e:	a2 9f       	mul	r26, r18
 830:	b0 01       	movw	r22, r0
 832:	b3 9f       	mul	r27, r19
 834:	c0 01       	movw	r24, r0
 836:	a3 9f       	mul	r26, r19
 838:	70 0d       	add	r23, r0
 83a:	81 1d       	adc	r24, r1
 83c:	11 24       	eor	r1, r1
 83e:	91 1d       	adc	r25, r1
 840:	b2 9f       	mul	r27, r18
 842:	70 0d       	add	r23, r0
 844:	81 1d       	adc	r24, r1
 846:	11 24       	eor	r1, r1
 848:	91 1d       	adc	r25, r1
 84a:	08 95       	ret

0000084c <sprintf>:
 84c:	ae e0       	ldi	r26, 0x0E	; 14
 84e:	b0 e0       	ldi	r27, 0x00	; 0
 850:	ec e2       	ldi	r30, 0x2C	; 44
 852:	f4 e0       	ldi	r31, 0x04	; 4
 854:	0c 94 d5 06 	jmp	0xdaa	; 0xdaa <__prologue_saves__+0x1c>
 858:	0d 89       	ldd	r16, Y+21	; 0x15
 85a:	1e 89       	ldd	r17, Y+22	; 0x16
 85c:	86 e0       	ldi	r24, 0x06	; 6
 85e:	8c 83       	std	Y+4, r24	; 0x04
 860:	1a 83       	std	Y+2, r17	; 0x02
 862:	09 83       	std	Y+1, r16	; 0x01
 864:	8f ef       	ldi	r24, 0xFF	; 255
 866:	9f e7       	ldi	r25, 0x7F	; 127
 868:	9e 83       	std	Y+6, r25	; 0x06
 86a:	8d 83       	std	Y+5, r24	; 0x05
 86c:	ae 01       	movw	r20, r28
 86e:	47 5e       	subi	r20, 0xE7	; 231
 870:	5f 4f       	sbci	r21, 0xFF	; 255
 872:	6f 89       	ldd	r22, Y+23	; 0x17
 874:	78 8d       	ldd	r23, Y+24	; 0x18
 876:	ce 01       	movw	r24, r28
 878:	01 96       	adiw	r24, 0x01	; 1
 87a:	0e 94 49 04 	call	0x892	; 0x892 <vfprintf>
 87e:	2f 81       	ldd	r18, Y+7	; 0x07
 880:	38 85       	ldd	r19, Y+8	; 0x08
 882:	f8 01       	movw	r30, r16
 884:	e2 0f       	add	r30, r18
 886:	f3 1f       	adc	r31, r19
 888:	10 82       	st	Z, r1
 88a:	2e 96       	adiw	r28, 0x0e	; 14
 88c:	e4 e0       	ldi	r30, 0x04	; 4
 88e:	0c 94 f1 06 	jmp	0xde2	; 0xde2 <__epilogue_restores__+0x1c>

00000892 <vfprintf>:
 892:	ac e0       	ldi	r26, 0x0C	; 12
 894:	b0 e0       	ldi	r27, 0x00	; 0
 896:	ef e4       	ldi	r30, 0x4F	; 79
 898:	f4 e0       	ldi	r31, 0x04	; 4
 89a:	0c 94 c7 06 	jmp	0xd8e	; 0xd8e <__prologue_saves__>
 89e:	7c 01       	movw	r14, r24
 8a0:	6b 01       	movw	r12, r22
 8a2:	8a 01       	movw	r16, r20
 8a4:	fc 01       	movw	r30, r24
 8a6:	17 82       	std	Z+7, r1	; 0x07
 8a8:	16 82       	std	Z+6, r1	; 0x06
 8aa:	83 81       	ldd	r24, Z+3	; 0x03
 8ac:	81 ff       	sbrs	r24, 1
 8ae:	bd c1       	rjmp	.+890    	; 0xc2a <__stack+0x32b>
 8b0:	ce 01       	movw	r24, r28
 8b2:	01 96       	adiw	r24, 0x01	; 1
 8b4:	4c 01       	movw	r8, r24
 8b6:	f7 01       	movw	r30, r14
 8b8:	93 81       	ldd	r25, Z+3	; 0x03
 8ba:	f6 01       	movw	r30, r12
 8bc:	93 fd       	sbrc	r25, 3
 8be:	85 91       	lpm	r24, Z+
 8c0:	93 ff       	sbrs	r25, 3
 8c2:	81 91       	ld	r24, Z+
 8c4:	6f 01       	movw	r12, r30
 8c6:	88 23       	and	r24, r24
 8c8:	09 f4       	brne	.+2      	; 0x8cc <vfprintf+0x3a>
 8ca:	ab c1       	rjmp	.+854    	; 0xc22 <__stack+0x323>
 8cc:	85 32       	cpi	r24, 0x25	; 37
 8ce:	39 f4       	brne	.+14     	; 0x8de <vfprintf+0x4c>
 8d0:	93 fd       	sbrc	r25, 3
 8d2:	85 91       	lpm	r24, Z+
 8d4:	93 ff       	sbrs	r25, 3
 8d6:	81 91       	ld	r24, Z+
 8d8:	6f 01       	movw	r12, r30
 8da:	85 32       	cpi	r24, 0x25	; 37
 8dc:	29 f4       	brne	.+10     	; 0x8e8 <vfprintf+0x56>
 8de:	b7 01       	movw	r22, r14
 8e0:	90 e0       	ldi	r25, 0x00	; 0
 8e2:	0e 94 31 06 	call	0xc62	; 0xc62 <fputc>
 8e6:	e7 cf       	rjmp	.-50     	; 0x8b6 <vfprintf+0x24>
 8e8:	51 2c       	mov	r5, r1
 8ea:	31 2c       	mov	r3, r1
 8ec:	20 e0       	ldi	r18, 0x00	; 0
 8ee:	20 32       	cpi	r18, 0x20	; 32
 8f0:	a0 f4       	brcc	.+40     	; 0x91a <__stack+0x1b>
 8f2:	8b 32       	cpi	r24, 0x2B	; 43
 8f4:	69 f0       	breq	.+26     	; 0x910 <__stack+0x11>
 8f6:	30 f4       	brcc	.+12     	; 0x904 <__stack+0x5>
 8f8:	80 32       	cpi	r24, 0x20	; 32
 8fa:	59 f0       	breq	.+22     	; 0x912 <__stack+0x13>
 8fc:	83 32       	cpi	r24, 0x23	; 35
 8fe:	69 f4       	brne	.+26     	; 0x91a <__stack+0x1b>
 900:	20 61       	ori	r18, 0x10	; 16
 902:	2c c0       	rjmp	.+88     	; 0x95c <__stack+0x5d>
 904:	8d 32       	cpi	r24, 0x2D	; 45
 906:	39 f0       	breq	.+14     	; 0x916 <__stack+0x17>
 908:	80 33       	cpi	r24, 0x30	; 48
 90a:	39 f4       	brne	.+14     	; 0x91a <__stack+0x1b>
 90c:	21 60       	ori	r18, 0x01	; 1
 90e:	26 c0       	rjmp	.+76     	; 0x95c <__stack+0x5d>
 910:	22 60       	ori	r18, 0x02	; 2
 912:	24 60       	ori	r18, 0x04	; 4
 914:	23 c0       	rjmp	.+70     	; 0x95c <__stack+0x5d>
 916:	28 60       	ori	r18, 0x08	; 8
 918:	21 c0       	rjmp	.+66     	; 0x95c <__stack+0x5d>
 91a:	27 fd       	sbrc	r18, 7
 91c:	27 c0       	rjmp	.+78     	; 0x96c <__stack+0x6d>
 91e:	30 ed       	ldi	r19, 0xD0	; 208
 920:	38 0f       	add	r19, r24
 922:	3a 30       	cpi	r19, 0x0A	; 10
 924:	78 f4       	brcc	.+30     	; 0x944 <__stack+0x45>
 926:	26 ff       	sbrs	r18, 6
 928:	06 c0       	rjmp	.+12     	; 0x936 <__stack+0x37>
 92a:	fa e0       	ldi	r31, 0x0A	; 10
 92c:	5f 9e       	mul	r5, r31
 92e:	30 0d       	add	r19, r0
 930:	11 24       	eor	r1, r1
 932:	53 2e       	mov	r5, r19
 934:	13 c0       	rjmp	.+38     	; 0x95c <__stack+0x5d>
 936:	8a e0       	ldi	r24, 0x0A	; 10
 938:	38 9e       	mul	r3, r24
 93a:	30 0d       	add	r19, r0
 93c:	11 24       	eor	r1, r1
 93e:	33 2e       	mov	r3, r19
 940:	20 62       	ori	r18, 0x20	; 32
 942:	0c c0       	rjmp	.+24     	; 0x95c <__stack+0x5d>
 944:	8e 32       	cpi	r24, 0x2E	; 46
 946:	21 f4       	brne	.+8      	; 0x950 <__stack+0x51>
 948:	26 fd       	sbrc	r18, 6
 94a:	6b c1       	rjmp	.+726    	; 0xc22 <__stack+0x323>
 94c:	20 64       	ori	r18, 0x40	; 64
 94e:	06 c0       	rjmp	.+12     	; 0x95c <__stack+0x5d>
 950:	8c 36       	cpi	r24, 0x6C	; 108
 952:	11 f4       	brne	.+4      	; 0x958 <__stack+0x59>
 954:	20 68       	ori	r18, 0x80	; 128
 956:	02 c0       	rjmp	.+4      	; 0x95c <__stack+0x5d>
 958:	88 36       	cpi	r24, 0x68	; 104
 95a:	41 f4       	brne	.+16     	; 0x96c <__stack+0x6d>
 95c:	f6 01       	movw	r30, r12
 95e:	93 fd       	sbrc	r25, 3
 960:	85 91       	lpm	r24, Z+
 962:	93 ff       	sbrs	r25, 3
 964:	81 91       	ld	r24, Z+
 966:	6f 01       	movw	r12, r30
 968:	81 11       	cpse	r24, r1
 96a:	c1 cf       	rjmp	.-126    	; 0x8ee <vfprintf+0x5c>
 96c:	98 2f       	mov	r25, r24
 96e:	9f 7d       	andi	r25, 0xDF	; 223
 970:	95 54       	subi	r25, 0x45	; 69
 972:	93 30       	cpi	r25, 0x03	; 3
 974:	28 f4       	brcc	.+10     	; 0x980 <__stack+0x81>
 976:	0c 5f       	subi	r16, 0xFC	; 252
 978:	1f 4f       	sbci	r17, 0xFF	; 255
 97a:	ff e3       	ldi	r31, 0x3F	; 63
 97c:	f9 83       	std	Y+1, r31	; 0x01
 97e:	0d c0       	rjmp	.+26     	; 0x99a <__stack+0x9b>
 980:	83 36       	cpi	r24, 0x63	; 99
 982:	31 f0       	breq	.+12     	; 0x990 <__stack+0x91>
 984:	83 37       	cpi	r24, 0x73	; 115
 986:	71 f0       	breq	.+28     	; 0x9a4 <__stack+0xa5>
 988:	83 35       	cpi	r24, 0x53	; 83
 98a:	09 f0       	breq	.+2      	; 0x98e <__stack+0x8f>
 98c:	5b c0       	rjmp	.+182    	; 0xa44 <__stack+0x145>
 98e:	22 c0       	rjmp	.+68     	; 0x9d4 <__stack+0xd5>
 990:	f8 01       	movw	r30, r16
 992:	80 81       	ld	r24, Z
 994:	89 83       	std	Y+1, r24	; 0x01
 996:	0e 5f       	subi	r16, 0xFE	; 254
 998:	1f 4f       	sbci	r17, 0xFF	; 255
 99a:	44 24       	eor	r4, r4
 99c:	43 94       	inc	r4
 99e:	51 2c       	mov	r5, r1
 9a0:	54 01       	movw	r10, r8
 9a2:	15 c0       	rjmp	.+42     	; 0x9ce <__stack+0xcf>
 9a4:	38 01       	movw	r6, r16
 9a6:	f2 e0       	ldi	r31, 0x02	; 2
 9a8:	6f 0e       	add	r6, r31
 9aa:	71 1c       	adc	r7, r1
 9ac:	f8 01       	movw	r30, r16
 9ae:	a0 80       	ld	r10, Z
 9b0:	b1 80       	ldd	r11, Z+1	; 0x01
 9b2:	26 ff       	sbrs	r18, 6
 9b4:	03 c0       	rjmp	.+6      	; 0x9bc <__stack+0xbd>
 9b6:	65 2d       	mov	r22, r5
 9b8:	70 e0       	ldi	r23, 0x00	; 0
 9ba:	02 c0       	rjmp	.+4      	; 0x9c0 <__stack+0xc1>
 9bc:	6f ef       	ldi	r22, 0xFF	; 255
 9be:	7f ef       	ldi	r23, 0xFF	; 255
 9c0:	c5 01       	movw	r24, r10
 9c2:	2c 87       	std	Y+12, r18	; 0x0c
 9c4:	0e 94 26 06 	call	0xc4c	; 0xc4c <strnlen>
 9c8:	2c 01       	movw	r4, r24
 9ca:	83 01       	movw	r16, r6
 9cc:	2c 85       	ldd	r18, Y+12	; 0x0c
 9ce:	2f 77       	andi	r18, 0x7F	; 127
 9d0:	22 2e       	mov	r2, r18
 9d2:	17 c0       	rjmp	.+46     	; 0xa02 <__stack+0x103>
 9d4:	38 01       	movw	r6, r16
 9d6:	f2 e0       	ldi	r31, 0x02	; 2
 9d8:	6f 0e       	add	r6, r31
 9da:	71 1c       	adc	r7, r1
 9dc:	f8 01       	movw	r30, r16
 9de:	a0 80       	ld	r10, Z
 9e0:	b1 80       	ldd	r11, Z+1	; 0x01
 9e2:	26 ff       	sbrs	r18, 6
 9e4:	03 c0       	rjmp	.+6      	; 0x9ec <__stack+0xed>
 9e6:	65 2d       	mov	r22, r5
 9e8:	70 e0       	ldi	r23, 0x00	; 0
 9ea:	02 c0       	rjmp	.+4      	; 0x9f0 <__stack+0xf1>
 9ec:	6f ef       	ldi	r22, 0xFF	; 255
 9ee:	7f ef       	ldi	r23, 0xFF	; 255
 9f0:	c5 01       	movw	r24, r10
 9f2:	2c 87       	std	Y+12, r18	; 0x0c
 9f4:	0e 94 1b 06 	call	0xc36	; 0xc36 <strnlen_P>
 9f8:	2c 01       	movw	r4, r24
 9fa:	2c 85       	ldd	r18, Y+12	; 0x0c
 9fc:	20 68       	ori	r18, 0x80	; 128
 9fe:	22 2e       	mov	r2, r18
 a00:	83 01       	movw	r16, r6
 a02:	23 fc       	sbrc	r2, 3
 a04:	1b c0       	rjmp	.+54     	; 0xa3c <__stack+0x13d>
 a06:	83 2d       	mov	r24, r3
 a08:	90 e0       	ldi	r25, 0x00	; 0
 a0a:	48 16       	cp	r4, r24
 a0c:	59 06       	cpc	r5, r25
 a0e:	b0 f4       	brcc	.+44     	; 0xa3c <__stack+0x13d>
 a10:	b7 01       	movw	r22, r14
 a12:	80 e2       	ldi	r24, 0x20	; 32
 a14:	90 e0       	ldi	r25, 0x00	; 0
 a16:	0e 94 31 06 	call	0xc62	; 0xc62 <fputc>
 a1a:	3a 94       	dec	r3
 a1c:	f4 cf       	rjmp	.-24     	; 0xa06 <__stack+0x107>
 a1e:	f5 01       	movw	r30, r10
 a20:	27 fc       	sbrc	r2, 7
 a22:	85 91       	lpm	r24, Z+
 a24:	27 fe       	sbrs	r2, 7
 a26:	81 91       	ld	r24, Z+
 a28:	5f 01       	movw	r10, r30
 a2a:	b7 01       	movw	r22, r14
 a2c:	90 e0       	ldi	r25, 0x00	; 0
 a2e:	0e 94 31 06 	call	0xc62	; 0xc62 <fputc>
 a32:	31 10       	cpse	r3, r1
 a34:	3a 94       	dec	r3
 a36:	f1 e0       	ldi	r31, 0x01	; 1
 a38:	4f 1a       	sub	r4, r31
 a3a:	51 08       	sbc	r5, r1
 a3c:	41 14       	cp	r4, r1
 a3e:	51 04       	cpc	r5, r1
 a40:	71 f7       	brne	.-36     	; 0xa1e <__stack+0x11f>
 a42:	e5 c0       	rjmp	.+458    	; 0xc0e <__stack+0x30f>
 a44:	84 36       	cpi	r24, 0x64	; 100
 a46:	11 f0       	breq	.+4      	; 0xa4c <__stack+0x14d>
 a48:	89 36       	cpi	r24, 0x69	; 105
 a4a:	39 f5       	brne	.+78     	; 0xa9a <__stack+0x19b>
 a4c:	f8 01       	movw	r30, r16
 a4e:	27 ff       	sbrs	r18, 7
 a50:	07 c0       	rjmp	.+14     	; 0xa60 <__stack+0x161>
 a52:	60 81       	ld	r22, Z
 a54:	71 81       	ldd	r23, Z+1	; 0x01
 a56:	82 81       	ldd	r24, Z+2	; 0x02
 a58:	93 81       	ldd	r25, Z+3	; 0x03
 a5a:	0c 5f       	subi	r16, 0xFC	; 252
 a5c:	1f 4f       	sbci	r17, 0xFF	; 255
 a5e:	08 c0       	rjmp	.+16     	; 0xa70 <__stack+0x171>
 a60:	60 81       	ld	r22, Z
 a62:	71 81       	ldd	r23, Z+1	; 0x01
 a64:	07 2e       	mov	r0, r23
 a66:	00 0c       	add	r0, r0
 a68:	88 0b       	sbc	r24, r24
 a6a:	99 0b       	sbc	r25, r25
 a6c:	0e 5f       	subi	r16, 0xFE	; 254
 a6e:	1f 4f       	sbci	r17, 0xFF	; 255
 a70:	2f 76       	andi	r18, 0x6F	; 111
 a72:	72 2e       	mov	r7, r18
 a74:	97 ff       	sbrs	r25, 7
 a76:	09 c0       	rjmp	.+18     	; 0xa8a <__stack+0x18b>
 a78:	90 95       	com	r25
 a7a:	80 95       	com	r24
 a7c:	70 95       	com	r23
 a7e:	61 95       	neg	r22
 a80:	7f 4f       	sbci	r23, 0xFF	; 255
 a82:	8f 4f       	sbci	r24, 0xFF	; 255
 a84:	9f 4f       	sbci	r25, 0xFF	; 255
 a86:	20 68       	ori	r18, 0x80	; 128
 a88:	72 2e       	mov	r7, r18
 a8a:	2a e0       	ldi	r18, 0x0A	; 10
 a8c:	30 e0       	ldi	r19, 0x00	; 0
 a8e:	a4 01       	movw	r20, r8
 a90:	0e 94 69 06 	call	0xcd2	; 0xcd2 <__ultoa_invert>
 a94:	a8 2e       	mov	r10, r24
 a96:	a8 18       	sub	r10, r8
 a98:	44 c0       	rjmp	.+136    	; 0xb22 <__stack+0x223>
 a9a:	85 37       	cpi	r24, 0x75	; 117
 a9c:	29 f4       	brne	.+10     	; 0xaa8 <__stack+0x1a9>
 a9e:	2f 7e       	andi	r18, 0xEF	; 239
 aa0:	b2 2e       	mov	r11, r18
 aa2:	2a e0       	ldi	r18, 0x0A	; 10
 aa4:	30 e0       	ldi	r19, 0x00	; 0
 aa6:	25 c0       	rjmp	.+74     	; 0xaf2 <__stack+0x1f3>
 aa8:	f2 2f       	mov	r31, r18
 aaa:	f9 7f       	andi	r31, 0xF9	; 249
 aac:	bf 2e       	mov	r11, r31
 aae:	8f 36       	cpi	r24, 0x6F	; 111
 ab0:	c1 f0       	breq	.+48     	; 0xae2 <__stack+0x1e3>
 ab2:	18 f4       	brcc	.+6      	; 0xaba <__stack+0x1bb>
 ab4:	88 35       	cpi	r24, 0x58	; 88
 ab6:	79 f0       	breq	.+30     	; 0xad6 <__stack+0x1d7>
 ab8:	b4 c0       	rjmp	.+360    	; 0xc22 <__stack+0x323>
 aba:	80 37       	cpi	r24, 0x70	; 112
 abc:	19 f0       	breq	.+6      	; 0xac4 <__stack+0x1c5>
 abe:	88 37       	cpi	r24, 0x78	; 120
 ac0:	21 f0       	breq	.+8      	; 0xaca <__stack+0x1cb>
 ac2:	af c0       	rjmp	.+350    	; 0xc22 <__stack+0x323>
 ac4:	2f 2f       	mov	r18, r31
 ac6:	20 61       	ori	r18, 0x10	; 16
 ac8:	b2 2e       	mov	r11, r18
 aca:	b4 fe       	sbrs	r11, 4
 acc:	0d c0       	rjmp	.+26     	; 0xae8 <__stack+0x1e9>
 ace:	8b 2d       	mov	r24, r11
 ad0:	84 60       	ori	r24, 0x04	; 4
 ad2:	b8 2e       	mov	r11, r24
 ad4:	09 c0       	rjmp	.+18     	; 0xae8 <__stack+0x1e9>
 ad6:	24 ff       	sbrs	r18, 4
 ad8:	0a c0       	rjmp	.+20     	; 0xaee <__stack+0x1ef>
 ada:	9f 2f       	mov	r25, r31
 adc:	96 60       	ori	r25, 0x06	; 6
 ade:	b9 2e       	mov	r11, r25
 ae0:	06 c0       	rjmp	.+12     	; 0xaee <__stack+0x1ef>
 ae2:	28 e0       	ldi	r18, 0x08	; 8
 ae4:	30 e0       	ldi	r19, 0x00	; 0
 ae6:	05 c0       	rjmp	.+10     	; 0xaf2 <__stack+0x1f3>
 ae8:	20 e1       	ldi	r18, 0x10	; 16
 aea:	30 e0       	ldi	r19, 0x00	; 0
 aec:	02 c0       	rjmp	.+4      	; 0xaf2 <__stack+0x1f3>
 aee:	20 e1       	ldi	r18, 0x10	; 16
 af0:	32 e0       	ldi	r19, 0x02	; 2
 af2:	f8 01       	movw	r30, r16
 af4:	b7 fe       	sbrs	r11, 7
 af6:	07 c0       	rjmp	.+14     	; 0xb06 <__stack+0x207>
 af8:	60 81       	ld	r22, Z
 afa:	71 81       	ldd	r23, Z+1	; 0x01
 afc:	82 81       	ldd	r24, Z+2	; 0x02
 afe:	93 81       	ldd	r25, Z+3	; 0x03
 b00:	0c 5f       	subi	r16, 0xFC	; 252
 b02:	1f 4f       	sbci	r17, 0xFF	; 255
 b04:	06 c0       	rjmp	.+12     	; 0xb12 <__stack+0x213>
 b06:	60 81       	ld	r22, Z
 b08:	71 81       	ldd	r23, Z+1	; 0x01
 b0a:	80 e0       	ldi	r24, 0x00	; 0
 b0c:	90 e0       	ldi	r25, 0x00	; 0
 b0e:	0e 5f       	subi	r16, 0xFE	; 254
 b10:	1f 4f       	sbci	r17, 0xFF	; 255
 b12:	a4 01       	movw	r20, r8
 b14:	0e 94 69 06 	call	0xcd2	; 0xcd2 <__ultoa_invert>
 b18:	a8 2e       	mov	r10, r24
 b1a:	a8 18       	sub	r10, r8
 b1c:	fb 2d       	mov	r31, r11
 b1e:	ff 77       	andi	r31, 0x7F	; 127
 b20:	7f 2e       	mov	r7, r31
 b22:	76 fe       	sbrs	r7, 6
 b24:	0b c0       	rjmp	.+22     	; 0xb3c <__stack+0x23d>
 b26:	37 2d       	mov	r19, r7
 b28:	3e 7f       	andi	r19, 0xFE	; 254
 b2a:	a5 14       	cp	r10, r5
 b2c:	50 f4       	brcc	.+20     	; 0xb42 <__stack+0x243>
 b2e:	74 fe       	sbrs	r7, 4
 b30:	0a c0       	rjmp	.+20     	; 0xb46 <__stack+0x247>
 b32:	72 fc       	sbrc	r7, 2
 b34:	08 c0       	rjmp	.+16     	; 0xb46 <__stack+0x247>
 b36:	37 2d       	mov	r19, r7
 b38:	3e 7e       	andi	r19, 0xEE	; 238
 b3a:	05 c0       	rjmp	.+10     	; 0xb46 <__stack+0x247>
 b3c:	ba 2c       	mov	r11, r10
 b3e:	37 2d       	mov	r19, r7
 b40:	03 c0       	rjmp	.+6      	; 0xb48 <__stack+0x249>
 b42:	ba 2c       	mov	r11, r10
 b44:	01 c0       	rjmp	.+2      	; 0xb48 <__stack+0x249>
 b46:	b5 2c       	mov	r11, r5
 b48:	34 ff       	sbrs	r19, 4
 b4a:	0d c0       	rjmp	.+26     	; 0xb66 <__stack+0x267>
 b4c:	fe 01       	movw	r30, r28
 b4e:	ea 0d       	add	r30, r10
 b50:	f1 1d       	adc	r31, r1
 b52:	80 81       	ld	r24, Z
 b54:	80 33       	cpi	r24, 0x30	; 48
 b56:	11 f4       	brne	.+4      	; 0xb5c <__stack+0x25d>
 b58:	39 7e       	andi	r19, 0xE9	; 233
 b5a:	09 c0       	rjmp	.+18     	; 0xb6e <__stack+0x26f>
 b5c:	32 ff       	sbrs	r19, 2
 b5e:	06 c0       	rjmp	.+12     	; 0xb6c <__stack+0x26d>
 b60:	b3 94       	inc	r11
 b62:	b3 94       	inc	r11
 b64:	04 c0       	rjmp	.+8      	; 0xb6e <__stack+0x26f>
 b66:	83 2f       	mov	r24, r19
 b68:	86 78       	andi	r24, 0x86	; 134
 b6a:	09 f0       	breq	.+2      	; 0xb6e <__stack+0x26f>
 b6c:	b3 94       	inc	r11
 b6e:	33 fd       	sbrc	r19, 3
 b70:	13 c0       	rjmp	.+38     	; 0xb98 <__stack+0x299>
 b72:	30 ff       	sbrs	r19, 0
 b74:	06 c0       	rjmp	.+12     	; 0xb82 <__stack+0x283>
 b76:	5a 2c       	mov	r5, r10
 b78:	b3 14       	cp	r11, r3
 b7a:	18 f4       	brcc	.+6      	; 0xb82 <__stack+0x283>
 b7c:	53 0c       	add	r5, r3
 b7e:	5b 18       	sub	r5, r11
 b80:	b3 2c       	mov	r11, r3
 b82:	b3 14       	cp	r11, r3
 b84:	68 f4       	brcc	.+26     	; 0xba0 <__stack+0x2a1>
 b86:	b7 01       	movw	r22, r14
 b88:	80 e2       	ldi	r24, 0x20	; 32
 b8a:	90 e0       	ldi	r25, 0x00	; 0
 b8c:	3c 87       	std	Y+12, r19	; 0x0c
 b8e:	0e 94 31 06 	call	0xc62	; 0xc62 <fputc>
 b92:	b3 94       	inc	r11
 b94:	3c 85       	ldd	r19, Y+12	; 0x0c
 b96:	f5 cf       	rjmp	.-22     	; 0xb82 <__stack+0x283>
 b98:	b3 14       	cp	r11, r3
 b9a:	10 f4       	brcc	.+4      	; 0xba0 <__stack+0x2a1>
 b9c:	3b 18       	sub	r3, r11
 b9e:	01 c0       	rjmp	.+2      	; 0xba2 <__stack+0x2a3>
 ba0:	31 2c       	mov	r3, r1
 ba2:	34 ff       	sbrs	r19, 4
 ba4:	12 c0       	rjmp	.+36     	; 0xbca <__stack+0x2cb>
 ba6:	b7 01       	movw	r22, r14
 ba8:	80 e3       	ldi	r24, 0x30	; 48
 baa:	90 e0       	ldi	r25, 0x00	; 0
 bac:	3c 87       	std	Y+12, r19	; 0x0c
 bae:	0e 94 31 06 	call	0xc62	; 0xc62 <fputc>
 bb2:	3c 85       	ldd	r19, Y+12	; 0x0c
 bb4:	32 ff       	sbrs	r19, 2
 bb6:	17 c0       	rjmp	.+46     	; 0xbe6 <__stack+0x2e7>
 bb8:	31 fd       	sbrc	r19, 1
 bba:	03 c0       	rjmp	.+6      	; 0xbc2 <__stack+0x2c3>
 bbc:	88 e7       	ldi	r24, 0x78	; 120
 bbe:	90 e0       	ldi	r25, 0x00	; 0
 bc0:	02 c0       	rjmp	.+4      	; 0xbc6 <__stack+0x2c7>
 bc2:	88 e5       	ldi	r24, 0x58	; 88
 bc4:	90 e0       	ldi	r25, 0x00	; 0
 bc6:	b7 01       	movw	r22, r14
 bc8:	0c c0       	rjmp	.+24     	; 0xbe2 <__stack+0x2e3>
 bca:	83 2f       	mov	r24, r19
 bcc:	86 78       	andi	r24, 0x86	; 134
 bce:	59 f0       	breq	.+22     	; 0xbe6 <__stack+0x2e7>
 bd0:	31 ff       	sbrs	r19, 1
 bd2:	02 c0       	rjmp	.+4      	; 0xbd8 <__stack+0x2d9>
 bd4:	8b e2       	ldi	r24, 0x2B	; 43
 bd6:	01 c0       	rjmp	.+2      	; 0xbda <__stack+0x2db>
 bd8:	80 e2       	ldi	r24, 0x20	; 32
 bda:	37 fd       	sbrc	r19, 7
 bdc:	8d e2       	ldi	r24, 0x2D	; 45
 bde:	b7 01       	movw	r22, r14
 be0:	90 e0       	ldi	r25, 0x00	; 0
 be2:	0e 94 31 06 	call	0xc62	; 0xc62 <fputc>
 be6:	a5 14       	cp	r10, r5
 be8:	38 f4       	brcc	.+14     	; 0xbf8 <__stack+0x2f9>
 bea:	b7 01       	movw	r22, r14
 bec:	80 e3       	ldi	r24, 0x30	; 48
 bee:	90 e0       	ldi	r25, 0x00	; 0
 bf0:	0e 94 31 06 	call	0xc62	; 0xc62 <fputc>
 bf4:	5a 94       	dec	r5
 bf6:	f7 cf       	rjmp	.-18     	; 0xbe6 <__stack+0x2e7>
 bf8:	aa 94       	dec	r10
 bfa:	f4 01       	movw	r30, r8
 bfc:	ea 0d       	add	r30, r10
 bfe:	f1 1d       	adc	r31, r1
 c00:	80 81       	ld	r24, Z
 c02:	b7 01       	movw	r22, r14
 c04:	90 e0       	ldi	r25, 0x00	; 0
 c06:	0e 94 31 06 	call	0xc62	; 0xc62 <fputc>
 c0a:	a1 10       	cpse	r10, r1
 c0c:	f5 cf       	rjmp	.-22     	; 0xbf8 <__stack+0x2f9>
 c0e:	33 20       	and	r3, r3
 c10:	09 f4       	brne	.+2      	; 0xc14 <__stack+0x315>
 c12:	51 ce       	rjmp	.-862    	; 0x8b6 <vfprintf+0x24>
 c14:	b7 01       	movw	r22, r14
 c16:	80 e2       	ldi	r24, 0x20	; 32
 c18:	90 e0       	ldi	r25, 0x00	; 0
 c1a:	0e 94 31 06 	call	0xc62	; 0xc62 <fputc>
 c1e:	3a 94       	dec	r3
 c20:	f6 cf       	rjmp	.-20     	; 0xc0e <__stack+0x30f>
 c22:	f7 01       	movw	r30, r14
 c24:	86 81       	ldd	r24, Z+6	; 0x06
 c26:	97 81       	ldd	r25, Z+7	; 0x07
 c28:	02 c0       	rjmp	.+4      	; 0xc2e <__stack+0x32f>
 c2a:	8f ef       	ldi	r24, 0xFF	; 255
 c2c:	9f ef       	ldi	r25, 0xFF	; 255
 c2e:	2c 96       	adiw	r28, 0x0c	; 12
 c30:	e2 e1       	ldi	r30, 0x12	; 18
 c32:	0c 94 e3 06 	jmp	0xdc6	; 0xdc6 <__epilogue_restores__>

00000c36 <strnlen_P>:
 c36:	fc 01       	movw	r30, r24
 c38:	05 90       	lpm	r0, Z+
 c3a:	61 50       	subi	r22, 0x01	; 1
 c3c:	70 40       	sbci	r23, 0x00	; 0
 c3e:	01 10       	cpse	r0, r1
 c40:	d8 f7       	brcc	.-10     	; 0xc38 <strnlen_P+0x2>
 c42:	80 95       	com	r24
 c44:	90 95       	com	r25
 c46:	8e 0f       	add	r24, r30
 c48:	9f 1f       	adc	r25, r31
 c4a:	08 95       	ret

00000c4c <strnlen>:
 c4c:	fc 01       	movw	r30, r24
 c4e:	61 50       	subi	r22, 0x01	; 1
 c50:	70 40       	sbci	r23, 0x00	; 0
 c52:	01 90       	ld	r0, Z+
 c54:	01 10       	cpse	r0, r1
 c56:	d8 f7       	brcc	.-10     	; 0xc4e <strnlen+0x2>
 c58:	80 95       	com	r24
 c5a:	90 95       	com	r25
 c5c:	8e 0f       	add	r24, r30
 c5e:	9f 1f       	adc	r25, r31
 c60:	08 95       	ret

00000c62 <fputc>:
 c62:	0f 93       	push	r16
 c64:	1f 93       	push	r17
 c66:	cf 93       	push	r28
 c68:	df 93       	push	r29
 c6a:	fb 01       	movw	r30, r22
 c6c:	23 81       	ldd	r18, Z+3	; 0x03
 c6e:	21 fd       	sbrc	r18, 1
 c70:	03 c0       	rjmp	.+6      	; 0xc78 <fputc+0x16>
 c72:	8f ef       	ldi	r24, 0xFF	; 255
 c74:	9f ef       	ldi	r25, 0xFF	; 255
 c76:	28 c0       	rjmp	.+80     	; 0xcc8 <fputc+0x66>
 c78:	22 ff       	sbrs	r18, 2
 c7a:	16 c0       	rjmp	.+44     	; 0xca8 <fputc+0x46>
 c7c:	46 81       	ldd	r20, Z+6	; 0x06
 c7e:	57 81       	ldd	r21, Z+7	; 0x07
 c80:	24 81       	ldd	r18, Z+4	; 0x04
 c82:	35 81       	ldd	r19, Z+5	; 0x05
 c84:	42 17       	cp	r20, r18
 c86:	53 07       	cpc	r21, r19
 c88:	44 f4       	brge	.+16     	; 0xc9a <fputc+0x38>
 c8a:	a0 81       	ld	r26, Z
 c8c:	b1 81       	ldd	r27, Z+1	; 0x01
 c8e:	9d 01       	movw	r18, r26
 c90:	2f 5f       	subi	r18, 0xFF	; 255
 c92:	3f 4f       	sbci	r19, 0xFF	; 255
 c94:	31 83       	std	Z+1, r19	; 0x01
 c96:	20 83       	st	Z, r18
 c98:	8c 93       	st	X, r24
 c9a:	26 81       	ldd	r18, Z+6	; 0x06
 c9c:	37 81       	ldd	r19, Z+7	; 0x07
 c9e:	2f 5f       	subi	r18, 0xFF	; 255
 ca0:	3f 4f       	sbci	r19, 0xFF	; 255
 ca2:	37 83       	std	Z+7, r19	; 0x07
 ca4:	26 83       	std	Z+6, r18	; 0x06
 ca6:	10 c0       	rjmp	.+32     	; 0xcc8 <fputc+0x66>
 ca8:	eb 01       	movw	r28, r22
 caa:	09 2f       	mov	r16, r25
 cac:	18 2f       	mov	r17, r24
 cae:	00 84       	ldd	r0, Z+8	; 0x08
 cb0:	f1 85       	ldd	r31, Z+9	; 0x09
 cb2:	e0 2d       	mov	r30, r0
 cb4:	09 95       	icall
 cb6:	89 2b       	or	r24, r25
 cb8:	e1 f6       	brne	.-72     	; 0xc72 <fputc+0x10>
 cba:	8e 81       	ldd	r24, Y+6	; 0x06
 cbc:	9f 81       	ldd	r25, Y+7	; 0x07
 cbe:	01 96       	adiw	r24, 0x01	; 1
 cc0:	9f 83       	std	Y+7, r25	; 0x07
 cc2:	8e 83       	std	Y+6, r24	; 0x06
 cc4:	81 2f       	mov	r24, r17
 cc6:	90 2f       	mov	r25, r16
 cc8:	df 91       	pop	r29
 cca:	cf 91       	pop	r28
 ccc:	1f 91       	pop	r17
 cce:	0f 91       	pop	r16
 cd0:	08 95       	ret

00000cd2 <__ultoa_invert>:
 cd2:	fa 01       	movw	r30, r20
 cd4:	aa 27       	eor	r26, r26
 cd6:	28 30       	cpi	r18, 0x08	; 8
 cd8:	51 f1       	breq	.+84     	; 0xd2e <__ultoa_invert+0x5c>
 cda:	20 31       	cpi	r18, 0x10	; 16
 cdc:	81 f1       	breq	.+96     	; 0xd3e <__ultoa_invert+0x6c>
 cde:	e8 94       	clt
 ce0:	6f 93       	push	r22
 ce2:	6e 7f       	andi	r22, 0xFE	; 254
 ce4:	6e 5f       	subi	r22, 0xFE	; 254
 ce6:	7f 4f       	sbci	r23, 0xFF	; 255
 ce8:	8f 4f       	sbci	r24, 0xFF	; 255
 cea:	9f 4f       	sbci	r25, 0xFF	; 255
 cec:	af 4f       	sbci	r26, 0xFF	; 255
 cee:	b1 e0       	ldi	r27, 0x01	; 1
 cf0:	3e d0       	rcall	.+124    	; 0xd6e <__ultoa_invert+0x9c>
 cf2:	b4 e0       	ldi	r27, 0x04	; 4
 cf4:	3c d0       	rcall	.+120    	; 0xd6e <__ultoa_invert+0x9c>
 cf6:	67 0f       	add	r22, r23
 cf8:	78 1f       	adc	r23, r24
 cfa:	89 1f       	adc	r24, r25
 cfc:	9a 1f       	adc	r25, r26
 cfe:	a1 1d       	adc	r26, r1
 d00:	68 0f       	add	r22, r24
 d02:	79 1f       	adc	r23, r25
 d04:	8a 1f       	adc	r24, r26
 d06:	91 1d       	adc	r25, r1
 d08:	a1 1d       	adc	r26, r1
 d0a:	6a 0f       	add	r22, r26
 d0c:	71 1d       	adc	r23, r1
 d0e:	81 1d       	adc	r24, r1
 d10:	91 1d       	adc	r25, r1
 d12:	a1 1d       	adc	r26, r1
 d14:	20 d0       	rcall	.+64     	; 0xd56 <__ultoa_invert+0x84>
 d16:	09 f4       	brne	.+2      	; 0xd1a <__ultoa_invert+0x48>
 d18:	68 94       	set
 d1a:	3f 91       	pop	r19
 d1c:	2a e0       	ldi	r18, 0x0A	; 10
 d1e:	26 9f       	mul	r18, r22
 d20:	11 24       	eor	r1, r1
 d22:	30 19       	sub	r19, r0
 d24:	30 5d       	subi	r19, 0xD0	; 208
 d26:	31 93       	st	Z+, r19
 d28:	de f6       	brtc	.-74     	; 0xce0 <__ultoa_invert+0xe>
 d2a:	cf 01       	movw	r24, r30
 d2c:	08 95       	ret
 d2e:	46 2f       	mov	r20, r22
 d30:	47 70       	andi	r20, 0x07	; 7
 d32:	40 5d       	subi	r20, 0xD0	; 208
 d34:	41 93       	st	Z+, r20
 d36:	b3 e0       	ldi	r27, 0x03	; 3
 d38:	0f d0       	rcall	.+30     	; 0xd58 <__ultoa_invert+0x86>
 d3a:	c9 f7       	brne	.-14     	; 0xd2e <__ultoa_invert+0x5c>
 d3c:	f6 cf       	rjmp	.-20     	; 0xd2a <__ultoa_invert+0x58>
 d3e:	46 2f       	mov	r20, r22
 d40:	4f 70       	andi	r20, 0x0F	; 15
 d42:	40 5d       	subi	r20, 0xD0	; 208
 d44:	4a 33       	cpi	r20, 0x3A	; 58
 d46:	18 f0       	brcs	.+6      	; 0xd4e <__ultoa_invert+0x7c>
 d48:	49 5d       	subi	r20, 0xD9	; 217
 d4a:	31 fd       	sbrc	r19, 1
 d4c:	40 52       	subi	r20, 0x20	; 32
 d4e:	41 93       	st	Z+, r20
 d50:	02 d0       	rcall	.+4      	; 0xd56 <__ultoa_invert+0x84>
 d52:	a9 f7       	brne	.-22     	; 0xd3e <__ultoa_invert+0x6c>
 d54:	ea cf       	rjmp	.-44     	; 0xd2a <__ultoa_invert+0x58>
 d56:	b4 e0       	ldi	r27, 0x04	; 4
 d58:	a6 95       	lsr	r26
 d5a:	97 95       	ror	r25
 d5c:	87 95       	ror	r24
 d5e:	77 95       	ror	r23
 d60:	67 95       	ror	r22
 d62:	ba 95       	dec	r27
 d64:	c9 f7       	brne	.-14     	; 0xd58 <__ultoa_invert+0x86>
 d66:	00 97       	sbiw	r24, 0x00	; 0
 d68:	61 05       	cpc	r22, r1
 d6a:	71 05       	cpc	r23, r1
 d6c:	08 95       	ret
 d6e:	9b 01       	movw	r18, r22
 d70:	ac 01       	movw	r20, r24
 d72:	0a 2e       	mov	r0, r26
 d74:	06 94       	lsr	r0
 d76:	57 95       	ror	r21
 d78:	47 95       	ror	r20
 d7a:	37 95       	ror	r19
 d7c:	27 95       	ror	r18
 d7e:	ba 95       	dec	r27
 d80:	c9 f7       	brne	.-14     	; 0xd74 <__ultoa_invert+0xa2>
 d82:	62 0f       	add	r22, r18
 d84:	73 1f       	adc	r23, r19
 d86:	84 1f       	adc	r24, r20
 d88:	95 1f       	adc	r25, r21
 d8a:	a0 1d       	adc	r26, r0
 d8c:	08 95       	ret

00000d8e <__prologue_saves__>:
 d8e:	2f 92       	push	r2
 d90:	3f 92       	push	r3
 d92:	4f 92       	push	r4
 d94:	5f 92       	push	r5
 d96:	6f 92       	push	r6
 d98:	7f 92       	push	r7
 d9a:	8f 92       	push	r8
 d9c:	9f 92       	push	r9
 d9e:	af 92       	push	r10
 da0:	bf 92       	push	r11
 da2:	cf 92       	push	r12
 da4:	df 92       	push	r13
 da6:	ef 92       	push	r14
 da8:	ff 92       	push	r15
 daa:	0f 93       	push	r16
 dac:	1f 93       	push	r17
 dae:	cf 93       	push	r28
 db0:	df 93       	push	r29
 db2:	cd b7       	in	r28, 0x3d	; 61
 db4:	de b7       	in	r29, 0x3e	; 62
 db6:	ca 1b       	sub	r28, r26
 db8:	db 0b       	sbc	r29, r27
 dba:	0f b6       	in	r0, 0x3f	; 63
 dbc:	f8 94       	cli
 dbe:	de bf       	out	0x3e, r29	; 62
 dc0:	0f be       	out	0x3f, r0	; 63
 dc2:	cd bf       	out	0x3d, r28	; 61
 dc4:	09 94       	ijmp

00000dc6 <__epilogue_restores__>:
 dc6:	2a 88       	ldd	r2, Y+18	; 0x12
 dc8:	39 88       	ldd	r3, Y+17	; 0x11
 dca:	48 88       	ldd	r4, Y+16	; 0x10
 dcc:	5f 84       	ldd	r5, Y+15	; 0x0f
 dce:	6e 84       	ldd	r6, Y+14	; 0x0e
 dd0:	7d 84       	ldd	r7, Y+13	; 0x0d
 dd2:	8c 84       	ldd	r8, Y+12	; 0x0c
 dd4:	9b 84       	ldd	r9, Y+11	; 0x0b
 dd6:	aa 84       	ldd	r10, Y+10	; 0x0a
 dd8:	b9 84       	ldd	r11, Y+9	; 0x09
 dda:	c8 84       	ldd	r12, Y+8	; 0x08
 ddc:	df 80       	ldd	r13, Y+7	; 0x07
 dde:	ee 80       	ldd	r14, Y+6	; 0x06
 de0:	fd 80       	ldd	r15, Y+5	; 0x05
 de2:	0c 81       	ldd	r16, Y+4	; 0x04
 de4:	1b 81       	ldd	r17, Y+3	; 0x03
 de6:	aa 81       	ldd	r26, Y+2	; 0x02
 de8:	b9 81       	ldd	r27, Y+1	; 0x01
 dea:	ce 0f       	add	r28, r30
 dec:	d1 1d       	adc	r29, r1
 dee:	0f b6       	in	r0, 0x3f	; 63
 df0:	f8 94       	cli
 df2:	de bf       	out	0x3e, r29	; 62
 df4:	0f be       	out	0x3f, r0	; 63
 df6:	cd bf       	out	0x3d, r28	; 61
 df8:	ed 01       	movw	r28, r26
 dfa:	08 95       	ret

00000dfc <_exit>:
 dfc:	f8 94       	cli

00000dfe <__stop_program>:
 dfe:	ff cf       	rjmp	.-2      	; 0xdfe <__stop_program>
