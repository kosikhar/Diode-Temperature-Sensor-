
Diode Temp Sensor.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000002a  00800100  000008d2  00000946  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000008d2  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005c  00000000  00000000  00000970  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000009cc  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000e8  00000000  00000000  00000a08  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000011f2  00000000  00000000  00000af0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000aa0  00000000  00000000  00001ce2  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000007bb  00000000  00000000  00002782  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001e0  00000000  00000000  00002f40  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000552  00000000  00000000  00003120  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000691  00000000  00000000  00003672  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000c0  00000000  00000000  00003d03  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   8:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  10:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  54:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e2 ed       	ldi	r30, 0xD2	; 210
  7c:	f8 e0       	ldi	r31, 0x08	; 8
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	aa 32       	cpi	r26, 0x2A	; 42
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>
  8a:	0e 94 79 01 	call	0x2f2	; 0x2f2 <main>
  8e:	0c 94 67 04 	jmp	0x8ce	; 0x8ce <_exit>

00000092 <__bad_interrupt>:
  92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <ADCRead>:

uint16_t ADCRead(uint8_t pin){

	uint16_t input[16]; //We're going to sample and average from 16 readings. 

	PRR &= 0b11111110; //Enable ADC Power
  96:	e4 e6       	ldi	r30, 0x64	; 100
  98:	f0 e0       	ldi	r31, 0x00	; 0
  9a:	90 81       	ld	r25, Z
  9c:	9e 7f       	andi	r25, 0xFE	; 254
  9e:	90 83       	st	Z, r25
	ADCSRB &= 0x00; //Auto Trigger = Free Running mode
  a0:	eb e7       	ldi	r30, 0x7B	; 123
  a2:	f0 e0       	ldi	r31, 0x00	; 0
  a4:	90 81       	ld	r25, Z
  a6:	10 82       	st	Z, r1
	ADCSRA |= (1 << ADEN) | (1 << ADATE) | (1 << ADIE) | ( 1 << ADPS2) | (1 << ADPS1) | (1 << ADPS0); // ADC Enable; Auto Trigger;
  a8:	ea e7       	ldi	r30, 0x7A	; 122
  aa:	f0 e0       	ldi	r31, 0x00	; 0
  ac:	90 81       	ld	r25, Z
  ae:	9f 6a       	ori	r25, 0xAF	; 175
  b0:	90 83       	st	Z, r25
	ADMUX |= (1 << REFS0); //Set reference, AVcc												      // Interupt Enable; Freq/128 
  b2:	ac e7       	ldi	r26, 0x7C	; 124
  b4:	b0 e0       	ldi	r27, 0x00	; 0
  b6:	9c 91       	ld	r25, X
  b8:	90 64       	ori	r25, 0x40	; 64
  ba:	9c 93       	st	X, r25
	ADMUX |= pin; //Set ADC pin
  bc:	9c 91       	ld	r25, X
  be:	89 2b       	or	r24, r25
  c0:	8c 93       	st	X, r24

	uint8_t i;
	for (i = 0x0; i < 16 ; i++){
	
		ADCSRA |= (1 << ADSC); //Start Conversation, 
  c2:	80 81       	ld	r24, Z
  c4:	80 64       	ori	r24, 0x40	; 64
  c6:	80 83       	st	Z, r24

		while( ~(ADCSRA & (1 << ADIF)) ); //Wait till conversation complete
  c8:	80 81       	ld	r24, Z
  ca:	fe cf       	rjmp	.-4      	; 0xc8 <ADCRead+0x32>

000000cc <toggle_e>:

    while ( (c = pgm_read_byte(progmem_s++)) ) {
        lcd_putc(c);
    }

}/* lcd_puts_p */
  cc:	5e 9a       	sbi	0x0b, 6	; 11
  ce:	00 00       	nop
  d0:	5e 98       	cbi	0x0b, 6	; 11
  d2:	08 95       	ret

000000d4 <lcd_write>:
  d4:	cf 93       	push	r28
  d6:	df 93       	push	r29
  d8:	d8 2f       	mov	r29, r24
  da:	66 23       	and	r22, r22
  dc:	11 f0       	breq	.+4      	; 0xe2 <lcd_write+0xe>
  de:	5c 9a       	sbi	0x0b, 4	; 11
  e0:	01 c0       	rjmp	.+2      	; 0xe4 <lcd_write+0x10>
  e2:	5c 98       	cbi	0x0b, 4	; 11
  e4:	5d 98       	cbi	0x0b, 5	; 11
  e6:	8a b1       	in	r24, 0x0a	; 10
  e8:	8f 60       	ori	r24, 0x0F	; 15
  ea:	8a b9       	out	0x0a, r24	; 10
  ec:	cb b1       	in	r28, 0x0b	; 11
  ee:	c0 7f       	andi	r28, 0xF0	; 240
  f0:	8d 2f       	mov	r24, r29
  f2:	82 95       	swap	r24
  f4:	8f 70       	andi	r24, 0x0F	; 15
  f6:	8c 2b       	or	r24, r28
  f8:	8b b9       	out	0x0b, r24	; 11
  fa:	0e 94 66 00 	call	0xcc	; 0xcc <toggle_e>
  fe:	df 70       	andi	r29, 0x0F	; 15
 100:	dc 2b       	or	r29, r28
 102:	db b9       	out	0x0b, r29	; 11
 104:	0e 94 66 00 	call	0xcc	; 0xcc <toggle_e>
 108:	cf 60       	ori	r28, 0x0F	; 15
 10a:	cb b9       	out	0x0b, r28	; 11
 10c:	df 91       	pop	r29
 10e:	cf 91       	pop	r28
 110:	08 95       	ret

00000112 <lcd_read>:
 112:	88 23       	and	r24, r24
 114:	11 f0       	breq	.+4      	; 0x11a <lcd_read+0x8>
 116:	5c 9a       	sbi	0x0b, 4	; 11
 118:	01 c0       	rjmp	.+2      	; 0x11c <lcd_read+0xa>
 11a:	5c 98       	cbi	0x0b, 4	; 11
 11c:	5d 9a       	sbi	0x0b, 5	; 11
 11e:	8a b1       	in	r24, 0x0a	; 10
 120:	80 7f       	andi	r24, 0xF0	; 240
 122:	8a b9       	out	0x0a, r24	; 10
 124:	5e 9a       	sbi	0x0b, 6	; 11
 126:	00 00       	nop
 128:	29 b1       	in	r18, 0x09	; 9
 12a:	5e 98       	cbi	0x0b, 6	; 11
 12c:	00 00       	nop
 12e:	5e 9a       	sbi	0x0b, 6	; 11
 130:	00 00       	nop
 132:	99 b1       	in	r25, 0x09	; 9
 134:	22 95       	swap	r18
 136:	20 7f       	andi	r18, 0xF0	; 240
 138:	89 2f       	mov	r24, r25
 13a:	8f 70       	andi	r24, 0x0F	; 15
 13c:	5e 98       	cbi	0x0b, 6	; 11
 13e:	82 2b       	or	r24, r18
 140:	08 95       	ret

00000142 <lcd_waitbusy>:
 142:	80 e0       	ldi	r24, 0x00	; 0
 144:	0e 94 89 00 	call	0x112	; 0x112 <lcd_read>
 148:	88 23       	and	r24, r24
 14a:	dc f3       	brlt	.-10     	; 0x142 <lcd_waitbusy>
 14c:	00 c0       	rjmp	.+0      	; 0x14e <lcd_waitbusy+0xc>
 14e:	00 c0       	rjmp	.+0      	; 0x150 <lcd_waitbusy+0xe>
 150:	80 e0       	ldi	r24, 0x00	; 0
 152:	0e 94 89 00 	call	0x112	; 0x112 <lcd_read>
 156:	08 95       	ret

00000158 <lcd_command>:
 158:	cf 93       	push	r28
 15a:	c8 2f       	mov	r28, r24
 15c:	0e 94 a1 00 	call	0x142	; 0x142 <lcd_waitbusy>
 160:	60 e0       	ldi	r22, 0x00	; 0
 162:	8c 2f       	mov	r24, r28
 164:	0e 94 6a 00 	call	0xd4	; 0xd4 <lcd_write>
 168:	cf 91       	pop	r28
 16a:	08 95       	ret

0000016c <lcd_gotoxy>:
 16c:	61 11       	cpse	r22, r1
 16e:	04 c0       	rjmp	.+8      	; 0x178 <lcd_gotoxy+0xc>
 170:	80 58       	subi	r24, 0x80	; 128
 172:	0e 94 ac 00 	call	0x158	; 0x158 <lcd_command>
 176:	08 95       	ret
 178:	80 54       	subi	r24, 0x40	; 64
 17a:	0e 94 ac 00 	call	0x158	; 0x158 <lcd_command>
 17e:	08 95       	ret

00000180 <lcd_clrscr>:
 180:	81 e0       	ldi	r24, 0x01	; 1
 182:	0e 94 ac 00 	call	0x158	; 0x158 <lcd_command>
 186:	08 95       	ret

00000188 <lcd_putc>:
 188:	cf 93       	push	r28
 18a:	c8 2f       	mov	r28, r24
 18c:	0e 94 a1 00 	call	0x142	; 0x142 <lcd_waitbusy>
 190:	ca 30       	cpi	r28, 0x0A	; 10
 192:	49 f4       	brne	.+18     	; 0x1a6 <lcd_putc+0x1e>
 194:	80 34       	cpi	r24, 0x40	; 64
 196:	10 f0       	brcs	.+4      	; 0x19c <lcd_putc+0x14>
 198:	80 e0       	ldi	r24, 0x00	; 0
 19a:	01 c0       	rjmp	.+2      	; 0x19e <lcd_putc+0x16>
 19c:	80 e4       	ldi	r24, 0x40	; 64
 19e:	80 58       	subi	r24, 0x80	; 128
 1a0:	0e 94 ac 00 	call	0x158	; 0x158 <lcd_command>
 1a4:	04 c0       	rjmp	.+8      	; 0x1ae <lcd_putc+0x26>
 1a6:	61 e0       	ldi	r22, 0x01	; 1
 1a8:	8c 2f       	mov	r24, r28
 1aa:	0e 94 6a 00 	call	0xd4	; 0xd4 <lcd_write>
 1ae:	cf 91       	pop	r28
 1b0:	08 95       	ret

000001b2 <lcd_puts>:
 1b2:	cf 93       	push	r28
 1b4:	df 93       	push	r29
 1b6:	ec 01       	movw	r28, r24
 1b8:	21 96       	adiw	r28, 0x01	; 1
 1ba:	fc 01       	movw	r30, r24
 1bc:	80 81       	ld	r24, Z
 1be:	88 23       	and	r24, r24
 1c0:	29 f0       	breq	.+10     	; 0x1cc <lcd_puts+0x1a>
 1c2:	0e 94 c4 00 	call	0x188	; 0x188 <lcd_putc>
 1c6:	89 91       	ld	r24, Y+
 1c8:	81 11       	cpse	r24, r1
 1ca:	fb cf       	rjmp	.-10     	; 0x1c2 <lcd_puts+0x10>
 1cc:	df 91       	pop	r29
 1ce:	cf 91       	pop	r28
 1d0:	08 95       	ret

000001d2 <lcd_init>:
                   LCD_DISP_ON_CURSOR      display on, cursor on
                   LCD_DISP_CURSOR_BLINK   display on, cursor on flashing
Returns:  none
*************************************************************************/
void lcd_init(uint8_t dispAttr)
{
 1d2:	cf 93       	push	r28
 1d4:	c8 2f       	mov	r28, r24
      && ( &LCD_RS_PORT == &LCD_DATA0_PORT) && ( &LCD_RW_PORT == &LCD_DATA0_PORT) && (&LCD_E_PORT == &LCD_DATA0_PORT)
      && (LCD_DATA0_PIN == 0 ) && (LCD_DATA1_PIN == 1) && (LCD_DATA2_PIN == 2) && (LCD_DATA3_PIN == 3) 
      && (LCD_RS_PIN == 4 ) && (LCD_RW_PIN == 5) && (LCD_E_PIN == 6 ) )
    {
        /* configure all port bits as output (all LCD lines on same port) */
        DDR(LCD_DATA0_PORT) |= 0x7F;
 1d6:	9a b1       	in	r25, 0x0a	; 10
 1d8:	9f 67       	ori	r25, 0x7F	; 127
 1da:	9a b9       	out	0x0a, r25	; 10
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1dc:	8f e9       	ldi	r24, 0x9F	; 159
 1de:	9f e0       	ldi	r25, 0x0F	; 15
 1e0:	01 97       	sbiw	r24, 0x01	; 1
 1e2:	f1 f7       	brne	.-4      	; 0x1e0 <lcd_init+0xe>
 1e4:	00 c0       	rjmp	.+0      	; 0x1e6 <lcd_init+0x14>
 1e6:	00 00       	nop
        DDR(LCD_DATA3_PORT) |= _BV(LCD_DATA3_PIN);
    }
    delay(LCD_DELAY_BOOTUP);             /* wait 16ms or more after power-on       */
    
    /* initial write to lcd is 8bit */
    LCD_DATA1_PORT |= _BV(LCD_DATA1_PIN);    // LCD_FUNCTION>>4;
 1e8:	59 9a       	sbi	0x0b, 1	; 11
    LCD_DATA0_PORT |= _BV(LCD_DATA0_PIN);    // LCD_FUNCTION_8BIT>>4;
 1ea:	58 9a       	sbi	0x0b, 0	; 11
    lcd_e_toggle();
 1ec:	0e 94 66 00 	call	0xcc	; 0xcc <toggle_e>
 1f0:	81 ee       	ldi	r24, 0xE1	; 225
 1f2:	94 e0       	ldi	r25, 0x04	; 4
 1f4:	01 97       	sbiw	r24, 0x01	; 1
 1f6:	f1 f7       	brne	.-4      	; 0x1f4 <lcd_init+0x22>
 1f8:	00 c0       	rjmp	.+0      	; 0x1fa <lcd_init+0x28>
 1fa:	00 00       	nop
    delay(LCD_DELAY_INIT);               /* delay, busy flag can't be checked here */
   
    /* repeat last command */ 
    lcd_e_toggle();      
 1fc:	0e 94 66 00 	call	0xcc	; 0xcc <toggle_e>
 200:	95 e1       	ldi	r25, 0x15	; 21
 202:	9a 95       	dec	r25
 204:	f1 f7       	brne	.-4      	; 0x202 <lcd_init+0x30>
 206:	00 00       	nop
    delay(LCD_DELAY_INIT_REP);           /* delay, busy flag can't be checked here */
    
    /* repeat last command a third time */
    lcd_e_toggle();      
 208:	0e 94 66 00 	call	0xcc	; 0xcc <toggle_e>
 20c:	85 e1       	ldi	r24, 0x15	; 21
 20e:	8a 95       	dec	r24
 210:	f1 f7       	brne	.-4      	; 0x20e <lcd_init+0x3c>
 212:	00 00       	nop
    delay(LCD_DELAY_INIT_REP);           /* delay, busy flag can't be checked here */

    /* now configure for 4bit mode */
    LCD_DATA0_PORT &= ~_BV(LCD_DATA0_PIN);   // LCD_FUNCTION_4BIT_1LINE>>4
 214:	58 98       	cbi	0x0b, 0	; 11
    lcd_e_toggle();
 216:	0e 94 66 00 	call	0xcc	; 0xcc <toggle_e>
 21a:	95 e1       	ldi	r25, 0x15	; 21
 21c:	9a 95       	dec	r25
 21e:	f1 f7       	brne	.-4      	; 0x21c <lcd_init+0x4a>
 220:	00 00       	nop
    /* Display with KS0073 controller requires special commands for enabling 4 line mode */
	lcd_command(KS0073_EXTENDED_FUNCTION_REGISTER_ON);
	lcd_command(KS0073_4LINES_MODE);
	lcd_command(KS0073_EXTENDED_FUNCTION_REGISTER_OFF);
#else
    lcd_command(LCD_FUNCTION_DEFAULT);      /* function set: display lines  */
 222:	88 e2       	ldi	r24, 0x28	; 40
 224:	0e 94 ac 00 	call	0x158	; 0x158 <lcd_command>
#endif
    lcd_command(LCD_DISP_OFF);              /* display off                  */
 228:	88 e0       	ldi	r24, 0x08	; 8
 22a:	0e 94 ac 00 	call	0x158	; 0x158 <lcd_command>
    lcd_clrscr();                           /* display clear                */ 
 22e:	0e 94 c0 00 	call	0x180	; 0x180 <lcd_clrscr>
    lcd_command(LCD_MODE_DEFAULT);          /* set entry mode               */
 232:	86 e0       	ldi	r24, 0x06	; 6
 234:	0e 94 ac 00 	call	0x158	; 0x158 <lcd_command>
    lcd_command(dispAttr);                  /* display/cursor control       */
 238:	8c 2f       	mov	r24, r28
 23a:	0e 94 ac 00 	call	0x158	; 0x158 <lcd_command>

}/* lcd_init */
 23e:	cf 91       	pop	r28
 240:	08 95       	ret

00000242 <lcd_write>:
  lcd_write takes in 4 values.  
  
 ***************************************
 */

 void lcd_write( uint16_t adc_reading_lm35, uint16_t adc_reading_diode, uint8_t temperture_lm35, uint8_t temperture_diode ){  //Not Tested
 242:	cf 92       	push	r12
 244:	df 92       	push	r13
 246:	ef 92       	push	r14
 248:	ff 92       	push	r15
 24a:	0f 93       	push	r16
 24c:	1f 93       	push	r17
 24e:	cf 93       	push	r28
 250:	df 93       	push	r29
 252:	cd b7       	in	r28, 0x3d	; 61
 254:	de b7       	in	r29, 0x3e	; 62
 256:	c0 54       	subi	r28, 0x40	; 64
 258:	d1 09       	sbc	r29, r1
 25a:	0f b6       	in	r0, 0x3f	; 63
 25c:	f8 94       	cli
 25e:	de bf       	out	0x3e, r29	; 62
 260:	0f be       	out	0x3f, r0	; 63
 262:	cd bf       	out	0x3d, r28	; 61
 264:	e8 2e       	mov	r14, r24
 266:	d9 2e       	mov	r13, r25
 268:	16 2f       	mov	r17, r22
 26a:	07 2f       	mov	r16, r23
 26c:	c4 2e       	mov	r12, r20
 26e:	f2 2e       	mov	r15, r18

	lcd_init( LCD_DISP_ON_CURSOR );   //Turn the LCD on, with cursor.
 270:	8e e0       	ldi	r24, 0x0E	; 14
 272:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <lcd_init>
	
	lcd_clrscr(); //Clear screen then send cursor to "home" (0,0)
 276:	0e 94 c0 00 	call	0x180	; 0x180 <lcd_clrscr>
	if ( (display_line1 == NULL) || (display_line2 == NULL) ){
		char * error = "error"; 
		lcd_puts(error);
	}
	
	*display_line1 = sprintf("LM35 :%4.0d - %2.0dC", adc_reading_lm35, temperture_lm35);     //First line on the LCD
 27a:	1f 92       	push	r1
 27c:	cf 92       	push	r12
 27e:	df 92       	push	r13
 280:	ef 92       	push	r14
 282:	80 e0       	ldi	r24, 0x00	; 0
 284:	91 e0       	ldi	r25, 0x01	; 1
 286:	9f 93       	push	r25
 288:	8f 93       	push	r24
 28a:	0e 94 8f 01 	call	0x31e	; 0x31e <sprintf>
 28e:	9a 83       	std	Y+2, r25	; 0x02
 290:	89 83       	std	Y+1, r24	; 0x01
	*display_line2 = sprintf("DIODE:%4.0d - %2.0dC", adc_reading_diode, temperture_diode);   //Second line on the LCD
 292:	1f 92       	push	r1
 294:	ff 92       	push	r15
 296:	0f 93       	push	r16
 298:	1f 93       	push	r17
 29a:	85 e1       	ldi	r24, 0x15	; 21
 29c:	91 e0       	ldi	r25, 0x01	; 1
 29e:	9f 93       	push	r25
 2a0:	8f 93       	push	r24
 2a2:	0e 94 8f 01 	call	0x31e	; 0x31e <sprintf>
 2a6:	9a a3       	std	Y+34, r25	; 0x22
 2a8:	89 a3       	std	Y+33, r24	; 0x21

	lcd_puts( display_line1 );               //display line 1
 2aa:	ce 01       	movw	r24, r28
 2ac:	01 96       	adiw	r24, 0x01	; 1
 2ae:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <lcd_puts>
	lcd_gotoxy((uint8_t) 0x0, (uint8_t) 0x1);    //Move cursor to the second line
 2b2:	61 e0       	ldi	r22, 0x01	; 1
 2b4:	80 e0       	ldi	r24, 0x00	; 0
 2b6:	0e 94 b6 00 	call	0x16c	; 0x16c <lcd_gotoxy>
	lcd_puts( display_line2 );                //display line 2
 2ba:	ce 01       	movw	r24, r28
 2bc:	81 96       	adiw	r24, 0x21	; 33
 2be:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <lcd_puts>
	
	lcd_init( LCD_DISP_ON );        //LCD already is on, but this gets rid of the cursor (*I think). 
 2c2:	8c e0       	ldi	r24, 0x0C	; 12
 2c4:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <lcd_init>
 2c8:	0f b6       	in	r0, 0x3f	; 63
 2ca:	f8 94       	cli
 2cc:	de bf       	out	0x3e, r29	; 62
 2ce:	0f be       	out	0x3f, r0	; 63
 2d0:	cd bf       	out	0x3d, r28	; 61

 }
 2d2:	c0 5c       	subi	r28, 0xC0	; 192
 2d4:	df 4f       	sbci	r29, 0xFF	; 255
 2d6:	0f b6       	in	r0, 0x3f	; 63
 2d8:	f8 94       	cli
 2da:	de bf       	out	0x3e, r29	; 62
 2dc:	0f be       	out	0x3f, r0	; 63
 2de:	cd bf       	out	0x3d, r28	; 61
 2e0:	df 91       	pop	r29
 2e2:	cf 91       	pop	r28
 2e4:	1f 91       	pop	r17
 2e6:	0f 91       	pop	r16
 2e8:	ff 90       	pop	r15
 2ea:	ef 90       	pop	r14
 2ec:	df 90       	pop	r13
 2ee:	cf 90       	pop	r12
 2f0:	08 95       	ret

000002f2 <main>:
#include <avr/io.h>
#include "LCD_Write.h"


int main(void)
{
 2f2:	cf 93       	push	r28
 2f4:	df 93       	push	r29
	uint16_t adc_reading_lm35 = 0x0;
	uint16_t adc_reading_diode = 0x0;
	uint8_t temperture_lm35 = 0x0;
	uint8_t temperture_diode = 0x0;

	adc_reading_lm35 = ADCRead(0x0);  //Reads ADC, the input is the number number of the ADC
 2f6:	80 e0       	ldi	r24, 0x00	; 0
 2f8:	90 e0       	ldi	r25, 0x00	; 0
 2fa:	0e 94 4b 00 	call	0x96	; 0x96 <ADCRead>
 2fe:	ec 01       	movw	r28, r24
	adc_reading_diode = ADCRead(0x1);
 300:	81 e0       	ldi	r24, 0x01	; 1
 302:	90 e0       	ldi	r25, 0x00	; 0
 304:	0e 94 4b 00 	call	0x96	; 0x96 <ADCRead>

	lcd_write(adc_reading_lm35, adc_reading_diode, temperture_lm35, temperture_diode);
 308:	20 e0       	ldi	r18, 0x00	; 0
 30a:	40 e0       	ldi	r20, 0x00	; 0
 30c:	bc 01       	movw	r22, r24
 30e:	ce 01       	movw	r24, r28
 310:	0e 94 21 01 	call	0x242	; 0x242 <lcd_write>
}
 314:	80 e0       	ldi	r24, 0x00	; 0
 316:	90 e0       	ldi	r25, 0x00	; 0
 318:	df 91       	pop	r29
 31a:	cf 91       	pop	r28
 31c:	08 95       	ret

0000031e <sprintf>:
 31e:	ae e0       	ldi	r26, 0x0E	; 14
 320:	b0 e0       	ldi	r27, 0x00	; 0
 322:	e5 e9       	ldi	r30, 0x95	; 149
 324:	f1 e0       	ldi	r31, 0x01	; 1
 326:	0c 94 3e 04 	jmp	0x87c	; 0x87c <__prologue_saves__+0x1c>
 32a:	0d 89       	ldd	r16, Y+21	; 0x15
 32c:	1e 89       	ldd	r17, Y+22	; 0x16
 32e:	86 e0       	ldi	r24, 0x06	; 6
 330:	8c 83       	std	Y+4, r24	; 0x04
 332:	1a 83       	std	Y+2, r17	; 0x02
 334:	09 83       	std	Y+1, r16	; 0x01
 336:	8f ef       	ldi	r24, 0xFF	; 255
 338:	9f e7       	ldi	r25, 0x7F	; 127
 33a:	9e 83       	std	Y+6, r25	; 0x06
 33c:	8d 83       	std	Y+5, r24	; 0x05
 33e:	ae 01       	movw	r20, r28
 340:	47 5e       	subi	r20, 0xE7	; 231
 342:	5f 4f       	sbci	r21, 0xFF	; 255
 344:	6f 89       	ldd	r22, Y+23	; 0x17
 346:	78 8d       	ldd	r23, Y+24	; 0x18
 348:	ce 01       	movw	r24, r28
 34a:	01 96       	adiw	r24, 0x01	; 1
 34c:	0e 94 b2 01 	call	0x364	; 0x364 <vfprintf>
 350:	2f 81       	ldd	r18, Y+7	; 0x07
 352:	38 85       	ldd	r19, Y+8	; 0x08
 354:	f8 01       	movw	r30, r16
 356:	e2 0f       	add	r30, r18
 358:	f3 1f       	adc	r31, r19
 35a:	10 82       	st	Z, r1
 35c:	2e 96       	adiw	r28, 0x0e	; 14
 35e:	e4 e0       	ldi	r30, 0x04	; 4
 360:	0c 94 5a 04 	jmp	0x8b4	; 0x8b4 <__epilogue_restores__+0x1c>

00000364 <vfprintf>:
 364:	ac e0       	ldi	r26, 0x0C	; 12
 366:	b0 e0       	ldi	r27, 0x00	; 0
 368:	e8 eb       	ldi	r30, 0xB8	; 184
 36a:	f1 e0       	ldi	r31, 0x01	; 1
 36c:	0c 94 30 04 	jmp	0x860	; 0x860 <__prologue_saves__>
 370:	7c 01       	movw	r14, r24
 372:	6b 01       	movw	r12, r22
 374:	8a 01       	movw	r16, r20
 376:	fc 01       	movw	r30, r24
 378:	17 82       	std	Z+7, r1	; 0x07
 37a:	16 82       	std	Z+6, r1	; 0x06
 37c:	83 81       	ldd	r24, Z+3	; 0x03
 37e:	81 ff       	sbrs	r24, 1
 380:	bd c1       	rjmp	.+890    	; 0x6fc <__LOCK_REGION_LENGTH__+0x2fc>
 382:	ce 01       	movw	r24, r28
 384:	01 96       	adiw	r24, 0x01	; 1
 386:	4c 01       	movw	r8, r24
 388:	f7 01       	movw	r30, r14
 38a:	93 81       	ldd	r25, Z+3	; 0x03
 38c:	f6 01       	movw	r30, r12
 38e:	93 fd       	sbrc	r25, 3
 390:	85 91       	lpm	r24, Z+
 392:	93 ff       	sbrs	r25, 3
 394:	81 91       	ld	r24, Z+
 396:	6f 01       	movw	r12, r30
 398:	88 23       	and	r24, r24
 39a:	09 f4       	brne	.+2      	; 0x39e <vfprintf+0x3a>
 39c:	ab c1       	rjmp	.+854    	; 0x6f4 <__LOCK_REGION_LENGTH__+0x2f4>
 39e:	85 32       	cpi	r24, 0x25	; 37
 3a0:	39 f4       	brne	.+14     	; 0x3b0 <vfprintf+0x4c>
 3a2:	93 fd       	sbrc	r25, 3
 3a4:	85 91       	lpm	r24, Z+
 3a6:	93 ff       	sbrs	r25, 3
 3a8:	81 91       	ld	r24, Z+
 3aa:	6f 01       	movw	r12, r30
 3ac:	85 32       	cpi	r24, 0x25	; 37
 3ae:	29 f4       	brne	.+10     	; 0x3ba <vfprintf+0x56>
 3b0:	b7 01       	movw	r22, r14
 3b2:	90 e0       	ldi	r25, 0x00	; 0
 3b4:	0e 94 9a 03 	call	0x734	; 0x734 <fputc>
 3b8:	e7 cf       	rjmp	.-50     	; 0x388 <vfprintf+0x24>
 3ba:	51 2c       	mov	r5, r1
 3bc:	31 2c       	mov	r3, r1
 3be:	20 e0       	ldi	r18, 0x00	; 0
 3c0:	20 32       	cpi	r18, 0x20	; 32
 3c2:	a0 f4       	brcc	.+40     	; 0x3ec <vfprintf+0x88>
 3c4:	8b 32       	cpi	r24, 0x2B	; 43
 3c6:	69 f0       	breq	.+26     	; 0x3e2 <vfprintf+0x7e>
 3c8:	30 f4       	brcc	.+12     	; 0x3d6 <vfprintf+0x72>
 3ca:	80 32       	cpi	r24, 0x20	; 32
 3cc:	59 f0       	breq	.+22     	; 0x3e4 <vfprintf+0x80>
 3ce:	83 32       	cpi	r24, 0x23	; 35
 3d0:	69 f4       	brne	.+26     	; 0x3ec <vfprintf+0x88>
 3d2:	20 61       	ori	r18, 0x10	; 16
 3d4:	2c c0       	rjmp	.+88     	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
 3d6:	8d 32       	cpi	r24, 0x2D	; 45
 3d8:	39 f0       	breq	.+14     	; 0x3e8 <vfprintf+0x84>
 3da:	80 33       	cpi	r24, 0x30	; 48
 3dc:	39 f4       	brne	.+14     	; 0x3ec <vfprintf+0x88>
 3de:	21 60       	ori	r18, 0x01	; 1
 3e0:	26 c0       	rjmp	.+76     	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
 3e2:	22 60       	ori	r18, 0x02	; 2
 3e4:	24 60       	ori	r18, 0x04	; 4
 3e6:	23 c0       	rjmp	.+70     	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
 3e8:	28 60       	ori	r18, 0x08	; 8
 3ea:	21 c0       	rjmp	.+66     	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
 3ec:	27 fd       	sbrc	r18, 7
 3ee:	27 c0       	rjmp	.+78     	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
 3f0:	30 ed       	ldi	r19, 0xD0	; 208
 3f2:	38 0f       	add	r19, r24
 3f4:	3a 30       	cpi	r19, 0x0A	; 10
 3f6:	78 f4       	brcc	.+30     	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 3f8:	26 ff       	sbrs	r18, 6
 3fa:	06 c0       	rjmp	.+12     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 3fc:	fa e0       	ldi	r31, 0x0A	; 10
 3fe:	5f 9e       	mul	r5, r31
 400:	30 0d       	add	r19, r0
 402:	11 24       	eor	r1, r1
 404:	53 2e       	mov	r5, r19
 406:	13 c0       	rjmp	.+38     	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
 408:	8a e0       	ldi	r24, 0x0A	; 10
 40a:	38 9e       	mul	r3, r24
 40c:	30 0d       	add	r19, r0
 40e:	11 24       	eor	r1, r1
 410:	33 2e       	mov	r3, r19
 412:	20 62       	ori	r18, 0x20	; 32
 414:	0c c0       	rjmp	.+24     	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
 416:	8e 32       	cpi	r24, 0x2E	; 46
 418:	21 f4       	brne	.+8      	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
 41a:	26 fd       	sbrc	r18, 6
 41c:	6b c1       	rjmp	.+726    	; 0x6f4 <__LOCK_REGION_LENGTH__+0x2f4>
 41e:	20 64       	ori	r18, 0x40	; 64
 420:	06 c0       	rjmp	.+12     	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
 422:	8c 36       	cpi	r24, 0x6C	; 108
 424:	11 f4       	brne	.+4      	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 426:	20 68       	ori	r18, 0x80	; 128
 428:	02 c0       	rjmp	.+4      	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
 42a:	88 36       	cpi	r24, 0x68	; 104
 42c:	41 f4       	brne	.+16     	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
 42e:	f6 01       	movw	r30, r12
 430:	93 fd       	sbrc	r25, 3
 432:	85 91       	lpm	r24, Z+
 434:	93 ff       	sbrs	r25, 3
 436:	81 91       	ld	r24, Z+
 438:	6f 01       	movw	r12, r30
 43a:	81 11       	cpse	r24, r1
 43c:	c1 cf       	rjmp	.-126    	; 0x3c0 <vfprintf+0x5c>
 43e:	98 2f       	mov	r25, r24
 440:	9f 7d       	andi	r25, 0xDF	; 223
 442:	95 54       	subi	r25, 0x45	; 69
 444:	93 30       	cpi	r25, 0x03	; 3
 446:	28 f4       	brcc	.+10     	; 0x452 <__LOCK_REGION_LENGTH__+0x52>
 448:	0c 5f       	subi	r16, 0xFC	; 252
 44a:	1f 4f       	sbci	r17, 0xFF	; 255
 44c:	ff e3       	ldi	r31, 0x3F	; 63
 44e:	f9 83       	std	Y+1, r31	; 0x01
 450:	0d c0       	rjmp	.+26     	; 0x46c <__LOCK_REGION_LENGTH__+0x6c>
 452:	83 36       	cpi	r24, 0x63	; 99
 454:	31 f0       	breq	.+12     	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
 456:	83 37       	cpi	r24, 0x73	; 115
 458:	71 f0       	breq	.+28     	; 0x476 <__LOCK_REGION_LENGTH__+0x76>
 45a:	83 35       	cpi	r24, 0x53	; 83
 45c:	09 f0       	breq	.+2      	; 0x460 <__LOCK_REGION_LENGTH__+0x60>
 45e:	5b c0       	rjmp	.+182    	; 0x516 <__LOCK_REGION_LENGTH__+0x116>
 460:	22 c0       	rjmp	.+68     	; 0x4a6 <__LOCK_REGION_LENGTH__+0xa6>
 462:	f8 01       	movw	r30, r16
 464:	80 81       	ld	r24, Z
 466:	89 83       	std	Y+1, r24	; 0x01
 468:	0e 5f       	subi	r16, 0xFE	; 254
 46a:	1f 4f       	sbci	r17, 0xFF	; 255
 46c:	44 24       	eor	r4, r4
 46e:	43 94       	inc	r4
 470:	51 2c       	mov	r5, r1
 472:	54 01       	movw	r10, r8
 474:	15 c0       	rjmp	.+42     	; 0x4a0 <__LOCK_REGION_LENGTH__+0xa0>
 476:	38 01       	movw	r6, r16
 478:	f2 e0       	ldi	r31, 0x02	; 2
 47a:	6f 0e       	add	r6, r31
 47c:	71 1c       	adc	r7, r1
 47e:	f8 01       	movw	r30, r16
 480:	a0 80       	ld	r10, Z
 482:	b1 80       	ldd	r11, Z+1	; 0x01
 484:	26 ff       	sbrs	r18, 6
 486:	03 c0       	rjmp	.+6      	; 0x48e <__LOCK_REGION_LENGTH__+0x8e>
 488:	65 2d       	mov	r22, r5
 48a:	70 e0       	ldi	r23, 0x00	; 0
 48c:	02 c0       	rjmp	.+4      	; 0x492 <__LOCK_REGION_LENGTH__+0x92>
 48e:	6f ef       	ldi	r22, 0xFF	; 255
 490:	7f ef       	ldi	r23, 0xFF	; 255
 492:	c5 01       	movw	r24, r10
 494:	2c 87       	std	Y+12, r18	; 0x0c
 496:	0e 94 8f 03 	call	0x71e	; 0x71e <strnlen>
 49a:	2c 01       	movw	r4, r24
 49c:	83 01       	movw	r16, r6
 49e:	2c 85       	ldd	r18, Y+12	; 0x0c
 4a0:	2f 77       	andi	r18, 0x7F	; 127
 4a2:	22 2e       	mov	r2, r18
 4a4:	17 c0       	rjmp	.+46     	; 0x4d4 <__LOCK_REGION_LENGTH__+0xd4>
 4a6:	38 01       	movw	r6, r16
 4a8:	f2 e0       	ldi	r31, 0x02	; 2
 4aa:	6f 0e       	add	r6, r31
 4ac:	71 1c       	adc	r7, r1
 4ae:	f8 01       	movw	r30, r16
 4b0:	a0 80       	ld	r10, Z
 4b2:	b1 80       	ldd	r11, Z+1	; 0x01
 4b4:	26 ff       	sbrs	r18, 6
 4b6:	03 c0       	rjmp	.+6      	; 0x4be <__LOCK_REGION_LENGTH__+0xbe>
 4b8:	65 2d       	mov	r22, r5
 4ba:	70 e0       	ldi	r23, 0x00	; 0
 4bc:	02 c0       	rjmp	.+4      	; 0x4c2 <__LOCK_REGION_LENGTH__+0xc2>
 4be:	6f ef       	ldi	r22, 0xFF	; 255
 4c0:	7f ef       	ldi	r23, 0xFF	; 255
 4c2:	c5 01       	movw	r24, r10
 4c4:	2c 87       	std	Y+12, r18	; 0x0c
 4c6:	0e 94 84 03 	call	0x708	; 0x708 <strnlen_P>
 4ca:	2c 01       	movw	r4, r24
 4cc:	2c 85       	ldd	r18, Y+12	; 0x0c
 4ce:	20 68       	ori	r18, 0x80	; 128
 4d0:	22 2e       	mov	r2, r18
 4d2:	83 01       	movw	r16, r6
 4d4:	23 fc       	sbrc	r2, 3
 4d6:	1b c0       	rjmp	.+54     	; 0x50e <__LOCK_REGION_LENGTH__+0x10e>
 4d8:	83 2d       	mov	r24, r3
 4da:	90 e0       	ldi	r25, 0x00	; 0
 4dc:	48 16       	cp	r4, r24
 4de:	59 06       	cpc	r5, r25
 4e0:	b0 f4       	brcc	.+44     	; 0x50e <__LOCK_REGION_LENGTH__+0x10e>
 4e2:	b7 01       	movw	r22, r14
 4e4:	80 e2       	ldi	r24, 0x20	; 32
 4e6:	90 e0       	ldi	r25, 0x00	; 0
 4e8:	0e 94 9a 03 	call	0x734	; 0x734 <fputc>
 4ec:	3a 94       	dec	r3
 4ee:	f4 cf       	rjmp	.-24     	; 0x4d8 <__LOCK_REGION_LENGTH__+0xd8>
 4f0:	f5 01       	movw	r30, r10
 4f2:	27 fc       	sbrc	r2, 7
 4f4:	85 91       	lpm	r24, Z+
 4f6:	27 fe       	sbrs	r2, 7
 4f8:	81 91       	ld	r24, Z+
 4fa:	5f 01       	movw	r10, r30
 4fc:	b7 01       	movw	r22, r14
 4fe:	90 e0       	ldi	r25, 0x00	; 0
 500:	0e 94 9a 03 	call	0x734	; 0x734 <fputc>
 504:	31 10       	cpse	r3, r1
 506:	3a 94       	dec	r3
 508:	f1 e0       	ldi	r31, 0x01	; 1
 50a:	4f 1a       	sub	r4, r31
 50c:	51 08       	sbc	r5, r1
 50e:	41 14       	cp	r4, r1
 510:	51 04       	cpc	r5, r1
 512:	71 f7       	brne	.-36     	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
 514:	e5 c0       	rjmp	.+458    	; 0x6e0 <__LOCK_REGION_LENGTH__+0x2e0>
 516:	84 36       	cpi	r24, 0x64	; 100
 518:	11 f0       	breq	.+4      	; 0x51e <__LOCK_REGION_LENGTH__+0x11e>
 51a:	89 36       	cpi	r24, 0x69	; 105
 51c:	39 f5       	brne	.+78     	; 0x56c <__LOCK_REGION_LENGTH__+0x16c>
 51e:	f8 01       	movw	r30, r16
 520:	27 ff       	sbrs	r18, 7
 522:	07 c0       	rjmp	.+14     	; 0x532 <__LOCK_REGION_LENGTH__+0x132>
 524:	60 81       	ld	r22, Z
 526:	71 81       	ldd	r23, Z+1	; 0x01
 528:	82 81       	ldd	r24, Z+2	; 0x02
 52a:	93 81       	ldd	r25, Z+3	; 0x03
 52c:	0c 5f       	subi	r16, 0xFC	; 252
 52e:	1f 4f       	sbci	r17, 0xFF	; 255
 530:	08 c0       	rjmp	.+16     	; 0x542 <__LOCK_REGION_LENGTH__+0x142>
 532:	60 81       	ld	r22, Z
 534:	71 81       	ldd	r23, Z+1	; 0x01
 536:	07 2e       	mov	r0, r23
 538:	00 0c       	add	r0, r0
 53a:	88 0b       	sbc	r24, r24
 53c:	99 0b       	sbc	r25, r25
 53e:	0e 5f       	subi	r16, 0xFE	; 254
 540:	1f 4f       	sbci	r17, 0xFF	; 255
 542:	2f 76       	andi	r18, 0x6F	; 111
 544:	72 2e       	mov	r7, r18
 546:	97 ff       	sbrs	r25, 7
 548:	09 c0       	rjmp	.+18     	; 0x55c <__LOCK_REGION_LENGTH__+0x15c>
 54a:	90 95       	com	r25
 54c:	80 95       	com	r24
 54e:	70 95       	com	r23
 550:	61 95       	neg	r22
 552:	7f 4f       	sbci	r23, 0xFF	; 255
 554:	8f 4f       	sbci	r24, 0xFF	; 255
 556:	9f 4f       	sbci	r25, 0xFF	; 255
 558:	20 68       	ori	r18, 0x80	; 128
 55a:	72 2e       	mov	r7, r18
 55c:	2a e0       	ldi	r18, 0x0A	; 10
 55e:	30 e0       	ldi	r19, 0x00	; 0
 560:	a4 01       	movw	r20, r8
 562:	0e 94 d2 03 	call	0x7a4	; 0x7a4 <__ultoa_invert>
 566:	a8 2e       	mov	r10, r24
 568:	a8 18       	sub	r10, r8
 56a:	44 c0       	rjmp	.+136    	; 0x5f4 <__LOCK_REGION_LENGTH__+0x1f4>
 56c:	85 37       	cpi	r24, 0x75	; 117
 56e:	29 f4       	brne	.+10     	; 0x57a <__LOCK_REGION_LENGTH__+0x17a>
 570:	2f 7e       	andi	r18, 0xEF	; 239
 572:	b2 2e       	mov	r11, r18
 574:	2a e0       	ldi	r18, 0x0A	; 10
 576:	30 e0       	ldi	r19, 0x00	; 0
 578:	25 c0       	rjmp	.+74     	; 0x5c4 <__LOCK_REGION_LENGTH__+0x1c4>
 57a:	f2 2f       	mov	r31, r18
 57c:	f9 7f       	andi	r31, 0xF9	; 249
 57e:	bf 2e       	mov	r11, r31
 580:	8f 36       	cpi	r24, 0x6F	; 111
 582:	c1 f0       	breq	.+48     	; 0x5b4 <__LOCK_REGION_LENGTH__+0x1b4>
 584:	18 f4       	brcc	.+6      	; 0x58c <__LOCK_REGION_LENGTH__+0x18c>
 586:	88 35       	cpi	r24, 0x58	; 88
 588:	79 f0       	breq	.+30     	; 0x5a8 <__LOCK_REGION_LENGTH__+0x1a8>
 58a:	b4 c0       	rjmp	.+360    	; 0x6f4 <__LOCK_REGION_LENGTH__+0x2f4>
 58c:	80 37       	cpi	r24, 0x70	; 112
 58e:	19 f0       	breq	.+6      	; 0x596 <__LOCK_REGION_LENGTH__+0x196>
 590:	88 37       	cpi	r24, 0x78	; 120
 592:	21 f0       	breq	.+8      	; 0x59c <__LOCK_REGION_LENGTH__+0x19c>
 594:	af c0       	rjmp	.+350    	; 0x6f4 <__LOCK_REGION_LENGTH__+0x2f4>
 596:	2f 2f       	mov	r18, r31
 598:	20 61       	ori	r18, 0x10	; 16
 59a:	b2 2e       	mov	r11, r18
 59c:	b4 fe       	sbrs	r11, 4
 59e:	0d c0       	rjmp	.+26     	; 0x5ba <__LOCK_REGION_LENGTH__+0x1ba>
 5a0:	8b 2d       	mov	r24, r11
 5a2:	84 60       	ori	r24, 0x04	; 4
 5a4:	b8 2e       	mov	r11, r24
 5a6:	09 c0       	rjmp	.+18     	; 0x5ba <__LOCK_REGION_LENGTH__+0x1ba>
 5a8:	24 ff       	sbrs	r18, 4
 5aa:	0a c0       	rjmp	.+20     	; 0x5c0 <__LOCK_REGION_LENGTH__+0x1c0>
 5ac:	9f 2f       	mov	r25, r31
 5ae:	96 60       	ori	r25, 0x06	; 6
 5b0:	b9 2e       	mov	r11, r25
 5b2:	06 c0       	rjmp	.+12     	; 0x5c0 <__LOCK_REGION_LENGTH__+0x1c0>
 5b4:	28 e0       	ldi	r18, 0x08	; 8
 5b6:	30 e0       	ldi	r19, 0x00	; 0
 5b8:	05 c0       	rjmp	.+10     	; 0x5c4 <__LOCK_REGION_LENGTH__+0x1c4>
 5ba:	20 e1       	ldi	r18, 0x10	; 16
 5bc:	30 e0       	ldi	r19, 0x00	; 0
 5be:	02 c0       	rjmp	.+4      	; 0x5c4 <__LOCK_REGION_LENGTH__+0x1c4>
 5c0:	20 e1       	ldi	r18, 0x10	; 16
 5c2:	32 e0       	ldi	r19, 0x02	; 2
 5c4:	f8 01       	movw	r30, r16
 5c6:	b7 fe       	sbrs	r11, 7
 5c8:	07 c0       	rjmp	.+14     	; 0x5d8 <__LOCK_REGION_LENGTH__+0x1d8>
 5ca:	60 81       	ld	r22, Z
 5cc:	71 81       	ldd	r23, Z+1	; 0x01
 5ce:	82 81       	ldd	r24, Z+2	; 0x02
 5d0:	93 81       	ldd	r25, Z+3	; 0x03
 5d2:	0c 5f       	subi	r16, 0xFC	; 252
 5d4:	1f 4f       	sbci	r17, 0xFF	; 255
 5d6:	06 c0       	rjmp	.+12     	; 0x5e4 <__LOCK_REGION_LENGTH__+0x1e4>
 5d8:	60 81       	ld	r22, Z
 5da:	71 81       	ldd	r23, Z+1	; 0x01
 5dc:	80 e0       	ldi	r24, 0x00	; 0
 5de:	90 e0       	ldi	r25, 0x00	; 0
 5e0:	0e 5f       	subi	r16, 0xFE	; 254
 5e2:	1f 4f       	sbci	r17, 0xFF	; 255
 5e4:	a4 01       	movw	r20, r8
 5e6:	0e 94 d2 03 	call	0x7a4	; 0x7a4 <__ultoa_invert>
 5ea:	a8 2e       	mov	r10, r24
 5ec:	a8 18       	sub	r10, r8
 5ee:	fb 2d       	mov	r31, r11
 5f0:	ff 77       	andi	r31, 0x7F	; 127
 5f2:	7f 2e       	mov	r7, r31
 5f4:	76 fe       	sbrs	r7, 6
 5f6:	0b c0       	rjmp	.+22     	; 0x60e <__LOCK_REGION_LENGTH__+0x20e>
 5f8:	37 2d       	mov	r19, r7
 5fa:	3e 7f       	andi	r19, 0xFE	; 254
 5fc:	a5 14       	cp	r10, r5
 5fe:	50 f4       	brcc	.+20     	; 0x614 <__LOCK_REGION_LENGTH__+0x214>
 600:	74 fe       	sbrs	r7, 4
 602:	0a c0       	rjmp	.+20     	; 0x618 <__LOCK_REGION_LENGTH__+0x218>
 604:	72 fc       	sbrc	r7, 2
 606:	08 c0       	rjmp	.+16     	; 0x618 <__LOCK_REGION_LENGTH__+0x218>
 608:	37 2d       	mov	r19, r7
 60a:	3e 7e       	andi	r19, 0xEE	; 238
 60c:	05 c0       	rjmp	.+10     	; 0x618 <__LOCK_REGION_LENGTH__+0x218>
 60e:	ba 2c       	mov	r11, r10
 610:	37 2d       	mov	r19, r7
 612:	03 c0       	rjmp	.+6      	; 0x61a <__LOCK_REGION_LENGTH__+0x21a>
 614:	ba 2c       	mov	r11, r10
 616:	01 c0       	rjmp	.+2      	; 0x61a <__LOCK_REGION_LENGTH__+0x21a>
 618:	b5 2c       	mov	r11, r5
 61a:	34 ff       	sbrs	r19, 4
 61c:	0d c0       	rjmp	.+26     	; 0x638 <__LOCK_REGION_LENGTH__+0x238>
 61e:	fe 01       	movw	r30, r28
 620:	ea 0d       	add	r30, r10
 622:	f1 1d       	adc	r31, r1
 624:	80 81       	ld	r24, Z
 626:	80 33       	cpi	r24, 0x30	; 48
 628:	11 f4       	brne	.+4      	; 0x62e <__LOCK_REGION_LENGTH__+0x22e>
 62a:	39 7e       	andi	r19, 0xE9	; 233
 62c:	09 c0       	rjmp	.+18     	; 0x640 <__LOCK_REGION_LENGTH__+0x240>
 62e:	32 ff       	sbrs	r19, 2
 630:	06 c0       	rjmp	.+12     	; 0x63e <__LOCK_REGION_LENGTH__+0x23e>
 632:	b3 94       	inc	r11
 634:	b3 94       	inc	r11
 636:	04 c0       	rjmp	.+8      	; 0x640 <__LOCK_REGION_LENGTH__+0x240>
 638:	83 2f       	mov	r24, r19
 63a:	86 78       	andi	r24, 0x86	; 134
 63c:	09 f0       	breq	.+2      	; 0x640 <__LOCK_REGION_LENGTH__+0x240>
 63e:	b3 94       	inc	r11
 640:	33 fd       	sbrc	r19, 3
 642:	13 c0       	rjmp	.+38     	; 0x66a <__LOCK_REGION_LENGTH__+0x26a>
 644:	30 ff       	sbrs	r19, 0
 646:	06 c0       	rjmp	.+12     	; 0x654 <__LOCK_REGION_LENGTH__+0x254>
 648:	5a 2c       	mov	r5, r10
 64a:	b3 14       	cp	r11, r3
 64c:	18 f4       	brcc	.+6      	; 0x654 <__LOCK_REGION_LENGTH__+0x254>
 64e:	53 0c       	add	r5, r3
 650:	5b 18       	sub	r5, r11
 652:	b3 2c       	mov	r11, r3
 654:	b3 14       	cp	r11, r3
 656:	68 f4       	brcc	.+26     	; 0x672 <__LOCK_REGION_LENGTH__+0x272>
 658:	b7 01       	movw	r22, r14
 65a:	80 e2       	ldi	r24, 0x20	; 32
 65c:	90 e0       	ldi	r25, 0x00	; 0
 65e:	3c 87       	std	Y+12, r19	; 0x0c
 660:	0e 94 9a 03 	call	0x734	; 0x734 <fputc>
 664:	b3 94       	inc	r11
 666:	3c 85       	ldd	r19, Y+12	; 0x0c
 668:	f5 cf       	rjmp	.-22     	; 0x654 <__LOCK_REGION_LENGTH__+0x254>
 66a:	b3 14       	cp	r11, r3
 66c:	10 f4       	brcc	.+4      	; 0x672 <__LOCK_REGION_LENGTH__+0x272>
 66e:	3b 18       	sub	r3, r11
 670:	01 c0       	rjmp	.+2      	; 0x674 <__LOCK_REGION_LENGTH__+0x274>
 672:	31 2c       	mov	r3, r1
 674:	34 ff       	sbrs	r19, 4
 676:	12 c0       	rjmp	.+36     	; 0x69c <__LOCK_REGION_LENGTH__+0x29c>
 678:	b7 01       	movw	r22, r14
 67a:	80 e3       	ldi	r24, 0x30	; 48
 67c:	90 e0       	ldi	r25, 0x00	; 0
 67e:	3c 87       	std	Y+12, r19	; 0x0c
 680:	0e 94 9a 03 	call	0x734	; 0x734 <fputc>
 684:	3c 85       	ldd	r19, Y+12	; 0x0c
 686:	32 ff       	sbrs	r19, 2
 688:	17 c0       	rjmp	.+46     	; 0x6b8 <__LOCK_REGION_LENGTH__+0x2b8>
 68a:	31 fd       	sbrc	r19, 1
 68c:	03 c0       	rjmp	.+6      	; 0x694 <__LOCK_REGION_LENGTH__+0x294>
 68e:	88 e7       	ldi	r24, 0x78	; 120
 690:	90 e0       	ldi	r25, 0x00	; 0
 692:	02 c0       	rjmp	.+4      	; 0x698 <__LOCK_REGION_LENGTH__+0x298>
 694:	88 e5       	ldi	r24, 0x58	; 88
 696:	90 e0       	ldi	r25, 0x00	; 0
 698:	b7 01       	movw	r22, r14
 69a:	0c c0       	rjmp	.+24     	; 0x6b4 <__LOCK_REGION_LENGTH__+0x2b4>
 69c:	83 2f       	mov	r24, r19
 69e:	86 78       	andi	r24, 0x86	; 134
 6a0:	59 f0       	breq	.+22     	; 0x6b8 <__LOCK_REGION_LENGTH__+0x2b8>
 6a2:	31 ff       	sbrs	r19, 1
 6a4:	02 c0       	rjmp	.+4      	; 0x6aa <__LOCK_REGION_LENGTH__+0x2aa>
 6a6:	8b e2       	ldi	r24, 0x2B	; 43
 6a8:	01 c0       	rjmp	.+2      	; 0x6ac <__LOCK_REGION_LENGTH__+0x2ac>
 6aa:	80 e2       	ldi	r24, 0x20	; 32
 6ac:	37 fd       	sbrc	r19, 7
 6ae:	8d e2       	ldi	r24, 0x2D	; 45
 6b0:	b7 01       	movw	r22, r14
 6b2:	90 e0       	ldi	r25, 0x00	; 0
 6b4:	0e 94 9a 03 	call	0x734	; 0x734 <fputc>
 6b8:	a5 14       	cp	r10, r5
 6ba:	38 f4       	brcc	.+14     	; 0x6ca <__LOCK_REGION_LENGTH__+0x2ca>
 6bc:	b7 01       	movw	r22, r14
 6be:	80 e3       	ldi	r24, 0x30	; 48
 6c0:	90 e0       	ldi	r25, 0x00	; 0
 6c2:	0e 94 9a 03 	call	0x734	; 0x734 <fputc>
 6c6:	5a 94       	dec	r5
 6c8:	f7 cf       	rjmp	.-18     	; 0x6b8 <__LOCK_REGION_LENGTH__+0x2b8>
 6ca:	aa 94       	dec	r10
 6cc:	f4 01       	movw	r30, r8
 6ce:	ea 0d       	add	r30, r10
 6d0:	f1 1d       	adc	r31, r1
 6d2:	80 81       	ld	r24, Z
 6d4:	b7 01       	movw	r22, r14
 6d6:	90 e0       	ldi	r25, 0x00	; 0
 6d8:	0e 94 9a 03 	call	0x734	; 0x734 <fputc>
 6dc:	a1 10       	cpse	r10, r1
 6de:	f5 cf       	rjmp	.-22     	; 0x6ca <__LOCK_REGION_LENGTH__+0x2ca>
 6e0:	33 20       	and	r3, r3
 6e2:	09 f4       	brne	.+2      	; 0x6e6 <__LOCK_REGION_LENGTH__+0x2e6>
 6e4:	51 ce       	rjmp	.-862    	; 0x388 <vfprintf+0x24>
 6e6:	b7 01       	movw	r22, r14
 6e8:	80 e2       	ldi	r24, 0x20	; 32
 6ea:	90 e0       	ldi	r25, 0x00	; 0
 6ec:	0e 94 9a 03 	call	0x734	; 0x734 <fputc>
 6f0:	3a 94       	dec	r3
 6f2:	f6 cf       	rjmp	.-20     	; 0x6e0 <__LOCK_REGION_LENGTH__+0x2e0>
 6f4:	f7 01       	movw	r30, r14
 6f6:	86 81       	ldd	r24, Z+6	; 0x06
 6f8:	97 81       	ldd	r25, Z+7	; 0x07
 6fa:	02 c0       	rjmp	.+4      	; 0x700 <__LOCK_REGION_LENGTH__+0x300>
 6fc:	8f ef       	ldi	r24, 0xFF	; 255
 6fe:	9f ef       	ldi	r25, 0xFF	; 255
 700:	2c 96       	adiw	r28, 0x0c	; 12
 702:	e2 e1       	ldi	r30, 0x12	; 18
 704:	0c 94 4c 04 	jmp	0x898	; 0x898 <__epilogue_restores__>

00000708 <strnlen_P>:
 708:	fc 01       	movw	r30, r24
 70a:	05 90       	lpm	r0, Z+
 70c:	61 50       	subi	r22, 0x01	; 1
 70e:	70 40       	sbci	r23, 0x00	; 0
 710:	01 10       	cpse	r0, r1
 712:	d8 f7       	brcc	.-10     	; 0x70a <strnlen_P+0x2>
 714:	80 95       	com	r24
 716:	90 95       	com	r25
 718:	8e 0f       	add	r24, r30
 71a:	9f 1f       	adc	r25, r31
 71c:	08 95       	ret

0000071e <strnlen>:
 71e:	fc 01       	movw	r30, r24
 720:	61 50       	subi	r22, 0x01	; 1
 722:	70 40       	sbci	r23, 0x00	; 0
 724:	01 90       	ld	r0, Z+
 726:	01 10       	cpse	r0, r1
 728:	d8 f7       	brcc	.-10     	; 0x720 <strnlen+0x2>
 72a:	80 95       	com	r24
 72c:	90 95       	com	r25
 72e:	8e 0f       	add	r24, r30
 730:	9f 1f       	adc	r25, r31
 732:	08 95       	ret

00000734 <fputc>:
 734:	0f 93       	push	r16
 736:	1f 93       	push	r17
 738:	cf 93       	push	r28
 73a:	df 93       	push	r29
 73c:	fb 01       	movw	r30, r22
 73e:	23 81       	ldd	r18, Z+3	; 0x03
 740:	21 fd       	sbrc	r18, 1
 742:	03 c0       	rjmp	.+6      	; 0x74a <fputc+0x16>
 744:	8f ef       	ldi	r24, 0xFF	; 255
 746:	9f ef       	ldi	r25, 0xFF	; 255
 748:	28 c0       	rjmp	.+80     	; 0x79a <fputc+0x66>
 74a:	22 ff       	sbrs	r18, 2
 74c:	16 c0       	rjmp	.+44     	; 0x77a <fputc+0x46>
 74e:	46 81       	ldd	r20, Z+6	; 0x06
 750:	57 81       	ldd	r21, Z+7	; 0x07
 752:	24 81       	ldd	r18, Z+4	; 0x04
 754:	35 81       	ldd	r19, Z+5	; 0x05
 756:	42 17       	cp	r20, r18
 758:	53 07       	cpc	r21, r19
 75a:	44 f4       	brge	.+16     	; 0x76c <fputc+0x38>
 75c:	a0 81       	ld	r26, Z
 75e:	b1 81       	ldd	r27, Z+1	; 0x01
 760:	9d 01       	movw	r18, r26
 762:	2f 5f       	subi	r18, 0xFF	; 255
 764:	3f 4f       	sbci	r19, 0xFF	; 255
 766:	31 83       	std	Z+1, r19	; 0x01
 768:	20 83       	st	Z, r18
 76a:	8c 93       	st	X, r24
 76c:	26 81       	ldd	r18, Z+6	; 0x06
 76e:	37 81       	ldd	r19, Z+7	; 0x07
 770:	2f 5f       	subi	r18, 0xFF	; 255
 772:	3f 4f       	sbci	r19, 0xFF	; 255
 774:	37 83       	std	Z+7, r19	; 0x07
 776:	26 83       	std	Z+6, r18	; 0x06
 778:	10 c0       	rjmp	.+32     	; 0x79a <fputc+0x66>
 77a:	eb 01       	movw	r28, r22
 77c:	09 2f       	mov	r16, r25
 77e:	18 2f       	mov	r17, r24
 780:	00 84       	ldd	r0, Z+8	; 0x08
 782:	f1 85       	ldd	r31, Z+9	; 0x09
 784:	e0 2d       	mov	r30, r0
 786:	09 95       	icall
 788:	89 2b       	or	r24, r25
 78a:	e1 f6       	brne	.-72     	; 0x744 <fputc+0x10>
 78c:	8e 81       	ldd	r24, Y+6	; 0x06
 78e:	9f 81       	ldd	r25, Y+7	; 0x07
 790:	01 96       	adiw	r24, 0x01	; 1
 792:	9f 83       	std	Y+7, r25	; 0x07
 794:	8e 83       	std	Y+6, r24	; 0x06
 796:	81 2f       	mov	r24, r17
 798:	90 2f       	mov	r25, r16
 79a:	df 91       	pop	r29
 79c:	cf 91       	pop	r28
 79e:	1f 91       	pop	r17
 7a0:	0f 91       	pop	r16
 7a2:	08 95       	ret

000007a4 <__ultoa_invert>:
 7a4:	fa 01       	movw	r30, r20
 7a6:	aa 27       	eor	r26, r26
 7a8:	28 30       	cpi	r18, 0x08	; 8
 7aa:	51 f1       	breq	.+84     	; 0x800 <__ultoa_invert+0x5c>
 7ac:	20 31       	cpi	r18, 0x10	; 16
 7ae:	81 f1       	breq	.+96     	; 0x810 <__ultoa_invert+0x6c>
 7b0:	e8 94       	clt
 7b2:	6f 93       	push	r22
 7b4:	6e 7f       	andi	r22, 0xFE	; 254
 7b6:	6e 5f       	subi	r22, 0xFE	; 254
 7b8:	7f 4f       	sbci	r23, 0xFF	; 255
 7ba:	8f 4f       	sbci	r24, 0xFF	; 255
 7bc:	9f 4f       	sbci	r25, 0xFF	; 255
 7be:	af 4f       	sbci	r26, 0xFF	; 255
 7c0:	b1 e0       	ldi	r27, 0x01	; 1
 7c2:	3e d0       	rcall	.+124    	; 0x840 <__ultoa_invert+0x9c>
 7c4:	b4 e0       	ldi	r27, 0x04	; 4
 7c6:	3c d0       	rcall	.+120    	; 0x840 <__ultoa_invert+0x9c>
 7c8:	67 0f       	add	r22, r23
 7ca:	78 1f       	adc	r23, r24
 7cc:	89 1f       	adc	r24, r25
 7ce:	9a 1f       	adc	r25, r26
 7d0:	a1 1d       	adc	r26, r1
 7d2:	68 0f       	add	r22, r24
 7d4:	79 1f       	adc	r23, r25
 7d6:	8a 1f       	adc	r24, r26
 7d8:	91 1d       	adc	r25, r1
 7da:	a1 1d       	adc	r26, r1
 7dc:	6a 0f       	add	r22, r26
 7de:	71 1d       	adc	r23, r1
 7e0:	81 1d       	adc	r24, r1
 7e2:	91 1d       	adc	r25, r1
 7e4:	a1 1d       	adc	r26, r1
 7e6:	20 d0       	rcall	.+64     	; 0x828 <__ultoa_invert+0x84>
 7e8:	09 f4       	brne	.+2      	; 0x7ec <__ultoa_invert+0x48>
 7ea:	68 94       	set
 7ec:	3f 91       	pop	r19
 7ee:	2a e0       	ldi	r18, 0x0A	; 10
 7f0:	26 9f       	mul	r18, r22
 7f2:	11 24       	eor	r1, r1
 7f4:	30 19       	sub	r19, r0
 7f6:	30 5d       	subi	r19, 0xD0	; 208
 7f8:	31 93       	st	Z+, r19
 7fa:	de f6       	brtc	.-74     	; 0x7b2 <__ultoa_invert+0xe>
 7fc:	cf 01       	movw	r24, r30
 7fe:	08 95       	ret
 800:	46 2f       	mov	r20, r22
 802:	47 70       	andi	r20, 0x07	; 7
 804:	40 5d       	subi	r20, 0xD0	; 208
 806:	41 93       	st	Z+, r20
 808:	b3 e0       	ldi	r27, 0x03	; 3
 80a:	0f d0       	rcall	.+30     	; 0x82a <__ultoa_invert+0x86>
 80c:	c9 f7       	brne	.-14     	; 0x800 <__ultoa_invert+0x5c>
 80e:	f6 cf       	rjmp	.-20     	; 0x7fc <__ultoa_invert+0x58>
 810:	46 2f       	mov	r20, r22
 812:	4f 70       	andi	r20, 0x0F	; 15
 814:	40 5d       	subi	r20, 0xD0	; 208
 816:	4a 33       	cpi	r20, 0x3A	; 58
 818:	18 f0       	brcs	.+6      	; 0x820 <__ultoa_invert+0x7c>
 81a:	49 5d       	subi	r20, 0xD9	; 217
 81c:	31 fd       	sbrc	r19, 1
 81e:	40 52       	subi	r20, 0x20	; 32
 820:	41 93       	st	Z+, r20
 822:	02 d0       	rcall	.+4      	; 0x828 <__ultoa_invert+0x84>
 824:	a9 f7       	brne	.-22     	; 0x810 <__ultoa_invert+0x6c>
 826:	ea cf       	rjmp	.-44     	; 0x7fc <__ultoa_invert+0x58>
 828:	b4 e0       	ldi	r27, 0x04	; 4
 82a:	a6 95       	lsr	r26
 82c:	97 95       	ror	r25
 82e:	87 95       	ror	r24
 830:	77 95       	ror	r23
 832:	67 95       	ror	r22
 834:	ba 95       	dec	r27
 836:	c9 f7       	brne	.-14     	; 0x82a <__ultoa_invert+0x86>
 838:	00 97       	sbiw	r24, 0x00	; 0
 83a:	61 05       	cpc	r22, r1
 83c:	71 05       	cpc	r23, r1
 83e:	08 95       	ret
 840:	9b 01       	movw	r18, r22
 842:	ac 01       	movw	r20, r24
 844:	0a 2e       	mov	r0, r26
 846:	06 94       	lsr	r0
 848:	57 95       	ror	r21
 84a:	47 95       	ror	r20
 84c:	37 95       	ror	r19
 84e:	27 95       	ror	r18
 850:	ba 95       	dec	r27
 852:	c9 f7       	brne	.-14     	; 0x846 <__ultoa_invert+0xa2>
 854:	62 0f       	add	r22, r18
 856:	73 1f       	adc	r23, r19
 858:	84 1f       	adc	r24, r20
 85a:	95 1f       	adc	r25, r21
 85c:	a0 1d       	adc	r26, r0
 85e:	08 95       	ret

00000860 <__prologue_saves__>:
 860:	2f 92       	push	r2
 862:	3f 92       	push	r3
 864:	4f 92       	push	r4
 866:	5f 92       	push	r5
 868:	6f 92       	push	r6
 86a:	7f 92       	push	r7
 86c:	8f 92       	push	r8
 86e:	9f 92       	push	r9
 870:	af 92       	push	r10
 872:	bf 92       	push	r11
 874:	cf 92       	push	r12
 876:	df 92       	push	r13
 878:	ef 92       	push	r14
 87a:	ff 92       	push	r15
 87c:	0f 93       	push	r16
 87e:	1f 93       	push	r17
 880:	cf 93       	push	r28
 882:	df 93       	push	r29
 884:	cd b7       	in	r28, 0x3d	; 61
 886:	de b7       	in	r29, 0x3e	; 62
 888:	ca 1b       	sub	r28, r26
 88a:	db 0b       	sbc	r29, r27
 88c:	0f b6       	in	r0, 0x3f	; 63
 88e:	f8 94       	cli
 890:	de bf       	out	0x3e, r29	; 62
 892:	0f be       	out	0x3f, r0	; 63
 894:	cd bf       	out	0x3d, r28	; 61
 896:	09 94       	ijmp

00000898 <__epilogue_restores__>:
 898:	2a 88       	ldd	r2, Y+18	; 0x12
 89a:	39 88       	ldd	r3, Y+17	; 0x11
 89c:	48 88       	ldd	r4, Y+16	; 0x10
 89e:	5f 84       	ldd	r5, Y+15	; 0x0f
 8a0:	6e 84       	ldd	r6, Y+14	; 0x0e
 8a2:	7d 84       	ldd	r7, Y+13	; 0x0d
 8a4:	8c 84       	ldd	r8, Y+12	; 0x0c
 8a6:	9b 84       	ldd	r9, Y+11	; 0x0b
 8a8:	aa 84       	ldd	r10, Y+10	; 0x0a
 8aa:	b9 84       	ldd	r11, Y+9	; 0x09
 8ac:	c8 84       	ldd	r12, Y+8	; 0x08
 8ae:	df 80       	ldd	r13, Y+7	; 0x07
 8b0:	ee 80       	ldd	r14, Y+6	; 0x06
 8b2:	fd 80       	ldd	r15, Y+5	; 0x05
 8b4:	0c 81       	ldd	r16, Y+4	; 0x04
 8b6:	1b 81       	ldd	r17, Y+3	; 0x03
 8b8:	aa 81       	ldd	r26, Y+2	; 0x02
 8ba:	b9 81       	ldd	r27, Y+1	; 0x01
 8bc:	ce 0f       	add	r28, r30
 8be:	d1 1d       	adc	r29, r1
 8c0:	0f b6       	in	r0, 0x3f	; 63
 8c2:	f8 94       	cli
 8c4:	de bf       	out	0x3e, r29	; 62
 8c6:	0f be       	out	0x3f, r0	; 63
 8c8:	cd bf       	out	0x3d, r28	; 61
 8ca:	ed 01       	movw	r28, r26
 8cc:	08 95       	ret

000008ce <_exit>:
 8ce:	f8 94       	cli

000008d0 <__stop_program>:
 8d0:	ff cf       	rjmp	.-2      	; 0x8d0 <__stop_program>
